<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.amazech.onsked.dao.mapper.BusinessMapper">
    <resultMap id="getCourseListForClientResult" type="courseSchedule">
        <result property="courseScheduleId" column="course_schedule_id"/>
        <result property="courseScheduleName" column="course_schedule_name"/>
        <result property="courseMasterId" column="course_master_id"/>
        <result property="courseMaster.bizId" column="biz_id" />
        <result property="maxParticipants" column="max_participants"/>
        <result property="enrolledParticipants" column="enrolled_participants"/>
        <result property="isEnrolled" column="is_enrolled"/>
        <result property="startDateTime" column="start_date_time"/>
        <result property="endDateTime" column="end_date_time"/>
        <result property="totalNoOfSessions" column="total_no_of_sessions"/>
        <result property="totalSessionsCompleted" column="total_sessions_completed"/>
        <result property="isActive" column="is_active"/>
        <result property="isPublished" column="is_published"/>
        <result property="isCompleted" column="is_completed"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>


    <resultMap id="productModelResult" type="productModel">
        <result property="productModelId" column="product_model_id"/>
        <result property="productModelName" column="product_model_name"/>
        <result property="productModelTypeId" column="product_model_type_id"/>
    </resultMap>

    <resultMap id="productIssueResult" type="productIssue">
        <result property="productIssueId" column="product_issue_id"/>
        <result property="productIssueName" column="product_issue_name"/>
        <result property="productIssue" column="product_issue"/>
    </resultMap>

    <resultMap id="productHardwareIssueResult" type="productHardwareIssue">
        <result property="issueId" column="issue_id"/>
        <result property="techFormIssueId" column="tech_form_to_issue_id"/>
        <result property="productHardwareIssueName" column="issue_name"/>
        <result property="techFormId" column="tech_form_id"/>
        <result property="isPresentBefore" column="is_present_before"/>
        <result property="isPresentAfter" column="is_present_after"/>
    </resultMap>

    <resultMap id="productPartsUsedResult" type="productPartsUsed">
        <result property="productPartId" column="product_parts_id"/>
        <result property="productPartName" column="product_parts_name"/>
        <result property="partsUsedId" column="parts_used_id"/>
        <result property="partsUsedName" column="parts_used_name"/>
        <result property="techFormId" column="tech_form_id"/>
    </resultMap>

    <resultMap id="clientResultInStore" type="client">
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
    </resultMap>

    <resultMap id="CourseApptId" type="appointmentSchedule">
        <result property="apptId" column="appt_id"/>
    </resultMap>

    <resultMap id="courseDetailsList" type="course">
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="resId" column="res_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="pkgId" column="pkg_id"/>
        <result property="clientId" column="client_id"/>
        <result property="courseType" column="course_type"/>
        <result property="recurringType" column="recurring_type"/>
        <result property="numberOfDays" column="number_of_days"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="clientRefferralResult" type="clientReferral">
        <result property="bizId" column="biz_id"/>
        <result property="friendFirstName" column="f_first_name"/>
        <result property="friendLastName" column="f_last_name"/>
        <result property="friendemail" column="f_email"/>
        <result property="friendCellPhone" column="f_cell_phone"/>
        <result property="physicianFirstName" column="p_first_name"/>
        <result property="physicianLastName" column="p_last_name"/>
        <result property="physicianemail" column="p_email"/>
        <result property="physicianCellPhone" column="p_cell_phone"/>
        <result property="physicianHospital" column="p_hospital_name"/>
        <result property="insuranceReferralId" column="i_referral_id"/>
        <result property="insuranceCellPhone" column="i_company_name"/>
        <result property="insuranceCompanyName" column="i_cell_phone"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="courseDetails" type="course">
        <result property="courseId" column="course_id"/>
        <result property="courseName" column="course_name"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="stateCode" column="state_code"/>
        <result property="nickName" column="nick_name"/>
        <result property="svcName" column="svc_name"/>
        <result property="pkgName" column="pkg_name"/>
        <result property="courseType" column="course_type"/>
        <result property="recurringType" column="recurring_type"/>
        <result property="numberOfDays" column="number_of_days"/>
    </resultMap>

    <resultMap id="businessResultName" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessNameAndPIN" type="business">
        <result property="notifyByPIN" column="notify_by_PIN"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryCode" column="category_code"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="addressLine1" column="addr_line1"/>
        <result property="addressLine2" column="addr_line2"/>
        <result property="phoneNumber1" column="phone_number1"/>
        <result property="phoneNumber2" column="phone_number2"/>
        <result property="faxNumber" column="fax_number"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="currencyCode" column="currency_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="locName" column="loc_name"/>
        <result property="locId" column="loc_id"/>
        <result property="isActiveLoc" column="is_active_loc"/>
        <result property="isHeadquarters" column="is_headquarters"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
    </resultMap>

    <resultMap id="businessPromotionSummaryResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessDetailsByBizId" type="business">
        <result property="bizName" column="biz_name"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="notifyByPIN" column="notify_by_PIN"/>
        <result property="displayCounter" column="display_counter"/>
    </resultMap>

    <resultMap id="deletedBusinessesList" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="locCount" column="loc_count"/>
    </resultMap>

    <resultMap id="businessInventoryResult" type="business">
        <result property="locName" column="loc_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessPromotionSummaryResult1" type="business">
        <result property="promotionName" column="promotion_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessSummaryResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryCode" column="category_code"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="reservationLeadTime" column="reservation_lead_time"/>
        <result property="cancellationLeadTime" column="cancellation_lead_time"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="dateFormatId" column="dt_format_id"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
        <result property="categoryName" column="category_name"/>
        <result property="categoryCode" column="category_code"/>
        <result property="notifyByEmail" column="notify_by_email"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
    </resultMap>

    <resultMap id="businessSummaryResult1" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="userId" column="user_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryCode" column="category_code"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="reservationLeadTime" column="reservation_lead_time"/>
        <result property="cancellationLeadTime" column="cancellation_lead_time"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="dateFormatId" column="dt_format_id"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
        <result property="notifyByEmail" column="notify_by_email"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="notifyByPIN" column="notify_by_PIN"/>
        <result property="displayCounter" column="display_counter"/>
        <result property="udf1" column="udf1_title"/>
        <result property="udf2" column="udf2_title"/>
        <result property="udf3" column="udf3_title"/>
        <result property="udf4" column="udf4_title"/>
        <result property="udf5" column="udf5_title"/>
        <result property="manageInventory" column="manage_inventory"/>
        <result property="onlinePayment" column="online_payment"/>
        <result property="paypalHostedButtonId" column="paypal_hosted_button_id"/>
        <result property="authorizeApiLogInId" column="authorize_api_login_id"/>
        <result property="authorizeTransactionKey" column="authorize_transaction_key"/>
        <result property="countryCallingCode" column="country_calling_code"/>
    </resultMap>

    <resultMap id="businessHoursResult" type="businessHours">
        <result property="bizId" column="biz_id"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="isOpen" column="is_open"/>
        <result property="openTime" column="open_time"/>
        <result property="closeTime" column="close_time"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="selectBusinessForAppointmentResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="city" column="city"/>
        <result property="addressLine1" column="address"/>
        <result property="apptCount" column="appt_count"/>
    </resultMap>


    <resultMap id="featuredBusinessResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="bizIsActive" column="bizIsActive"/>
        <result property="featuredBizIsActive" column="featuredBizIsActive"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
    </resultMap>



    <resultMap id="locationResult" type="location">
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locName" column="loc_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="currencyCode" column="currency_code"/>
        <result property="timeZoneCode" column="timezone_code"/>
        <result property="timezone" column="timezone"/>
        <result property="phoneNumber1" column="phone_number1"/>
        <result property="phoneNumber2" column="phone_number2"/>
        <result property="faxNumber" column="fax_number"/>
        <result property="isHeadquarters" column="is_headquarters"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="customMessage" column="custom_message"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="lat" column="lat"/>
        <result property="lng" column="lng"/>
        <result property="autoApproveRequest" column="auto_approve_request"/>
        <result property="allowMultipleAppts" column="pending_appt_overlap"/>
        <result property="apptGranularity" column="appt_granularity"/>
        <result property="tax" column="tax"/>
    </resultMap>

    <resultMap id="locationBizResourceResult" type="Location">
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="resId" column="res_id"/>
    </resultMap>

    <resultMap id="svcToBiz" type="service">
        <result property="svcId" column="svc_id"/>
        <result property="serviceName" column="service_name"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="serviceResult" type="service">
        <result property="svcId" column="svc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="serviceCode" column="service_code"/>
        <result property="serviceName" column="service_name"/>
        <result property="details" column="details"/>
        <result property="duration" column="duration"/>
        <result property="defaultCost" column="default_cost"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="serviceMasterResultWithSvcId" type="serviceMaster">
        <result property="serviceCode" column="service_code"/>
        <result property="serviceName" column="service_name"/>
        <result property="categoryCode" column="category_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
        <result property="svcId" column="svc_id"/>
    </resultMap>

    <resultMap id="serviceMasterResult" type="serviceMaster">
        <result property="serviceCode" column="service_code"/>
        <result property="serviceName" column="service_name"/>
        <result property="categoryCode" column="category_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="serviceMasterResult1" type="serviceMaster">
        <result property="serviceCode" column="service_code"/>
        <result property="categoryName" column="category_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="categoryCode" column="category_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="serviceListFromLocationListResult" type="serviceMaster">
        <result property="serviceCode" column="service_code"/>
        <result property="categoryName" column="category_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="svcId" column="svc_id"/>
        <result property="categoryCode" column="category_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="serviceMasterBizResourceResult" type="serviceMaster">
        <result property="locId" column="loc_id"/>
        <result property="serviceCode" column="service_code"/>
        <result property="serviceName" column="service_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="resId" column="res_id"/>
    </resultMap>

    <resultMap id="serviceMasterBizLocationResult" type="location">
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locName" column="loc_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="currencyCode" column="currency_code"/>
        <result property="timeZoneCode" column="timezone_code"/>
        <result property="timezone" column="timezone"/>
        <result property="phoneNumber1" column="phone_number1"/>
        <result property="phoneNumber2" column="phone_number2"/>
        <result property="faxNumber" column="fax_number"/>
        <result property="isHeadquarters" column="is_headquarters"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="customMessage" column="custom_message"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="lat" column="lat"/>
        <result property="lng" column="lng"/>
        <result property="autoApproveRequest" column="auto_approve_request"/>
        <result property="allowMultipleAppts" column="pending_appt_overlap"/>
        <result property="apptGranularity" column="appt_granularity"/>
        <result property="serviceName" column="service_name"/>
    </resultMap>

    <resultMap id="resourceResult" type="resource">
        <result property="resId" column="res_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isOnskedUser" column="is_onsked_user"/>
        <result property="resRoleTypeName" column="res_role_name"/>
        <result property="resourceLevel" column="resource_level"/>
    </resultMap>

    <resultMap id="resourceResultWithLocation" type="resource">
        <result property="resId" column="res_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isOnskedUser" column="is_onsked_user"/>
    </resultMap>

    <resultMap id="packageResult" type="package">
        <result property="svcId" column="svc_id"/>
        <result property="pack" column="package"/>
        <result property="packageName" column="package_name"/>
        <result property="cost" column="cost"/>
        <result property="duration" column="duration"/>
        <result property="packageId" column="package_id"/>
        <result property="clientLocation" column="client_location"/>
        <result property="sessionType" column="session_type"/>
    </resultMap>

    <resultMap id="packageResult2" type="package">
        <result property="pkgId" column="package_id"/>
        <result property="packageName" column="package_name"/>
        <result property="duration" column="duration"/>
        <result property="svcId" column="svc_id"/>

    </resultMap>

    <resultMap id="packageResult1" type="package">
        <result property="pkgId" column="package_id"/>
        <result property="packageName" column="package_name"/>
        <result property="duration" column="duration"/>

    </resultMap>

    <resultMap id="resourceResult1" type="resource">
        <result property="resId" column="res_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isOnskedUser" column="is_onsked_user"/>
        <result property="resourceLevel" column="resource_level"/>
        <result property="locId" column="loc_id"/>
        <result property="resRoleTypeName" column="res_role_name"/>
        <result property="resRoleTypeCode" column="res_role_code"/>
    </resultMap>

    <resultMap id="resourceResult2" type="resource">
        <result property="resId" column="res_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isOnskedUser" column="is_onsked_user"/>
    </resultMap>

    <resultMap id="resourceResult3" type="resource">
        <result property="resId" column="res_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="email" column="email"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isOnskedUser" column="is_onsked_user"/>
        <result property="resourceLevel" column="resource_level"/>
        <result property="resRoleTypeName" column="res_role_name"/>
        <result property="resRoleTypeCode" column="res_role_code"/>
        <result property="ratePerHour" column="rate_per_hour"/>
        <result property="rphEffectiveDate" column="rph_effective_date"/>
        <result property="payoutPercentage" column="payout_percentage"/>
        <result property="ppEffectiveDate" column="pp_effective_date"/>
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="locationHoursResult" type="locationHours">
        <result property="locId" column="loc_id"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="isOpen" column="is_open"/>
        <result property="openTime" column="open_time"/>
        <result property="closeTime" column="close_time"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDt" column="modified_dt"/>
    </resultMap>

    <resultMap id="locationHoursResult1" type="locationHours">
        <result property="locId" column="loc_id"/>
        <result property="lat" column="lat"/>
        <result property="lng" column="lng"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="isOpen" column="is_open"/>
        <result property="openTime" column="open_time"/>
        <result property="closeTime" column="close_time"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDt" column="modified_dt"/>
    </resultMap>

    <resultMap id="holidayResult" type="businessHoliday">
        <result property="holidayId" column="holiday_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="dateOfHolidayAsYYYYMMDD" column="holiday_dt"/>
        <result property="reason" column="reason"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="listBusinessCategoriesResult1" type="listBusinessCategories">
        <result property="categoryCode" column="category_code"/>
        <result property="categoryName" column="category_name"/>
        <result property="details" column="details"/>
        <result property="resourceTitle" column="resource_title"/>
        <result property="resourceTitlePlural" column="resource_title_plural"/>
        <result property="receiverTitle" column="receiver_title"/>
        <result property="receiverTitlePlural" column="receiver_title_plural"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="countriesResult" type="country">
        <result property="countryCode" column="country_code"/>
        <result property="countryName" column="country_name"/>
    </resultMap>

    <resultMap id="statesResult" type="state">
        <result property="countryCode" column="country_code"/>
        <result property="stateCode" column="state_code"/>
        <result property="stateName" column="state_name"/>
    </resultMap>

    <resultMap id="currencyResult" type="currency">
        <result property="countryCode" column="country_code"/>
        <result property="currencyCode" column="currency_code"/>
        <result property="currencyName" column="currency_name"/>
        <result property="symbol" column="symbol"/>
    </resultMap>

    <resultMap id="locationToService" type="locationToService">
        <result property="locSvcId" column="loc_svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="clientLocation" column="client_location"/>
        <result property="cost" column="cost"/>
        <result property="duration" column="duration"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="serviceName" column="service_name"/>
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="locationToService1" type="locationToService">
        <result property="locSvcId" column="loc_svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="cost" column="cost"/>
        <result property="duration" column="duration"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>


    <resultMap id="LocationToServiceUniqueResult" type="serviceMaster">
        <result property="svcId" column="svc_id"/>
        <result property="serviceName" column="service_name"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="serviceCode" column="service_code"/>
    </resultMap>

    <resultMap id="LocationToServiceUniqueResult1" type="serviceMaster">

        <result property="serviceName" column="service_name"/>
        <result property="serviceCode" column="service_code"/>
    </resultMap>


    <resultMap id="serviceMasterResultWithlocId" type="serviceMaster">
        <result property="serviceCode" column="service_code"/>
        <result property="serviceName" column="service_name"/>
        <result property="categoryCode" column="category_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
        <result property="svcId" column="svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="ResourceOfLocation" type="locationToResource">

        <result property="locId" column="loc_id"/>
        <result property="resId" column="res_id"/>
    </resultMap>

    <resultMap id="ResourceOfService" type="resourceToService">

        <result property="svcId" column="svc_id"/>
        <result property="resId" column="res_id"/>
    </resultMap>

    <resultMap id="result" type="resource">
        <result property="email" column="email"/>
    </resultMap>

    <resultMap id="resourceHoursResult" type="resourceHours">
        <result property="resId" column="res_id"/>
        <result property="locId" column="loc_id"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="isOpen" column="is_working"/>
        <result property="openTime" column="start_time"/>
        <result property="closeTime" column="end_time"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDt" column="modified_dt"/>
    </resultMap>

    <resultMap id="resourceCertificateResult" type="resourceCertificate">
        <result property="resCertId" column="res_cert_id"/>
        <result property="resId" column="res_id"/>
        <result property="certificateNumber" column="res_cert_num"/>
        <result property="certificateName" column="res_cert_name"/>
        <result property="certificateCompletionDate" column="res_cert_completion_date"/>
        <result property="certificateExpirationDate" column="res_cert_expiration_date"/>
        <result property="certificateOrganization" column="res_cert_organisation"/>
    </resultMap>

    <resultMap id="resourceHoursResult1" type="resourceHours">
        <result property="resId" column="res_id"/>
        <result property="locId" column="loc_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="dayOfWeek" column="day_of_week"/>
        <result property="isOpen" column="is_working"/>
        <result property="openTime" column="start_time"/>
        <result property="closeTime" column="end_time"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDt" column="modified_dt"/>
    </resultMap>


    <resultMap id="allbusiness" type="business">
        <result property="bizId" column="biz_id"/>

    </resultMap>

    <resultMap id="holidays" type="holiday">
        <result property="countryCode" column="country_code"/>
        <result property="holidayDt" column="holiday_dt"/>
        <result property="holidayReason" column="holiday_reason"/>
        <result property="isActive" column="is_active"/>
    </resultMap>


    <resultMap id="holidayResult1" type="businessHoliday">
        <result property="holidayId" column="holiday_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="dateOfHolidayAsYYYYMMDD" column="holiday_dt"/>
        <result property="reason" column="reason"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>



    <resultMap id="businessResult1" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryCode" column="category_code"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="zipCode" column="zip_code"/>
        <result property="city" column="city"/>
    </resultMap>


    <resultMap id="businessLocResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryCode" column="category_code"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="zipCode" column="zip_code"/>
    </resultMap>


    <resultMap id="serviceMasterNamesResult" type="serviceMaster">
        <result property="serviceName" column="service_name"/>
        <result property="serviceCode" column="service_code"/>
    </resultMap>

    <resultMap id="serviceJsonResult" type="serviceListFromOutside">
        <result property="serviceName" column="service_name"/>
        <result property="svcId" column="svc_id"/>
    </resultMap>

    <resultMap id="locationResult1" type="location">
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="leaveReasonsResult" type="leaveReason">
        <result property="leaveCode" column="leave_code"/>
        <result property="description" column="description"/>
    </resultMap>

    <resultMap id="bizClientsListResult" type="client">
        <result property="clientId" column="client_id"/>
        <result property="firstName" column="first_name"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="referralType" column="referral_type"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="count" column="count" />
        <result property="countCompleted" column="count_completed" />
        <result property="countConfirmed" column="count_confirmed" />
        <result property="countCancelled" column="count_cancelled" />
        <result property="countCompletedAwaitingPin" column="count_completed_awaiting_pin" />
        <result property="countCompletedWithPin" column="count_completed_with_pin" />
        <result property="countDidnotCome" column="count_didnot_come" />
        <result property="countPending" column="count_pending" />
        <result property="countCancelledByBusiness" column="count_cancelled_by_business" />
        <result property="value" column="value" />
        <result property="lastAppointmentDateAndtime" column="start_time" />
        <result property="email" column="email" />
        <result property="isOnskedUser" column="is_onsked_user" />
        <result property="isActive" column="is_active" />
        <result property="cellPhone" column="cell_phone" />
    </resultMap>

    <resultMap id="clientInfo" type="client">
        <result property="clientId" column="client_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="cellPhone" column="cell_phone"/>
    </resultMap>

    <resultMap id="courseClientInfo" type="appointmentSchedule">
        <result property="userId" column="user_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="userType" column="user_type"/>
    </resultMap>

    <resultMap id="package" type="package">
        <result property="locSvcId" column="loc_svc_id"/>
        <result property="pack" column="package"/>
        <result property="cost" column="cost"/>
        <result property="duration" column="duration"/>
        <result property="packageName" column="package_name"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="package1" type="package">
        <result property="locCount" column="loc_Count"/>
        <result property="locSvcId1" column="loc_svc_id"/>
        <result property="packageName" column="package_name"/>
        <result property="locName" column="loc_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="svcId" column="svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="clientLocation" column="client_location"/>
    </resultMap>

    <resultMap id="package2" type="package">
        <result property="locCount" column="loc_Count"/>
        <result property="locSvcId1" column="loc_svc_id"/>
        <result property="packageName" column="package_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="locName" column="loc_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="svcId" column="svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="clientLocation" column="client_location"/>
    </resultMap>

    <resultMap id="packageLocSvcId" type="package">
        <result property="serviceName" column="service_name"/>
        <result property="locName" column="loc_name"/>
        <result property="locSvcId" column="loc_svc_id"/>
        <result property="packageName" column="package_name"/>
        <result property="packageId" column="package_id"/>
        <result property="duration" column="duration"/>
        <result property="cost" column="cost"/>
        <result property="clientLocation" column="client_location"/>
        <result property="sessionType" column="session_type"/>
        <result property="payoutType" column="payout_type"/>
        <result property="maxPayoutFactor" column="max_payout_factor"/>
        <result property="effectiveFrom" column="effective_from"/>
    </resultMap>

    <resultMap id="locSvcId" type="package">
        <result property="serviceName" column="service_name"/>
        <result property="locName" column="loc_name"/>
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="clientResult" type="client">
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="gender" column="gender"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="bloodGroup" column="blood_group"/>
        <result property="emergencyContactNo" column="emergency_contact_no"/>
        <result property="clientInsuranceName" column="client_insurance_name"/>
    </resultMap>

    <resultMap id="LocationToResourceByResIdAndLocId" type="locationToResource">
        <result property="locId" column="loc_id"/>
        <result property="resId" column="res_id"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="setLocationToResourceActive1" type="locationToResource">
        <result property="isActive" column="is_active"/>
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="addClientPromotionList" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
    </resultMap>

    <resultMap id="promotionResult" type="promotion">
        <result property="bizId" column="biz_id"/>
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="description" column="description"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="isActive" column="is_active"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
        <result property="promotionType" column="promotion_type_id"/>
        <result property="promotionCode" column="promotion_code"/>
        <result property="discountType" column="discount_type"/>
        <result property="discountValue" column="discount_value"/>
        <result property="allowedUsage" column="allowed_usage"/>
        <result property="currentUsage" column="current_usage"/>
        <result property="userUsage" column="user_limit_usage"/>
        <result property="remainderDate" column="remainder_date"/>
        <result property="mailDate" column="mail_date"/>
        <result property="isPublished" column="is_published"/>
    </resultMap>

    <resultMap id="promotionResultForEdit" type="promotion">
        <result property="bizId" column="biz_id"/>
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="description" column="description"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="isActive" column="is_active"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
        <result property="promotionType" column="promotion_type_id"/>
        <result property="promotionCode" column="promotion_code"/>
        <result property="discountType" column="discount_type"/>
        <result property="discountValue" column="discount_value"/>
        <result property="allowedUsage" column="allowed_usage"/>
        <result property="currentUsage" column="current_usage"/>
        <result property="userUsage" column="user_limit_usage"/>
        <result property="remainderDate" column="remainder_date"/>
        <result property="mailDate" column="mail_date"/>
        <result property="isPublished" column="is_published"/>
        <result property="locName" column="loc_name"/>
        <result property="apptCount" column="appt_count"/>
        <result property="apptCountCompleted" column="count_completed" />
        <result property="apptCountConfirmed" column="count_confirmed" />
        <result property="apptCountCancelled" column="count_cancelled" />
        <result property="apptCountCompletedAwaitingPin" column="count_completed_awaiting_pin" />
        <result property="apptCountCompletedWithPin" column="count_completed_with_pin" />
        <result property="apptCountDidnotCome" column="count_didnot_come" />
        <result property="apptCountPending" column="count_pending" />
        <result property="apptCountCancelledByBusiness" column="count_cancelled_by_business" />
        <result property="apptValue" column="appt_value"/>
    </resultMap>

    <resultMap id="promotionResultForValidation" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="description" column="description"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="isActive" column="is_active"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
        <result property="promotionType" column="promotion_type_id"/>
        <result property="promotionCode" column="promotion_code"/>
        <result property="discountType" column="discount_type"/>
        <result property="discountValue" column="discount_value"/>
        <result property="allowedUsage" column="allowed_usage"/>
        <result property="currentUsage" column="current_usage"/>
        <result property="userUsage" column="user_limit_usage"/>
        <result property="remainderDate" column="remainder_date"/>
        <result property="mailDate" column="mail_date"/>
        <result property="isPublished" column="is_published"/>
    </resultMap>

    <resultMap id="promotionResult1" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="description" column="description"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="isActive" column="is_active"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
        <result property="promotionType" column="promotion_type_id"/>
        <result property="promotionCode" column="promotion_code"/>
        <result property="discountType" column="discount_type"/>
        <result property="discountValue" column="discount_value"/>
        <result property="allowedUsage" column="allowed_usage"/>
        <result property="currentUsage" column="current_usage"/>
        <result property="userUsage" column="user_limit_usage"/>
        <result property="remainderDate" column="remainder_date"/>
        <result property="mailDate" column="mail_date"/>
        <result property="isPublished" column="is_published"/>
    </resultMap>

    <resultMap id="activePromotion" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
    </resultMap>

    <resultMap id="additionalInformation" type="business">
        <result property="udf1" column="udf1_title"/>
        <result property="udf2" column="udf2_title"/>
        <result property="udf3" column="udf3_title"/>
        <result property="udf4" column="udf4_title"/>
        <result property="udf5" column="udf5_title"/>
    </resultMap>

    <resultMap id="businessPromotionResult" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="promotionName" column="promotion_name"/>
    </resultMap>

    <resultMap id="businessPromotionResult1" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="promotionId" column="promotion_id"/>
    </resultMap>

    <resultMap id="businessPromotionCode" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="packageId" column="packages"/>
    </resultMap>

    <resultMap id="listBusinessCategoriesResult" type="listBusinessCategories">
        <result property="categoryCode" column="category_code"/>
        <result property="categoryName" column="category_name"/>
        <result property="details" column="details"/>
        <result property="resourceTitle" column="resource_title"/>
        <result property="resourceTitlePlural" column="resource_title_plural"/>
        <result property="receiverTitle" column="receiver_title"/>
        <result property="receiverTitlePlural" column="receiver_title_plural"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="materialList" type="materials">
        <result property="matId" column="material_id"/>
        <result property="matName" column="material_name"/>
    </resultMap>
    <resultMap id="materialList1" type="materials">
        <result property="matId" column="material_id"/>
        <result property="matName" column="material_name"/>
        <result property="manufacturer" column="manufacturer"/>
    </resultMap>

    <resultMap id="bizList" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="displayCounter" column="display_counter"/>
        <result property="notifyByPIN" column="notify_by_pin"/>
    </resultMap>

    <select id="getLastInsertId" resultType="java.lang.Integer">
        <!-- select business_id from business;  -->
        select last_insert_id() as id;
    </select>

    <resultMap id="pkgsTosvcs" type="package">
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="svcId" column="svc_id"/>
        <result property="serviceName" column="service_name"/>
        <result property="packageName1" column="package_name"/>
        <result property="locSvcId" column="loc_svc_id"/>
    </resultMap>

    <resultMap id="matsToPkgs" type="matToPkg">
        <result property="matName" column="material_name"/>
        <result property="qtyNeeded" column="qty_needed"/>
        <result property="materialId" column="material_id"/>
    </resultMap>

    <resultMap id="matByMatId" type="materials">
        <result property="matId" column="material_id"/>
        <result property="matName" column="material_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="disposable" column="disposable"/>
        <result property="cost" column="cost"/>
    </resultMap>

    <resultMap id="basicPurchaseDetails" type="purchaseHeader">
        <result property="purchaseId" column="purchase_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="locId" column="loc_id"/>
        <result property="purchaseDate" column="purchase_date"/>
        <result property="purchaseOreder" column="purchase_order"/>
        <result property="remark" column="remark"/>
        <result property="totAmntIncludingTax" column="tot_amnt_include_tax"/>
        <result property="totTax" column="tot_tax"/>
        <result property="completed" column="completed"/>
    </resultMap>

    <resultMap id="basicPurchaseDetails1" type="purchaseHeader">
        <result property="purchaseDate" column="purchase_date"/>
        <result property="purchaseOreder" column="purchase_order"/>
        <result property="purchaseId" column="purchase_id"/>
        <result property="bizId" column="biz_id"/>
    </resultMap>


    <resultMap id="viewPurchaseDetails1" type="purchaseDetails">
        <result property="batchNumber" column="batch_no"/>
        <result property="rate" column="Rate"/>
        <result property="amnt" column="amount"/>
        <result property="taxAmnt" column="tax_amnt"/>
        <result property="qty" column="qty"/>
        <result property="matName" column="material_name"/>
        <result property="manufacturer" column="manufacturer"/>
        <result property="remark" column="remark"/>
    </resultMap>
    <resultMap id="locIdList" type="location">
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="updateStocks" type="stocks">
        <result property="matId" column="material_id"/>
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="getmats" type="stocks">
        <result property="matId" column="material_id"/>
        <result property="matName" column="material_name"/>
        <result property="manufacturer" column="manufacturer"/>
    </resultMap>

    <resultMap id="locationResult2" type="location">
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="timeZoneCode" column="timezone_code"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="businessSummaryResult3" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="userId" column="user_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryName" column="category_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="reservationLeadTime" column="reservation_lead_time"/>
        <result property="cancellationLeadTime" column="cancellation_lead_time"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="dateFormatId" column="dt_format_id"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
        <result property="notifyByEmail" column="notify_by_email"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="displayCounter" column="display_counter"/>
        <result property="udf1" column="udf1_title"/>
        <result property="udf2" column="udf2_title"/>
        <result property="udf3" column="udf3_title"/>
        <result property="udf4" column="udf4_title"/>
        <result property="udf5" column="udf5_title"/>
        <result property="manageInventory" column="manage_inventory"/>
    </resultMap>

    <resultMap id="businessSummaryResult2" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="categoryName" column="category_name"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="reservationLeadTime" column="reservation_lead_time"/>
        <result property="cancellationLeadTime" column="cancellation_lead_time"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="dateFormatId" column="dt_format_id"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
        <result property="notifyByEmail" column="notify_by_email"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
    </resultMap>

    <resultMap id="bizToLoc"  type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locId" column="loc_id"/>
        <result property="locName" column="loc_name"/>
        <result property="packageName" column="package_name"/>
        <result property="serviceName" column="service_name"/>
    </resultMap>

    <resultMap id="viewBusinessSummary" type="locationToService">
        <result property="locName" column="loc_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="packageName" column="package_name"/>
        <result property="resourceName" column="resource_name"/>
        <result property="promotionName" column="promotion_name"/>
    </resultMap>

    <resultMap id="viewBusinessSummary1" type="locationToService">
        <result property="locId1" column="loc_id"/>
        <result property="resId" column="res_id"/>
        <result property="locName" column="loc_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="resourceName" column="resource_name"/>
    </resultMap>


    <resultMap id="promotionDetailsResult" type="promotion">
        <result property="promotionId" column="promotion_id"/>
        <result property="promotionName" column="promotion_name"/>
        <result property="description" column="description"/>
        <result property="locId" column="loc_id"/>
        <result property="svcId" column="svc_id"/>
        <result property="packageId" column="packages"/>
        <result property="bizId" column="biz_id"/>
        <result property="isActive" column="is_active"/>
        <result property="startDate" column="start_time"/>
        <result property="endDate" column="end_time"/>
        <result property="promotionType" column="promotion_type_id"/>
        <result property="promotionCode" column="promotion_code"/>
        <result property="bizName" column="biz_name"/>
        <result property="discountType" column="discount_type"/>
        <result property="discountValue" column="discount_value"/>
        <result property="allowedUsage" column="allowed_usage"/>
        <result property="currentUsage" column="current_usage"/>
        <result property="userUsage" column="user_limit_usage"/>
    </resultMap>

    <resultMap id="locationResult3" type="location">
        <result property="bizName" column="biz_name"/>
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locName" column="loc_name"/>
        <result property="description" column="description"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="currencyCode" column="currency_code"/>
        <result property="timeZoneCode" column="timezone_code"/>
        <result property="phoneNumber1" column="phone_number1"/>
        <result property="phoneNumber2" column="phone_number2"/>
        <result property="faxNumber" column="fax_number"/>
        <result property="isHeadquarters" column="is_headquarters"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="customMessage" column="custom_message"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="lat" column="lat"/>
        <result property="lng" column="lng"/>
        <result property="autoApproveRequest" column="auto_approve_request"/>
        <result property="allowMultipleAppts" column="pending_appt_overlap"/>
        <result property="apptGranularity" column="appt_granularity"/>
    </resultMap>

    <resultMap id="businessesList" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="description" column="description"/>
        <result property="contactFirstName" column="contact_first_name"/>
        <result property="contactLastName" column="contact_last_name"/>
        <result property="contactEmail" column="contact_email"/>
        <result property="locIdList" column="locIdList"/>
        <result property="svcIdList" column="svcIdList"/>
        <result property="contactPhone" column="contact_phone"/>
        <result property="website" column="website"/>
        <result property="isActive" column="is_active"/>
        <result property="reservationLeadTime" column="reservation_lead_time"/>
        <result property="cancellationLeadTime" column="cancellation_lead_time"/>
        <result property="isSearchable" column="is_searchable"/>
        <result property="dateFormatId" column="dt_format_id"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="allowUnregisteredUsers" column="allow_unregistered_users"/>
        <result property="categoryName" column="category_name"/>
        <result property="notifyByEmail" column="notify_by_email"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="notifyByPIN" column="notify_by_PIN"/>
    </resultMap>



    <resultMap id="StaffResult" type="resource">
        <result property="resId" column="res_id"/>
        <result property="nickName" column="nick_name"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
    </resultMap>

    <resultMap id="clientResult1" type="client">
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="gender" column="gender"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="udf1" column="udf1"/>
        <result property="udf2" column="udf2"/>
        <result property="udf3" column="udf3"/>
        <result property="udf4" column="udf4"/>
        <result property="udf5" column="udf5"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="bloodGroup" column="blood_group"/>
        <result property="emergencyContactNo" column="emergency_contact_no"/>
        <result property="referralType" column="referral_type"/>
        <result property="friendFirstName" column="f_first_name"/>
        <result property="friendLastName" column="f_last_name"/>
        <result property="friendemail" column="f_email"/>
        <result property="friendCellPhone" column="f_cell_phone"/>
        <result property="clientInsuranceName" column="client_insurance_name"/>
        <result property="clientReferredSource" column="client_referred_source"/>

    </resultMap>

    <resultMap id="clientResultToDownload" type="client">
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="gender" column="gender"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="homePhone" column="home_phone"/>
        <result property="workPhone" column="work_phone"/>
        <result property="workPhoneExt" column="work_phone_ext"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="udf1" column="udf1"/>
        <result property="udf2" column="udf2"/>
        <result property="udf3" column="udf3"/>
        <result property="udf4" column="udf4"/>
        <result property="udf5" column="udf5"/>
        <result property="notifyBySMS" column="notify_by_SMS"/>
        <result property="bloodGroup" column="blood_group"/>
        <result property="emergencyContactNo" column="emergency_contact_no"/>
        <result property="referralType" column="referral_type"/>
        <result property="friendFirstName" column="f_first_name"/>
        <result property="friendLastName" column="f_last_name"/>
        <result property="friendemail" column="f_email"/>
        <result property="friendCellPhone" column="f_cell_phone"/>
        <result property="clientInsuranceName" column="client_insurance_name"/>
        <result property="clientReferredSource" column="client_referred_source"/>
        <result property="lastAppointmentDateAndtime" column="start_time"/>

    </resultMap>

    <resultMap id="packageDetails" type="promotion">
        <result property="packageName" column="package_name"/>
    </resultMap>

    <resultMap id="serviceDetails" type="promotion">
        <result property="serviceName" column="service_name"/>
    </resultMap>

    <resultMap id="locationDetails" type="promotion">
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="resourceLocation" type="resource">
        <result property="resId" column="res_id"/>
        <result property="locId" column="loc_id"/>
        <result property="nickName" column="nick_name"/>
        <result property="locName" column="loc_name"/>
    </resultMap>

    <resultMap id="holidayResult3" type="businessHoliday">
        <result property="holidayId" column="holiday_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="dateOfHolidayAsYYYYMMDD" column="holiday_dt"/>
        <result property="reason" column="reason"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="locName" column="loc_name"/>
        <result property="locId1" column="loc_id1"/>
    </resultMap>

    <resultMap id="package3" type="appointmentSchedule">
        <result property="pkgName" column="package_name"/>
        <result property="locName" column="loc_name"/>
        <result property="serviceName" column="service_name"/>
        <result property="nickName" column="nick_name"/>
        <result property="svcId" column="svc_id"/>
        <result property="locId" column="loc_id"/>
        <result property="resId" column="res_id"/>
    </resultMap>

    <resultMap id="rating" type="appointmentSchedule">
        <result property="rating" column="rating"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
    </resultMap>

    <resultMap id="locationHoursResultByBizID" type="appointmentSchedule">
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="locCity" column="city"/>
        <result property="rating" column="rating"/>
        <result property="locName" column="loc_name"/>
        <result property="statusDescription" column="description"/>
        <result property="locZipCode" column="zip_code"/>
        <result property="locZipCode" column="zip_code"/>
    </resultMap>

    <resultMap id="businessSMSLogResult" type="appointmentSchedule">
        <result property="smsId" column="sms_id"/>
        <result property="apptId" column="appt_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="userId" column="user_id"/>
        <result property="unregId" column="unreg_user_id"/>
        <result property="clientId" column="client_id"/>
        <result property="userFirstName" column="user_first_name"/>
        <result property="userLastName" column="user_last_name"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="statusCode" column="status_code"/>
        <result property="cellPhone" column="cell_phone"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="patientResult" type="patient">
        <result property="patientId" column="patient_id"/>
        <result property="clientId" column="client_id"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="socialSecurityNumber" column="ssn_number"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="patient" type="patient">
        <result property="patientId" column="patient_id"/>
        <result property="clientId" column="client_id"/>
        <result property="socialSecurityNumber" column="ssn_number"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="patient1" type="patient">
        <result property="patientId" column="patient_id"/>
        <result property="clientId" column="client_id"/>
        <result property="socialSecurityNumber" column="ssn_number"/>
        <result property="isActive" column="is_active"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
    </resultMap>

    <resultMap id="patientresult" type="patient">
        <result property="patientId" column="patient_id"/>
        <result property="recordNum" column="record_num"/>
        <result property="clientId" column="client_id"/>
        <result property="socialSecurityNumber" column="ssn_number"/>
        <result property="isActive" column="is_active"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="email" column="email"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="gender" column="gender"/>
        <result property="cellPhone" column="cell_phone"/>
    </resultMap>

    <resultMap id="patientIllnessResult" type="patientIllness">
        <result property="patientIllnessId" column="patient_illness_id"/>
        <result property="medicalCode" column="medical_code"/>
        <result property="patientId" column="patient_id"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="patientInsuranceResult" type="patientInsurance">
        <result property="patientInsuranceId" column="patient_insurance_id"/>
        <result property="patientId" column="patient_id"/>
        <result property="insuranceCompanyName" column="insurance_company_name"/>
        <result property="policyNumber" column="policy_number"/>
        <result property="insuranceId" column="insurance_id"/>
        <result property="groupId" column="group_id"/>
        <result property="effectiveDate" column="effective_dt"/>
        <result property="countryCode" column="country_code"/>
        <result property="stateCode" column="state_code"/>
        <result property="copay" column="copay"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="clientInsuranceResult" type="clientInsurance">
        <result property="clientInsuranceId" column="client_insurance_id"/>
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="insuranceReferralId" column="i_referral_id"/>
        <result property="insuranceCompanyName" column="i_company_name"/>
        <result property="insuranceCellPhone" column="i_cell_phone"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="clientPhysicianResult" type="clientPhysician">
        <result property="clientPhysicianId" column="client_physician_id"/>
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="physicianFirstName" column="p_first_name"/>
        <result property="physicianLastName" column="p_last_name"/>
        <result property="physicianEmail" column="p_email"/>
        <result property="physicianCellPhone" column="p_cell_phone"/>
        <result property="physicianHospital" column="p_hospital_name"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="clientPhysicianResult1" type="clientPhysician">
        <result property="clientPhysicianId" column="client_physician_id"/>
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="physicianFirstName" column="p_first_name"/>
        <result property="physicianLastName" column="p_last_name"/>
        <result property="physicianEmail" column="p_email"/>
        <result property="physicianCellPhone" column="p_cell_phone"/>
        <result property="physicianHospital" column="p_hospital_name"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="clientInsuranceResult1" type="clientInsurance">
        <result property="clientInsuranceId" column="client_insurance_id"/>
        <result property="clientId" column="client_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="insuranceReferralId" column="i_referral_id"/>
        <result property="insuranceCompanyName" column="i_company_name"/>
        <result property="insuranceCellPhone" column="i_cell_phone"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
    </resultMap>

    <resultMap id="patientInsuranceResult1" type="patientInsurance">
        <result property="patientInsuranceId" column="patient_insurance_id"/>
        <result property="patientId" column="patient_id"/>
        <result property="insuranceCompanyName" column="insurance_company_name"/>
        <result property="insCompEmail" column="ins_comp_email"/>
        <result property="insCompPhone" column="ins_comp_phone"/>
        <result property="policyNumber" column="policy_number"/>
        <result property="insuranceId" column="insurance_id"/>
        <result property="groupId" column="group_id"/>
        <result property="effectiveDate" column="effective_dt"/>
        <result property="expiryDate" column="expiry_dt"/>
        <result property="countryCode" column="country_code"/>
        <result property="stateCode" column="state_code"/>
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="copay" column="copay"/>
        <result property="isActive" column="is_active"/>
        <result property="createdDt" column="created_dt"/>
        <result property="createdBy" column="created_by"/>
        <result property="modifiedDt" column="modified_dt"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="verifiedDt" column="verified_dt"/>
        <result property="verifiedBy" column="verified_by"/>
    </resultMap>

    <resultMap id="masterIllnessResult" type="patientIllness">
        <result property="medicalCode" column="medical_code"/>
        <result property="description" column="description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="patientInfo" type="patient">
        <result property="clientId" column="client_id"/>
        <result property="patientId" column="patient_id"/>
        <result property="email" column="email"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
    </resultMap>

    <resultMap id="apptPayment" type="paymentHistory">
        <result property="discount" column="discount_value"/>
        <result property="discountType" column="discount_type"/>
    </resultMap>

    <resultMap id="bizUserPaymentCred" type="business">
        <result property="paypalHostedButtonId" column="paypal_hosted_button_id"/>
        <result property="authorizeApiLogInId" column="authorize_api_login_id"/>
        <result property="authorizeTransactionKey" column="authorize_transaction_key"/>
    </resultMap>

    <resultMap id="groupPackage" type="groupPackage">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="groupPkgDesc" column="group_pkg_description"/>
        <result property="groupPkgCost" column="group_pkg_cost"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="expiryDuration" column="expiry_duration"/>
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="groupPackageOccurence" type="groupPackageOccurence">
        <result property="groupPkgToPkgId" column="group_pkg_to_pkg_id"/>
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="pkgId" column="package_id"/>
        <result property="occurences" column="no_of_occurences"/>
        <result property="number" column="discount_number"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="groupPackageList" type="groupPackage">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="groupPkgDesc" column="group_pkg_description"/>
        <result property="groupPkgCost" column="group_pkg_cost"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="stateCode" column="state_code"/>
        <result property="pkgName" column="pkgName"/>
        <result property="expiryDuration" column="expiry_duration"/>
        <result property="isActive" column="is_active"/>
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="groupPackagePurchaseList" type="groupPackage">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="groupPkgDesc" column="group_pkg_description"/>
        <result property="groupPkgCost" column="group_pkg_cost"/>
        <result property="groupPkgPurchaseId" column="group_pkg_purchase_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="stateCode" column="state_code"/>
        <result property="pkgName" column="pkgName"/>
        <result property="expiryDuration" column="expiry_duration"/>
        <result property="isActive" column="is_active"/>
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="groupPackageType" type="groupPackage">
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="bizResult2" type="business">
        <result property="bizId" column="biz_id"/>
        <result property="bizName" column="biz_name"/>
    </resultMap>

    <resultMap id="listOfGrpPkgOfUser" type="groupPackageAppointment">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="groupPkgToPkgId" column="group_pkg_to_pkg_id"/>
        <result property="discountNumber" column="discount_number"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="expiryDt" column="expiry_dt"/>
        <result property="apptId" column="appt_id"/>
        <result property="statusCode" column="status_code"/>
        <result property="userId" column="user_id"/>
        <result property="packageName" column="package_name"/>
        <result property="groupPkgPurchaseId" column="group_pkg_purchase_id"/>
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="listOfGrpPkgOfUserByGroupPkgId" type="groupPackage">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="groupPkgDesc" column="group_pkg_description"/>
        <result property="groupPkgCost" column="group_pkg_cost"/>
        <result property="discountNumber" column="discount_number"/>
        <result property="occurences" column="no_of_occurences"/>
        <result property="usedPkg" column="used_pkg"/>
        <result property="remaining" column="remaining"/>
        <result property="svcId" column="svc_id"/>
        <result property="pkgId" column="pkg_id"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="stateCode" column="state_code"/>
        <result property="pkgName" column="pkg_name"/>
        <result property="expiryDuration" column="expiry_duration"/>
        <result property="isActive" column="is_active"/>
        <result property="groupPkgPurchaseId" column="group_pkg_purchase_id"/>
        <result property="groupPkgTypeId" column="group_pkg_type_id"/>
        <result property="groupPkgTypeName" column="group_pkg_type_name"/>
    </resultMap>

    <resultMap id="selectedGrpPkgOfUser" type="groupPackageAppointment">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="pkgId" column="package_id"/>
        <result property="expiryDt" column="expiry_dt"/>
    </resultMap>

    <resultMap id="groupPackageIdNames" type="groupPackageAppointment">
        <result property="groupPkgId" column="group_pkg_id"/>
        <result property="groupPkgName" column="group_pkg_name"/>
        <result property="bizId" column="biz_id"/>
        <result property="locId" column="loc_id"/>
        <result property="bizName" column="biz_name"/>
        <result property="locName" column="loc_name"/>
        <result property="expiryDt" column="expiry_dt"/>
    </resultMap>

    <resultMap id="resourceTypeDetails" type="resourceRoleType">
        <result property="resRoleTypeCode" column="res_role_code"/>
        <result property="resRoleTypeName" column="res_role_name"/>
    </resultMap>

    <resultMap id="formStatusResult" type="formStatus">
        <result property="formStatusCode" column="form_status_code"/>
        <result property="formStatusName" column="form_status_name"/>
        <result property="resRoleCode" column="res_role_code"/>
    </resultMap>

    <resultMap id="appointmentStatusForGrid" type="appointmentStatus">
        <result property="statusCode" column="status_code"/>
        <result property="statusReasonCode" column="status_reason_code"/>
        <result property="statusDescription" column="status_description"/>
        <result property="statusReasonDescription" column="status_reason_description"/>
        <result property="isActive" column="is_active"/>
    </resultMap>

    <resultMap id="apptResult" type="appointmentSchedule">
        <result property="startTime" column="start_time"/>
    </resultMap>

    <resultMap id="auditResult" type="auditTrail">
        <result property="fromValue" column="from_value"/>
        <result property="toValue" column="to_value"/>
        <result property="description" column="description"/>
        <result property="modifiedBy" column="modified_by"/>
        <result property="modifiedDt" column="modified_dt"/>
    </resultMap>

    <resultMap id="workingHrsResult" type="package">
        <result property="workingHours" column="working_hours"/>
        <result property="granularity" column="granularity"/>
    </resultMap>

    <resultMap id="clientAddressResult" type="client">
        <result property="addressLine1" column="address_line1"/>
        <result property="addressLine2" column="address_line2"/>
        <result property="city" column="city"/>
        <result property="stateCode" column="state_code"/>
        <result property="zipCode" column="zip_code"/>
        <result property="countryCode" column="country_code"/>
    </resultMap>

    <resultMap id="timezonesResult" type="timeZones">
        <result property="countryCode" column="country_code"/>
        <result property="timeZoneCode" column="timezone_code"/>
        <result property="description" column="description"/>
    </resultMap>

    <select id="getCourseListForClient" resultMap="getCourseListForClientResult">
        select
        cs.course_schedule_id
        ,cs.course_schedule_name
        ,cs.course_master_id
        ,cm.biz_id
        ,cs.max_participants
        ,(	select	count(course_participant_id)
        from	course_participant
        where	course_schedule_id 	= cs.course_schedule_id
        and 	is_active 			= "Y")												as	enrolled_participants
        ,(	select	count(course_participant_id)
        from	course_participant
        where	course_schedule_id 	= cs.course_schedule_id
        and 	is_active 			= "Y")												as	is_enrolled
        ,DATE_FORMAT(CONVERT_TZ(cs.start_date_time, 'UTC', t.timezone),'%d-%b-%Y %h:%i %p')	as	start_date_time
        ,DATE_FORMAT(CONVERT_TZ(cs.end_date_time, 'UTC', t.timezone),'%d-%b-%Y %h:%i %p')	as	end_date_time
        ,cs.total_no_of_sessions
        ,cs.total_sessions_completed
        ,cs.is_active
        ,cs.is_published
        ,cs.is_completed
        ,cs.created_dt
        ,cs.created_by
        ,cs.modified_dt
        ,cs.modified_by
        from	course_schedule		cs
        inner
        join	course_master		cm
        on		cs.course_master_id	=	cm.course_master_id
        inner
        join	location			l
        on		cm.biz_id			=	l.biz_id
        and		l.is_headquarters	=	'Y'
        inner
        join	timezone			t
        on		l.timezone_code		=	t.timezone_code
        where	cm.biz_id			=	#biz#
        and 	cs.is_active		=	'Y'
        and 	cs.is_completed		=	'N'
        and (select	count(course_participant_id)
        from	course_participant
        where	course_schedule_id 	= cs.course_schedule_id
        and 	is_active 			= "Y") &lt; cs.max_participants order by course_schedule_name asc;
    </select>

    <select id="getCountries" resultMap="countriesResult">
        select
        country_code,
        country_name
        from country where country_code = #countryCode#
    </select>

    <select id="getStates" resultMap="statesResult">
        select
        country_code,
        state_code,
        state_name
        from state where state_code = #stateCode# and country_code = #countryCode#
    </select>

    <insert id="addBusiness">
        insert into business(
        biz_id,
        biz_name,
        description,
        category_code,
        contact_first_name,
        contact_last_name,
        contact_email,
        contact_phone,
        website,
        is_active,
        reservation_lead_time,
        cancellation_lead_time,
        is_searchable,
        allow_unregistered_users,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        notify_by_email,
        notify_by_SMS,
        notify_by_PIN,
        display_counter,
        online_payment,
        udf1_title,
        udf2_title,
        udf3_title,
        udf4_title,
        udf5_title,
        manage_inventory,
        paypal_hosted_button_id,
        authorize_api_login_id,
        authorize_transaction_key)
        values(
        null,
        #bizName#,
        #description#,
        null,
        #contactFirstName#,
        #contactLastName#,
        #contactEmail#,
        #contactPhone#,
        #website#,
        #isActive#,
        #reservationLeadTime#,
        #cancellationLeadTime#,
        #isSearchable#,
        #allowUnregisteredUsers#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #notifyByEmail#,
        #notifyBySMS#,
        #notifyByPIN#,
        #displayCounter#,
        #onlinePayment#,
        #udf1#,
        #udf2#,
        #udf3#,
        #udf4#,
        #udf5#,
        #manageInventory#,
        #paypalHostedButtonId#,
        #authorizeApiLogInId#,
        #authorizeTransactionKey#)
        <selectKey resultType="java.lang.Integer" keyProperty="bizId">
            select last_insert_id() as biz_id
        </selectKey>
    </insert>

    <insert id="addLocation">
        insert into location(
        loc_id,
        biz_id,
        loc_name,
        description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        currency_code,
        timezone_code,
        phone_number1,
        phone_number2,
        fax_number,
        is_headquarters,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        lat,
        lng,
        custom_message,
        auto_approve_request,
        pending_appt_overlap,
        appt_granularity,
        tax)
        values(
        null,
        #bizId#,
        #locName#,
        #description#,
        #addressLine1#,
        #addressLine2#,
        #city#,
        #stateCode#,
        #zipCode#,
        #countryCode#,
        #currencyCode#,
        #timeZoneCode#,
        #phoneNumber1#,
        #phoneNumber2#,
        #faxNumber#,
        #isHeadquarters#,
        #isActive#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #lat#,
        #lng#,
        #customMessage#,
        #autoApproveRequest#,
        #allowMultipleAppts#,
        #apptGranularity#,
        #tax#);
        <selectKey resultType="java.lang.Integer" keyProperty="locId">
            select last_insert_id() as loc_id
        </selectKey>
    </insert>

    <insert id="addMaterial">
        insert into material_master(
        material_id,
        biz_id,
        material_name,
        manufacturer,
        disposable,
        cost,
        created_date,
        modified_date)
        values(
        null,
        #bizId#,
        #matName#,
        #manufacturer#,
        #disposable#,
        #cost#,
        utc_timestamp(),
        utc_timestamp());
        <selectKey resultType="java.lang.Integer" keyProperty="matId">
            select last_insert_id() as material_id
        </selectKey>
    </insert>

    <insert id="addMaterialToPkg">
        insert into material_to_package(package_id, material_id, qty_needed, created_dt, modified_dt)
        values(#pkgNumber#,
        #materialId#,
        #qtyNeeded#,
        utc_timestamp(),
        utc_timestamp());
    </insert>

    <insert id="addProductRepairModel">
        insert into product_repair_to_model(
        product_repair_model_id,
        product_repair_id,
        product_model_id,
        is_active,
        created_dt,
        modified_dt)
        values(
        null,
        #productRepairId#,
        #productModelId#,
        #isActive#,
        utc_timestamp(),
        utc_timestamp());
    </insert>

    <insert id="addRepairForm">
        insert into product_repair(
        product_repair_id,
        appt_id,
        technician_id,
        cust_auth_estimate,
        product_password,
        product_model_id,
        imei,
        comments,
        product_add_on,
        phone_carrier_id,
        pick_up,
        created_by,
        created_dt,
        modified_by,
        modified_dt,
        delivery_dt,
        opt_device_unlock,
        pass_code,
        unlock_pattern)
        values (
        null,
        #apptId#,
        #technicianId#,
        #custAuthEstimate#,
        #productPassword#,
        #productModelId#,
        #imei#,
        #comments#,
        #productAddOn#,
        #phoneCarrierId#,
        #pickUp#,
        #createdBy#,
        utc_timestamp(),
        #modifiedBy#,
        utc_timestamp(),
        #deliveryDateTime#,
        #optDeviceUnlock#,
        #passcode#,
        #unlockPattern#);
        <selectKey resultType="java.lang.String" keyProperty="productRepairId">
            select last_insert_id() as product_repair_id
        </selectKey>
    </insert>

    <insert id="addPhoneCarrierOther">
        insert into phone_carrier_other (appt_id,product_repair_id,phone_carrier_id,phone_carrier_other_name,created_by,created_dt,modified_by,modified_dt,is_active)
        values(#apptId#,#productRepairId#,#phoneCarrierId#,#phoneCarrierOtherName#,#createdBy#,UTC_TIMESTAMP(),#modifiedBy#,UTC_TIMESTAMP(),'Y');
    </insert>

    <insert id="addProductModelOther">
        insert into product_model_other (appt_id,product_repair_id,product_model_id,product_model_other_name,created_by,created_dt,modified_by,modified_dt,is_active)
        values(#apptId#,#productRepairId#,#productModelId#,#productModelOtherName#,#createdBy#,UTC_TIMESTAMP(),#modifiedBy#,UTC_TIMESTAMP(),'Y');
    </insert>

    <update id="updateRepairForm">
        update product_repair set
        appt_id = #apptId#,
        technician_id = #technicianId#,
        cust_auth_estimate=#custAuthEstimate#,
        product_password=#productPassword#,
        product_model_id=#productModelId#,
        imei=#imei#,
        opt_device_unlock=#optDeviceUnlock#,
        pass_code=#passcode#,
        unlock_pattern=#unlockPattern#,
        comments=#comments#,
        product_add_on=#productAddOn#,
        phone_carrier_id = #phoneCarrierId#,
        pick_up = #pickUp#,
        modified_by = #modifiedBy#,
        modified_dt = utc_timestamp(),
        delivery_dt = #deliveryDateTime#
        where product_repair_id=#productRepairId#
    </update>

    <update id="updatePhoneCarrierOther">
        update phone_carrier_other set
        phone_carrier_other_name = #phoneCarrierOtherName#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </update>

    <update id="updateProductModelOther">
        update product_model_other set
        product_model_other_name = #productModelOtherName#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </update>

    <delete id="deletePhoneCarrierOther">
        update phone_carrier_other set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </delete>

    <delete id="deleteProductModelOther">
        update product_model_other set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </delete>

    <select id="getPhoneCarrierId" resultType="java.lang.Integer">
        select phone_carrier_id from product_repair where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </select>

    <select id="getProductModelId" resultType="java.lang.Integer">
        select product_model_id from product_repair where appt_id = #apptId# and product_repair_id = #productRepairId#;
    </select>

    <update id="updateBusiness">
        update business,location
        set
        business.biz_name = #bizName#,
        business.category_code = null,
        business.contact_first_name = #contactFirstName#,
        business.contact_last_name = #contactLastName#,
        business.contact_email = #contactEmail#,
        business.contact_phone = #contactPhone#,
        business.website = #website#,
        business.modified_dt = UTC_TIMESTAMP(),
        business.modified_by = #modifiedBy#,
        business.is_active = #isActive#,
        business.is_searchable = #isSearchable#,
        location.address_line1 = #addressLine1#,
        location.address_line2 = #addressLine2#,
        location.city = #city#,
        location.state_code = #stateCode#,
        location.is_headquarters = #isHeadquarters#,
        location.zip_code = #zipCode#,
        location.phone_number1 = #phoneNumber1#,
        location.phone_number2 = #phoneNumber2#,
        location.fax_number = #faxNumber#,
        location.modified_dt = UTC_TIMESTAMP(),
        location.modified_by = #modifiedBy#,
        location.is_active = #isActiveLoc#
        where business.biz_id = #bizId# and (location.biz_id = #bizId# and location.loc_id = #locId#);
    </update>


    <update id="updateBasicBusinessDetails">
        update business
        set
        biz_name = #bizName#,
        description = #description#,
        category_code = null,
        modified_dt = UTC_TIMESTAMP(),
        reservation_lead_time = #reservationLeadTime#,
        cancellation_lead_time =  #cancellationLeadTime#,
        modified_by = #modifiedBy#,
        is_searchable = #isSearchable#,
        allow_unregistered_users = #allowUnregisteredUsers#,
        notify_by_email = #notifyByEmail#,
        notify_by_SMS = #notifyBySMS#,
        notify_by_PIN = #notifyByPIN#,
        display_counter = #displayCounter#,
        udf1_title = #udf1#,
        udf2_title = #udf2#,
        udf3_title = #udf3#,
        udf4_title = #udf4#,
        udf5_title = #udf5#,
        manage_inventory = #manageInventory#,
        online_payment = #onlinePayment#,
        paypal_hosted_button_id = #paypalHostedButtonId#,
        authorize_api_login_id = #authorizeApiLogInId#,
        authorize_transaction_key = #authorizeTransactionKey#
        where biz_id = #bizId#;
    </update>


    <select id="getBusinessByUserId" resultMap="businessResult">
        select
        business.biz_id,
        business.biz_name,
        business.description,
        business.category_code,
        business.contact_first_name,
        business.contact_last_name,
        business.contact_email,
        business.contact_phone,
        business.website,
        business.is_active,
        business.is_searchable,
        business.allow_unregistered_users,
        business.created_dt,
        business.created_by,
        business.modified_dt,
        business.modified_by,
        location.loc_id as loc_id,
        location.loc_name as loc_name,
        location.address_line1 as addr_line1,
        location.address_line2 as addr_line2,
        location.city as city,
        location.state_code as state_code,
        location.zip_code as zip_code,
        location.country_code as country_code,
        location.currency_code as currency_code,
        location.phone_number1 as phone_number1,
        location.phone_number2 as phone_number2,
        location.is_headquarters as is_headquarters,
        location.is_active as is_active_loc,
        location.fax_number as fax_number
        from business inner join location on business.biz_id = location.biz_id
        where business.created_by = #userId#
        and business.is_active = 'Y'
        and location.is_active = 'Y'
    </select>

    <select id="getBusinessesByUserId" resultMap="businessSummaryResult2">
        select
        b.biz_id,
        b.biz_name,
        b.description,
        group_concat(" ",CAST(c.category_name as CHAR),"") as category_name,
        b.contact_first_name,
        b.contact_last_name,
        b.contact_email,
        b.contact_phone,
        b.website,
        b.is_active,
        b.reservation_lead_time,
        b.cancellation_lead_time,
        b.is_searchable,
        b.dt_format_id,
        b.created_dt,
        b.created_by,
        b.modified_dt,
        b.modified_by,
        b.is_deleted,
        b.allow_unregistered_users,
        b.notify_by_email,
        b.notify_by_SMS
        from business b inner join business_user bu on b.biz_id = bu.biz_id
        join business_to_category bc on bc.biz_id = b.biz_id and bc.is_active = 'Y'
        join category c on c.category_code = bc.category_code
        where bu.user_id = #userId# and b.is_deleted = 'N' group by b.biz_id;
    </select>

    <select id="getBusinessesByUserIdByPromotionId" resultMap="businessPromotionSummaryResult">
        select
        business.biz_id,
        business.biz_name
        from business inner join business_user on business.biz_id = business_user.biz_id
        where business_user.user_id = #userId# and business.is_deleted = 'N' and business.is_active="Y" ORDER BY  business.biz_name ASC
    </select>


    <select id="getAllBusinesses" resultMap="businessSummaryResult2">
        select
        business.biz_id,
        business.biz_name,
        business.description,
        group_concat(" ",CAST(c.category_name as CHAR),"") as category_name,
        business.contact_first_name,
        business.contact_last_name,
        business.contact_email,
        business.contact_phone,
        business.website,
        business.is_active,
        business.reservation_lead_time,
        business.cancellation_lead_time,
        business.is_searchable,
        business.dt_format_id,
        business.created_dt,
        business.created_by,
        business.modified_dt,
        business.modified_by,
        business.is_deleted,
        business.allow_unregistered_users,
        business.notify_by_email,
        business.notify_by_SMS
        from business inner join business_user on business.biz_id = business_user.biz_id
        join business_to_category bc on bc.biz_id = business.biz_id and bc.is_active = 'Y'
        join category c on c.category_code = bc.category_code
        where business.is_deleted = 'N' and business.is_active="Y" group by business.biz_id; ORDER BY  business.biz_name ASC;
    </select>

    <select id="getBusinessByBizId" resultMap="businessSummaryResult1">
        select
        b.biz_id,
        um.user_id,
        b.biz_name,
        b.description,
        b.category_code,
        b.contact_first_name,
        b.contact_last_name,
        b.contact_email,
        b.contact_phone,
        b.website,
        b.is_active,
        b.reservation_lead_time,
        b.cancellation_lead_time,
        b.is_searchable,
        b.dt_format_id,
        b.created_dt,
        b.created_by,
        b.modified_dt,
        b.modified_by,
        b.is_deleted,
        b.allow_unregistered_users,
        b.notify_by_email,
        b.notify_by_SMS,
        b.notify_by_PIN,
        b.display_counter,
        udf1_title,
        udf2_title,
        udf3_title,
        udf4_title,
        udf5_title,
        manage_inventory,
        online_payment,
        paypal_hosted_button_id,
        authorize_api_login_id,
        authorize_transaction_key,
        country.country_calling_code
        from business  b join business_user bu on bu.biz_id=b.biz_id
        join user_master um on um.user_id=bu.user_id
        join country on um.country_code=country.country_code
        where b.biz_id = #bizId#
    </select>

    <select id="getBusinessForAppoitmentByUserId" resultMap="selectBusinessForAppointmentResult">
        select
        count(appt.appt_id) as appt_count,
        biz.biz_id,
        biz.biz_name,
        loc.loc_id,
        loc.loc_name,
        loc.city,
        loc.address_line1 as address
        from business biz join location loc on biz.biz_id = loc.biz_id
        join appointment appt on biz.biz_id = appt.biz_id and loc.loc_id = appt.loc_id
        join user_master um on appt.user_id = um.user_id
        where appt.user_id = #userId# group by biz_name;
    </select>

    <select id="getBusinessLocation" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.lat,
        location.custom_message,
        location.lng,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.loc_id = #locId#
    </select>

    <select id="getHeadquartersLocation" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_headquarters = 'Y'
    </select>

    <select id="getHeadquartersActiveLocation" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_headquarters = 'Y'
        and location.is_active = 'Y'
    </select>

    <update id="setHeadquartersToBranch">
        update location set
        is_headquarters = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id = #locId#;
    </update>

    <select id="getMasterServices" resultMap="serviceMasterResult">
        select
        service_code,
        service_name,
        category_code,
        description,
        is_active
        from service_master
        where category_code = #categoryCode#
        and is_active = 'Y'

    </select>



    <select id="getBusinessMasterServices" resultMap="serviceMasterResultWithSvcId">
        select
        service.svc_id as svc_id,
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join service on service.service_code = service_master.service_code
        where service.biz_id = #bizId#
    </select>

    <select id="getActiveBusinessMasterServices" resultMap="serviceMasterResultWithSvcId">
        select
        service.svc_id as svc_id,
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join service on service.service_code = service_master.service_code
        where service.biz_id = #bizId# and service.is_active = 'Y'
    </select>

    <select id="getBusinessMasterServicesUnselected" resultMap="serviceMasterResult">
        select
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join
        (select
        service_code
        from service_master where category_code = #categoryCode#
        and service_code NOT IN ( select service_code from service where biz_id = #bizId#)) as tb1
        on tb1.service_code = service_master.service_code
        where service_master.is_active = 'Y';
    </select>

    <select id="getResourceMasterServices" resultMap="serviceMasterResultWithSvcId">
        select
        service.svc_id as svc_id,
        service_master.service_code as service_code,
        concat(service_master.service_name,"->",c.category_name )as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join service on service.service_code = service_master.service_code
        join resource_to_service on resource_to_service.svc_id = service.svc_id and resource_to_service.is_active = 'Y'
        join category c on c.category_code=service_master.category_code
        where resource_to_service.res_id = #resId#
        and service_master.is_active = 'Y'
    </select>

    <select id="getResourceMasterServicesUnselected" resultMap="serviceMasterResultWithSvcId">
        select
        tb1.svc_id as svc_id,
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join
        (select
        service_code,svc_id from service
        where biz_id = #bizId#
        and svc_id NOT IN ( select svc_id from resource_to_service where res_id = #resId# and is_active = 'Y')) as tb1
        on tb1.service_code = service_master.service_code
        where service_master.is_active = 'Y'
    </select>

    <select id="getResourceServices" resultMap="serviceMasterResultWithSvcId">
        select svc_id,service_name,service_code,category_code,description,is_active from(select
        service.svc_id as svc_id,
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join service on service.service_code = service_master.service_code
        inner join location on location.biz_id=service.biz_id
        inner join location_to_service on location_to_service.svc_id=service.svc_id and location_to_service.is_active = 'Y'
        join resource_to_service on resource_to_service.svc_id = service.svc_id and resource_to_service.loc_id = #locId# and resource_to_service.is_active = 'Y'
        where resource_to_service.res_id = #resId#
        and service_master.is_active = 'Y' and location_to_service.loc_id=#locId#)as a GROUP BY svc_id;
    </select>

    <select id="getResourceServicesUnselected" resultMap="serviceMasterResultWithSvcId">
        select svc_id,service_name,service_code,category_code,description,is_active from(select
        tb1.svc_id as svc_id,
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join
        (select
        service.service_code,location_to_service.svc_id from location_to_service inner join service on location_to_service.svc_id=service.svc_id and location_to_service.is_active = 'Y'
        where loc_id = #locId#
        and location_to_service.svc_id NOT IN ( select svc_id from resource_to_service where res_id = #resId# and loc_id = #locId# and is_active = 'Y')) as tb1
        on tb1.service_code = service_master.service_code
        where service_master.is_active = 'Y')as a GROUP BY svc_id;
    </select>

    <insert id="addBusinessMasterServices">
        insert into service(
        svc_id,
        biz_id,
        service_code,
        details,
        duration,
        default_cost,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #bizId#,
        #serviceCode#,
        "blank",
        "0",
        null,
        'Y',
        UTC_TIMESTAMP(),
        "1",
        UTC_TIMESTAMP(),
        "1");
        <selectKey resultType="java.lang.Integer" keyProperty="svcId">
            select last_insert_id() as svc_id
        </selectKey>
    </insert>

    <insert id="addBusinessUser">
        insert into business_user(
        biz_id,
        user_id,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #bizId#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <insert id="updateResourceMasterServices">
        insert into resource_to_service(
        res_id,
        svc_id,
        loc_id,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #resId#,
        #svcId#,
        #locId#,
        'Y',
        #createdDt#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <insert id="addResourceMasterServices">
        insert into resource_to_service(
        res_id,
        svc_id,
        loc_id,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #resId#,
        #svcId#,
        #locId#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <insert id="addResLocationMasterServices">
        insert into location_to_service(
        loc_id,
        svc_id,
        cost,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #locId#,
        #svcId#,
        '0',
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <select id="getServices" resultMap="serviceResult">
        select
        service.svc_id,
        service.biz_id,
        service.service_code,
        service.details,
        service.duration,
        service.default_cost,
        service.is_active,
        service.created_dt,
        service.created_by,
        service.modified_dt,
        service.modified_by,
        service_master.service_name as service_name
        from service inner join service_master on service.service_code = service_master.service_code
        where service.biz_id = #bizId#
    </select>

    <select id="getActiveServices" resultMap="serviceResult">
        select
        service.svc_id,
        service.biz_id,
        service.service_code,
        service.details,
        service.duration,
        service.default_cost,
        service.is_active,
        service.created_dt,
        service.created_by,
        service.modified_dt,
        service.modified_by,
        service_master.service_name as service_name
        from service inner join service_master on service.service_code = service_master.service_code
        where service.biz_id = #bizId#
        and service.is_active = 'Y'
    </select>

    <select id="getService" resultMap="serviceResult">
        select
        service.svc_id,
        service.biz_id,
        service.service_code,
        service.details,
        service.duration,
        service.default_cost,
        service.is_active,
        service.created_dt,
        service.created_by,
        service.modified_dt,
        service.modified_by,
        service_master.service_name as service_name
        from service inner join service_master on service_master.service_code = service.service_code
        where service.svc_id = #svcId#;
    </select>

    <insert id="addService">
        insert into service(
        svc_id,
        biz_id,
        service_code,
        details,
        duration,
        default_cost,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #bizId#,
        #serviceCode#,
        #details#,
        #duration#,
        #defaultCost#,
        #isActive#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <update id="updateService" >
        update service
        set biz_id = #bizId#,
        service_code = #serviceCode#,
        details = #details#,
        duration = #duration#,
        default_cost = #defaultCost#,
        is_active = #isActive#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where svc_id = #svcId#;
    </update>

    <delete id="deleteService">
        delete
        from service
        where svc_id = #svcId#
    </delete>

    <select id="getResources" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where biz_id = #bizId# and is_active != 'D';
    </select>

    <select id="getActiveResources" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        resource_level,
        resource.res_role_code,
        restype.res_role_name
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where biz_id = #bizId#
        and is_active = 'Y';
    </select>

    <select id="getAllResourcesOfBusinessByBizId" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from	resource
        left
        join	resource_role_type		restype
        on		resource.res_role_code	=	restype.res_role_code
        where	resource.biz_id			=	#bizId#;
    </select>

    <select id="getActiveResources1" resultMap="resourceResult">
        select
        resource.res_id as res_id,
        resource.biz_id as biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        restype.res_role_name,
        resource.resource_level
        from location_to_resource inner join location on location.loc_id = location_to_resource.loc_id join resource on resource.res_id = location_to_resource.res_id
        join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where location.biz_id = #bizId#
        and resource.is_active = 'Y' and location_to_resource.is_active = 'Y';
    </select>

    <select id="getResources1" resultMap="resourceResultWithLocation">
        select
        resource.res_id as res_id,
        resource.biz_id as biz_id,
        location.loc_id as loc_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user
        from location_to_resource inner join location on location.loc_id = location_to_resource.loc_id join resource on resource.res_id = location_to_resource.res_id
        where location.biz_id = #bizId# and location_to_resource.is_active = 'Y';

    </select>

    <select id="getResourcesByLocId" resultMap="resourceResult">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        restype.res_role_name,
        resource.resource_level
        from resource inner join location_to_resource on location_to_resource.res_id = resource.res_id and location_to_resource.is_active = 'Y'
        join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where location_to_resource.loc_id = #locId#
    </select>

    <select id="getLocations" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId# ORDER BY location.is_headquarters DESC
    </select>

    <select id="getLocationPackageExist" resultMap="locationResult3">
        select
        business.biz_name,
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity
        from business inner join location on business.biz_id=location.biz_id
        inner join location_to_service on location_to_service.loc_id = location.loc_id and location_to_service.is_active = 'Y'
        inner join package on package.loc_svc_id = location_to_service.loc_svc_id
        where location.biz_id=#bizId# and location.is_active!='D' group by loc_name;
    </select>

    <select id="getLocationBylocationId" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.loc_id = #locId#
    </select>

    <select id="getNonDeletedLocations" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_active!='D' ORDER BY is_headquarters DESC
    </select>

    <select id="getActiveLocations" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_active = 'Y' ORDER BY location.is_headquarters DESC
    </select>


    <select id="getResource" resultMap="resourceResult1">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        resource.resource_level,
        resource_role_type.res_role_name,
        resource_role_type.res_role_code,
        location_to_resource.loc_id as loc_id
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id and location_to_resource.is_active = 'Y'
        right join resource_role_type on resource.res_role_code = resource_role_type.res_role_code
        where resource.res_id = #resId#
    </select>


    <select id="getResourceByNickName" resultMap="resourceResult2">
        select
        res_id,
        resource.biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        is_onsked_user
        from resource
        where nick_name = #nickName# and is_active!='D' and biz_id=#bizId# GROUP BY nick_name;
    </select>

    <select id="checkResourceRatePerHourExists" resultType="java.lang.Integer">
        select	count(1)
        from	resource_rate_per_hour
        where	res_id			=	#resId#
        and		effective_from	=	#rphEffectiveDate#
        and		effective_upto	=	'0000-00-00 00:00:00'
    </select>

    <select id="checkResourcePayoutPercentageExists" resultType="java.lang.Integer">
        select	count(1)
        from	resource_payout_percentage
        where	res_id			=	#resId#
        and		effective_from	=	#ppEffectiveDate#
        and		effective_upto	=	'0000-00-00 00:00:00'
    </select>


    <insert id="addResource">
        insert into resource(
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        resource_level,
        res_role_code)
        values(
        null,
        #bizId#,
        #firstName#,
        #lastName#,
        #nickName#,
        #description#,
        #addressLine1#,
        #addressLine2#,
        #city#,
        #stateCode#,
        #zipCode#,
        #countryCode#,
        #email#,
        #cellPhone#,
        #homePhone#,
        #workPhone#,
        #workPhoneExt#,
        #isActive#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #isOnskedUser#,
        #resourceLevel#,
        #resRoleTypeCode#);
        <selectKey resultType="java.lang.Integer" keyProperty="resId">
            select last_insert_id() as res_id
        </selectKey>
    </insert>

    <insert id="addResourceNewRatePerHour">
        insert into resource_rate_per_hour(
        res_id
        ,rate_per_hour
        ,effective_from
        ,created_dt
        ,created_by
        ,modified_dt
        ,modified_by)
        values(
        #resId#
        ,#ratePerHour#
        ,#rphEffectiveDate#
        ,UTC_TIMESTAMP()
        ,#createdBy#
        ,UTC_TIMESTAMP()
        ,#modifiedBy#);
    </insert>

    <insert id="addResourceNewPayoutPercentage">
        insert into resource_payout_percentage(
        res_id
        ,payout_percentage
        ,effective_from
        ,created_dt
        ,created_by
        ,modified_dt
        ,modified_by)
        values(
        #resId#
        ,#payoutPercentage#
        ,#ppEffectiveDate#
        ,UTC_TIMESTAMP()
        ,#createdBy#
        ,UTC_TIMESTAMP()
        ,#modifiedBy#);
    </insert>

    <insert id="addLocationToResource">
        insert into location_to_resource(
        loc_id,
        res_id,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #locId#,
        #resId#,
        #isActive#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <update id="updateLocationToResource">
        update location_to_resource
        set loc_id = #locId#,
        res_id = #resId#,
        is_active = #isActive#,
        modified_dt =UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where res_id = #resId# and loc_id=#locId#;

    </update>

    <update id="updateResource" >
        update resource
        set	biz_id = #bizId#,
        first_name = #firstName#,
        last_name = #lastName#,
        nick_name = #nickName#,
        description = #description#,
        address_line1 = #addressLine1#,
        address_line2 = #addressLine2#,
        city = #city#,
        state_code = #stateCode#,
        zip_code = #zipCode#,
        country_code = #countryCode#,
        email = #email#,
        cell_phone = #cellPhone#,
        home_phone = #homePhone#,
        work_phone = #workPhone#,
        work_phone_ext = #workPhoneExt#,
        is_active = #isActive#,
        created_dt = UTC_TIMESTAMP(),
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#,
        is_onsked_user = #isOnskedUser#
        where res_id = #resId#;
    </update>

    <update id="updateResourcePreviousRphEffectiveUpto">
        update resource_rate_per_hour
        set
        effective_upto	=	DATE_SUB(#rphEffectiveDate#, INTERVAL 1 DAY)
        ,modified_dt	=	UTC_TIMESTAMP()
        ,modified_by	=	#modifiedBy#
        where
        res_id			=	#resId#
        and	effective_upto	=	'0000-00-00 00:00:00';
    </update>

    <update id="updateResourceRatePerHour">
        update resource_rate_per_hour
        set
        rate_per_hour	=	#ratePerHour#
        ,modified_dt	=	UTC_TIMESTAMP()
        ,modified_by	=	#modifiedBy#
        where
        res_id			=	#resId#
        and	effective_from	=	#rphEffectiveDate#
        and	effective_upto	=	'0000-00-00 00:00:00'
        and	rate_per_hour	!=	#ratePerHour#;
    </update>

    <update id="updateResourcePreviousPpEffectiveUpto">
        update resource_payout_percentage
        set
        effective_upto	=	DATE_SUB(#ppEffectiveDate#, INTERVAL 1 DAY)
        ,modified_dt	=	UTC_TIMESTAMP()
        ,modified_by	=	#modifiedBy#
        where
        res_id			=	#resId#
        and	effective_upto	=	'0000-00-00 00:00:00';
    </update>

    <update id="updateResourcePayoutPercentage">
        update resource_payout_percentage
        set
        payout_percentage	=	#payoutPercentage#
        ,modified_dt		=	UTC_TIMESTAMP()
        ,modified_by		=	#modifiedBy#
        where
        res_id				=	#resId#
        and	effective_from		=	#rphEffectiveDate#
        and	effective_upto		=	'0000-00-00 00:00:00'
        and	payout_percentage	!=	#payoutPercentage#;
    </update>

    <update id="updateBusinessResource" >
        update resource
        set	biz_id = #bizId#,
        first_name = #firstName#,
        last_name = #lastName#,
        nick_name = #nickName#,
        description = #description#,
        address_line1 = #addressLine1#,
        address_line2 = #addressLine2#,
        city = #city#,
        state_code = #stateCode#,
        zip_code = #zipCode#,
        country_code = #countryCode#,
        email = #email#,
        cell_phone = #cellPhone#,
        home_phone = #homePhone#,
        work_phone = #workPhone#,
        work_phone_ext = #workPhoneExt#,
        is_active = #isActive#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#,
        is_onsked_user = #isOnskedUser#,
        resource_level = #resourceLevel#,
        res_role_code = #resRoleTypeCode#
        where res_id = #resId#;
    </update>

    <update id="updateBusinessLocation">
        update location
        set loc_name = #locName#,
        description = #description#,
        address_line1 = #addressLine1#,
        address_line2 = #addressLine2#,
        city = #city#,
        state_code = #stateCode#,
        zip_code = #zipCode#,
        country_code = #countryCode#,
        currency_code = #currencyCode#,
        timezone_code = #timeZoneCode#,
        phone_number1 = #phoneNumber1#,
        phone_number2 = #phoneNumber2#,
        fax_number = #faxNumber#,
        is_headquarters = #isHeadquarters#,
        is_active = #isActive#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#,
        lat = #lat#,
        custom_message=#customMessage#,
        lng = #lng#,
        auto_approve_request=#autoApproveRequest#,
        pending_appt_overlap=#allowMultipleAppts#,
        appt_granularity = #apptGranularity#,
        tax = #tax#
        where loc_id = #locId#;
    </update>

    <delete id="deleteResource">
        delete
        from resource
        where res_id = #resId#
    </delete>

    <delete id="deleteLocationToResource">
        update location_to_resource set
        is_active = #active#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where res_id = #resId# and loc_id = #locId#
    </delete>

    <delete id="deleteLocationToService">
        delete
        from location_to_resource
        where res_id = #resId#
    </delete>

    <delete id="deleteLocationResourceRecord">
        update location_to_resource set
        is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id = #locId#
    </delete>

    <delete id="removeServicesProvided">
        delete
        from resource_to_service
        where svc_id = #svcId#
    </delete>

    <delete id="deleteLocationServicesRecord">
        update location_to_service set
        is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id = #locId#
    </delete>

    <delete id="deleteLocationHolidaysRecord">
        update business_holiday set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id = #locId#
    </delete>

    <delete id="deleteResourceToServiceBySvcId">
        delete
        from resource_to_service
        where svc_id = #svcId#
    </delete>

    <delete id="deleteResourceToServiceByResId">
        update resource_to_service set
        is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where res_id = #resId# and loc_id = #locId#
    </delete>

    <delete id="deleteBusinessLocation">
        delete
        from location
        where loc_id = #locId#
    </delete>

    <delete id="deleteBusinessLocationTimings">
        delete
        from location_hours
        where loc_id = #locId#
    </delete>

    <delete id="deleteMaterialList">
        delete FROM material_stock where loc_id =#locId#;
    </delete>

    <delete id="deleteBusinessTimings">
        delete
        from business_hours
        where biz_id = #bizId#
    </delete>

    <delete id="deleteBusinessMasterServices">
        delete
        from service
        where svc_id = #svcId#
    </delete>

    <insert id="addBusinessHours" >
        insert into business_hours(
        biz_id,
        day_of_week,
        is_open,
        open_time,
        close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #bizId#,
        #dayOfWeek#,
        #isOpen#,
        #openTime#,
        #closeTime#,
        #createdDt#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>


    <update id="updateBusinessHours">
        update business_hours
        set day_of_week = #dayOfWeek#,
        is_open = #isOpen#,
        open_time = #openTime#,
        close_time = #closeTime#
        created_dt = #createdDt#
        created_by = #createdBy#
        modified_dt = #modifiedDt#
        modified_by = #modified_by#
        where biz_id = #bizId#;
    </update>



    <select id="getBasicBusinessHours" resultMap="businessHoursResult">
        select
        biz_id,
        day_of_week,
        is_open,
        SUBSTRING(CONCAT(Date(now()),' ',open_time),12) as open_time,
        SUBSTRING(CONCAT(Date(now()),' ',close_time),12) as close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_hours
        where biz_id = #bizId#
    </select>

    <select id="getBizHrsWrtTimeZn" resultMap="businessHoursResult">
        select
        biz_id,
        day_of_week,
        is_open,
        if(is_open = 1,SUBSTRING((CONCAT(Date(now()),' ',open_time)),12),'00:00:00') as open_time,
        if(is_open = 1,SUBSTRING((CONCAT(Date(now()),' ',close_time)),12),'00:00:00') as close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_hours
        where biz_id = #bizId#
    </select>

    <select id="getLocHrsWrtTmZone" resultMap="locationHoursResult">
        select
        loc_id,
        day_of_week,
        is_open,
        if(is_open = 1,SUBSTRING((CONCAT(Date(now()),' ',open_time)),12),'00:00:00') as open_time,
        if(is_open = 1,SUBSTRING((CONCAT(Date(now()),' ',close_time)),12),'00:00:00') as close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from location_hours
        where loc_id = #locId#
    </select>


    <insert id="addLocationHours" >
        insert into location_hours(
        loc_id,
        day_of_week,
        is_open,
        open_time,
        close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #locId#,
        #dayOfWeek#,
        #isOpen#,
        #openTime#,
        #closeTime#,
        #createdDt#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <update id="updateLocationHours">
        update location_hours
        set day_of_week = #dayOfWeek#,
        is_open = #isOpen#,
        open_time = #openTime#,
        close_time = #closeTime#
        created_dt = #createdDt#
        created_by = #createdBy#
        modified_dt = #modifiedDt#
        modified_by = #modified_by#
        where loc_id = #locId#;
    </update>



    <select id="checkIsResourceOnskedUser" resultType="java.lang.Integer">
        select
        count(*)
        from resource where email = #email#;
    </select>

    <select id="getLocationHours" resultMap="locationHoursResult">
        select
        location_hours.loc_id as loc_id,
        location_hours.day_of_week as day_of_week,
        location_hours.is_open as is_open,
        if(location_hours.open_time="00:00:00", location_hours.open_time, SUBSTRING(CONCAT(Date(now()),' ',location_hours.open_time),12)) as open_time,
        if(location_hours.open_time="00:00:00", location_hours.close_time, SUBSTRING(CONCAT(Date(now()),' ',location_hours.close_time),12)) as close_time,location_hours.created_dt as created_dt,
        location_hours.created_by as created_by,
        location_hours.modified_dt as modified_dt,
        location_hours.modified_by as modified_by
        from location_hours inner join location on location.loc_id = location_hours.loc_id
        where location_hours.loc_id = #locId#
    </select>

    <select id="getLocationHoursByBizId" resultMap="locationHoursResult">
        select
        location_hours.loc_id as loc_id,
        group_concat(CAST(location_hours.day_of_week as CHAR) order by location_hours.day_of_week) as day_of_week,
        location_hours.is_open as is_open,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.open_time),12) as open_time,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.close_time),12) as close_time,
        location_hours.created_dt as created_dt,
        location_hours.created_by as created_by,
        location_hours.modified_dt as modified_dt,
        location_hours.modified_by as modified_by
        from location_hours inner join location on location.loc_id = location_hours.loc_id
        where location_hours.loc_id in (SELECT loc_id FROM location l where biz_id = #bizId# ) group by
        location_hours.loc_id,location_hours.open_time, location_hours.close_time
        order by location_hours.loc_id, location_hours.day_of_week;
    </select>


    <insert id="addBusinessHoliday">
        insert into business_holiday(
        holiday_id,
        biz_id,
        loc_id,
        holiday_dt,
        reason,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_active)
        values(
        null,
        #bizId#,
        #locId#,
        #dateOfHolidayAsYYYYMMDD#,
        #reason#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        'Y');
    </insert>

    <select id="getHolidayByHolidayId" resultMap="holidayResult">
        select
        holiday_id,
        loc_id,
        biz_id,
        date_format(holiday_dt,'%m/%d/%Y') as holiday_dt,
        reason,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_holiday
        where  holiday_id = #holidayId# and is_active='Y';
    </select>

    <select id="getHolidays" resultMap="holidayResult3">
        select
        business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format(business_holiday.holiday_dt,'%m/%d/%Y') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by,
        location.loc_name,
        group_concat( cast(business_holiday.loc_id  as char(100))) as loc_id1
        from business_holiday inner join location on location.loc_id = business_holiday.loc_id
        where business_holiday.biz_id = #bizId# and business_holiday.is_active='Y' and year(business_holiday.holiday_dt) = year(now()) group by business_holiday.holiday_dt;
    </select>

    <select id="getHolidayByBusinessLocation" resultMap="holidayResult3">
        select
        business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format(business_holiday.holiday_dt,'%m/%d/%Y') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by,
        location.loc_name,
        group_concat( cast(business_holiday.loc_id  as char(100))) as loc_id1
        from business_holiday inner join location on location.loc_id = business_holiday.loc_id
        where business_holiday.biz_id = #bizId# and business_holiday.is_active='Y' and business_holiday.loc_id = #locId# and year(business_holiday.holiday_dt) = year(now()) group by business_holiday.holiday_dt;
    </select>

    <select id="getBusinessLocationHolidaysHQ" resultMap="holidayResult">
        select
        business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format(business_holiday.holiday_dt,'%m/%d/%Y') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by
        from business_holiday inner join location on location.loc_id = business_holiday.loc_id
        where business_holiday.holiday_id = #holidayId# and business_holiday.is_active='Y';
    </select>

    <update id="updateHoliday">
        update business_holiday
        set
        holiday_id = #holidayId#,
        biz_id = #bizId#,
        loc_id = #locId#,
        holiday_dt=#dateOfHolidayAsYYYYMMDD#,
        reason=#reason#,
        created_dt = UTC_TIMESTAMP(),
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where holiday_id = #holidayId# and is_active = 'Y';
    </update>

    <delete id="deleteHoliday">
        update business_holiday set is_active = 'N'
        where holiday_id = #holidayId#;
    </delete>

    <select id="getHolidayByBizIdLocIdDate" resultMap="holidayResult">
        select
        business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format( business_holiday.holiday_dt,'%m/%d/%Y') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by,
        location.loc_name
        from business_holiday inner join location on location.loc_id = business_holiday.loc_id
        where business_holiday.holiday_id = #holidayId# and business_holiday.is_active='Y';
    </select>

    <update id="updateHolidayByBizIdLocIdDate">
        update business_holiday
        set	holiday_id = #holidayId#,
        biz_id = #bizId#,
        loc_id = #locId#,
        holiday_dt=#dateOfHolidayAsYYYYMMDD#,
        reason=#reason#,
        created_dt = #createdDt#,
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where holiday_id = #holidayId# and is_active = 'Y';
    </update>

    <delete id="deleteHolidayByBizIdLocIdDate">
        update business_holiday set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where holiday_id = #holidayId#;
    </delete>

    <delete id="deleteHolidayByBizIdLocIdHolidayDate">
        update business_holiday set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id = #bizId# and loc_id=#locId# and holiday_dt=#dateOfHolidayAsYYYYMMDD#;
    </delete>

    <select id="getResourceSvcByBizId" resultMap="serviceMasterBizResourceResult">
        select
        resource_to_service.loc_id as loc_id,
        resource.biz_id as biz_id,
        resource.res_id as res_id,
        service_master.service_code,
        service_master.service_name
        from resource inner join resource_to_service on resource.res_id = resource_to_service.res_id and resource_to_service.is_active = 'Y'
        join service on resource_to_service.svc_id = service.svc_id
        join service_master on service.service_code = service_master.service_code
        where resource.biz_id = #bizId#
    </select>

    <select id="getResourceSvcByBizId1" resultMap="serviceMasterBizResourceResult">
        select distinct resource_to_service.loc_id as loc_id,location.loc_name,
        resource.biz_id as biz_id,
        resource.res_id as res_id,
        service_master.service_code,
        service_master.service_name
        from resource_to_service inner join service on service.svc_id = resource_to_service.svc_id and resource_to_service.is_active = 'Y'
        join resource on resource_to_service.res_id=resource.res_id
        join location_to_resource on location_to_resource.res_id = resource.res_id
        join location on resource_to_service.loc_id = location.loc_id
        join service_master on service.service_code = service_master.service_code
        inner join business on resource.biz_id = business.biz_id
        where resource.biz_id = #bizId#
        and
        (
        location_to_resource.is_active = 'Y'
        or
        (business.is_active = 'N' and location_to_resource.is_active = 'N')
        );
    </select>

    <select id="getLocationScvByBizId" resultMap="serviceMasterBizLocationResult">
        select
        l.loc_id,
        l.biz_id,
        l.loc_name,
        l.description,
        l.address_line1,
        l.address_line2,
        l.city,
        l.state_code,
        l.zip_code,
        l.country_code,
        l.currency_code,
        l.timezone_code,
        t.timezone,
        l.phone_number1,
        l.phone_number2,
        l.fax_number,
        l.is_headquarters,
        l.is_active,
        l.created_dt,
        l.custom_message,
        l.created_by,
        l.modified_dt,
        l.modified_by,
        l.lat,
        l.lng,
        l.auto_approve_request,
        l.pending_appt_overlap,
        l.appt_granularity,
        group_concat(sm.service_name) as service_name
        from location l
        join location_to_service ls on ls.loc_id = l.loc_id and ls.is_active = 'Y'
        join service s on s.svc_id = ls.svc_id and s.biz_id=l.biz_id
        join service_master sm on s.service_code = sm.service_code
        left join timezone t on l.timezone_code = t.timezone_code
        where l.biz_id = #bizId# and l.is_active!="D" group by loc_id ORDER BY l.is_headquarters DESC
    </select>

    <select id="getActiveLocationScvByBizId" resultMap="serviceMasterBizLocationResult">
        select
        l.loc_id,
        l.biz_id,
        l.loc_name,
        l.description,
        l.address_line1,
        l.address_line2,
        l.city,
        l.state_code,
        l.zip_code,
        l.country_code,
        l.currency_code,
        l.timezone_code,
        t.timezone,
        l.phone_number1,
        l.phone_number2,
        l.fax_number,
        l.is_headquarters,
        l.is_active,
        l.created_dt,
        l.custom_message,
        l.created_by,
        l.modified_dt,
        l.modified_by,
        l.lat,
        l.lng,
        l.auto_approve_request,
        l.pending_appt_overlap,
        l.appt_granularity,
        group_concat(sm.service_name) as service_name
        from location l
        join location_to_service ls on ls.loc_id = l.loc_id and ls.is_active = 'Y'
        join service s on s.svc_id = ls.svc_id and s.biz_id=l.biz_id
        join service_master sm on s.service_code = sm.service_code
        left join timezone t on l.timezone_code = t.timezone_code
        where l.biz_id = #bizId# and l.is_active!="Y" group by loc_id ORDER BY is_headquarters DESC
    </select>

    <select id="getResourceLocByResId" resultMap="locationBizResourceResult">
        select
        resource.biz_id as biz_id,
        resource.res_id as res_id,
        location.loc_id,
        location.loc_name
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id
        join location on location_to_resource.loc_id = location.loc_id
        inner join business on resource.biz_id = business.biz_id
        where resource.res_id = #resId#
        and
        (
        location_to_resource.is_active = 'Y'
        or
        (business.is_active = 'N' and location_to_resource.is_active = 'N')
        );
    </select>

    <select id="getResourceLocByBizId" resultMap="locationBizResourceResult">
        select
        resource.biz_id as biz_id,
        resource.res_id as res_id,
        location.loc_id,
        location.loc_name
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id and location_to_resource.is_active = 'Y'
        join location on location_to_resource.loc_id = location.loc_id
        where resource.biz_id = #bizId#;
    </select>

    <select id="getResourceLocByBizId1" resultMap="locationBizResourceResult">
        select
        resource.res_id as res_id,
        resource.biz_id as biz_id,
        location.loc_id,
        location.loc_name
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id
        join location on location_to_resource.loc_id = location.loc_id
        inner join business on resource.biz_id = business.biz_id
        where resource.biz_id = #bizId#
        and
        (
        location_to_resource.is_active = 'Y'
        or
        (business.is_active = 'N' and location_to_resource.is_active = 'N')
        );
    </select>


    <update id="setBusinessActive">
        update business
        set is_active = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id = #bizId#;
    </update>

    <update id="setBusinessInActive">
        UPDATE business b join business_user bu on bu.biz_id=b.biz_id SET is_active='E' where bu.user_id=#userId# and b.is_deleted='N' and b.is_active='Y';
    </update>

    <update id="updateLocationToService" >
        update location_to_service
        set loc_id = #locId#,
        svc_id = #svcId#,
        cost = #cost#,
        duration = #duration#,
        is_active='Y',
        created_dt = #createdDt#,
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where loc_id = #locId# and svc_id = #svcId#;
    </update>

    <select id="getBusinessLocationToService" resultMap="locationToService">
        select
        location_to_service.loc_svc_id as loc_svc_id,
        location_to_service.loc_id as loc_id,
        location_to_service.svc_id as svc_id,
        location_to_service.client_location as client_location,
        location_to_service.created_dt as created_dt,
        location_to_service.created_by as created_by,
        location_to_service.modified_dt as modified_dt,
        location_to_service.modified_by as modified_by,
        location_to_service.cost as cost,
        location_to_service.duration as duration,
        service.service_code as service_code,
        service_master.service_name as service_name,
        location.loc_name as loc_name

        from location_to_service inner join location on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service  on service.svc_id=location_to_service.svc_id
        inner join service_master on service.service_code=service_master.service_code where service.biz_id = #bizId#
        ORDER BY location_to_service.loc_svc_id, location_to_service.loc_id, location_to_service.svc_id ;

    </select>

    <select id="getUniqueLocationToService" resultMap="locationToService">
        SELECT  loc_svc_id,loc_id,svc_id,client_location,service_name,loc_name,cost,duration,created_dt,created_by,modified_dt,modified_by  FROM (select
        location_to_service.loc_svc_id as loc_svc_id,
        location_to_service.loc_id as loc_id,
        location_to_service.svc_id as svc_id,
        location_to_service.client_location as client_location,
        location_to_service.created_dt as created_dt,
        location_to_service.created_by as created_by,
        location_to_service.modified_dt as modified_dt,
        location_to_service.modified_by as modified_by,
        location_to_service.cost as cost,
        location_to_service.duration as duration,
        service.service_code as service_code,
        service_master.service_name as service_name,
        location.loc_name as loc_name
        from location_to_service inner join location on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service on service.svc_id=location_to_service.svc_id
        inner join service_master on service.service_code=service_master.service_code where service.biz_id = #bizId#
        ORDER BY loc_svc_id ASC) as a GROUP BY loc_id,svc_id  ;

    </select>


    <select id="getUniqueLocation" resultMap="locationToService">
        SELECT loc_svc_id,loc_id,svc_id,client_location,service_name,loc_name,cost,duration,created_dt,created_by,modified_dt,modified_by  FROM (select
        location_to_service.loc_svc_id as loc_svc_id,
        location_to_service.loc_id as loc_id,
        location_to_service.svc_id as svc_id,
        location_to_service.client_location as client_location,
        location_to_service.created_dt as created_dt,
        location_to_service.created_by as created_by,
        location_to_service.modified_dt as modified_dt,
        location_to_service.modified_by as modified_by,
        location_to_service.cost as cost,
        location_to_service.duration as duration,
        service.service_code as service_code,
        service_master.service_name as service_name,
        location.loc_name as loc_name

        from location_to_service inner join location on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service  on service.svc_id=location_to_service.svc_id
        inner join service_master on service.service_code=service_master.service_code where service.biz_id = #bizId#
        ORDER BY loc_svc_id ASC) as a GROUP BY loc_id;

    </select>

    <select id="getLocationListForAddingSvc" resultMap="locationResult">
        select loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timeZone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id= #bizId# and location.is_active!='D' and location.loc_id not in (select distinct loc_id  from location_to_service where is_active = 'Y') ORDER BY location.is_headquarters DESC;
    </select>

    <select id="getActiveLocationListForAddingSvc" resultMap="locationResult">
        select location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timeZone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id= #bizId# and location.is_active="Y" and location.loc_id not in (select distinct loc_id  from location_to_service where is_active = 'Y') ORDER BY location.is_headquarters DESC;
    </select>



    <delete id="deleteServiceDuration">
        delete location_to_service.* from location_to_service inner join
        location on location.loc_id = location_to_service.loc_id where location.biz_id = #bizId#;
    </delete>

    <select id="getUniqueLocationToServiceByLocIdBizId" resultMap="LocationToServiceUniqueResult">
        select loc_id,
        loc_name,
        service_name,
        service_code,
        svc_id from
        (select location.loc_id,
        location.loc_name,
        service_master.service_name,
        service_master.service_code,
        service.svc_id from service_master inner join location on location.loc_id=#locId#
        inner join location_to_service on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service on service.svc_id=location_to_service.svc_id
        where service_master.service_code=service.service_code)as a GROUP BY loc_id,svc_id;
    </select>

    <select id="getServiceListByBizIdCategoryCodeLocId" resultMap="LocationToServiceUniqueResult1">
        select
        service_master.service_code as service_code,
        service_master.service_name as service_name,
        service_master.category_code as category_code,
        service_master.description as description,
        service_master.is_active as is_active
        from service_master inner join
        (select
        service_code
        from service_master where category_code = #categoryCode#
        and service_code NOT IN ( select service.service_code from location_to_service inner join service on location_to_service.is_active = 'Y' and location_to_service.svc_id = service.svc_id where loc_id = #locId#)) as tb1
        on tb1.service_code = service_master.service_code
        where service_master.is_active = 'Y';
    </select>

    <delete id="deleteLocationToServiceBySvcIdLocId">
        update location_to_service set
        is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where svc_id=#svcId# and loc_id=#locId#;
    </delete>

    <select id="getResourcesOfLocation" resultMap="ResourceOfLocation">
        select res_id,loc_id from location_to_resource where loc_id=#locId# and is_active = 'Y';
    </select>

    <select id="getApptListByCourseId" resultMap="CourseApptId">
        select appt_id from course_to_appointment where course_id=#courseId#;
    </select>

    <delete id="deleteResourceRecord">
        delete from resource where res_id=#resId# ;
    </delete>

    <delete id="deletePurchaseDetails">
        delete FROM purchase_details where purchase_id=#purchaseId#;
    </delete>

    <delete id="deletePurchaseHeaderByLocId">
        delete FROM purchase_header where loc_id=#locId#;
    </delete>

    <delete id="deleteResourceToServiceByResIdSvcId">
        delete FROM resource_to_service
        where res_id=#resId# and svc_id=#svcId# and loc_id=#locId#;
    </delete>

    <delete id="deleteResourceCertificateByResCertId">
        delete from resource_certificate where res_cert_id=#resCertId# and res_id=#resId#;
    </delete>

    <select id="getResourceToServiceByResId" resultMap="ResourceOfService">
        select res_id,svc_id from resource_to_service where res_id=#resId# is_active = 'Y';
    </select>

    <select id="getLocationByNickName" resultMap="locationResult">
        select * from (select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.loc_name = #locName# and location.biz_id = #bizId# )as a GROUP BY loc_name;
    </select>

    <select id="checkDuplicateLocation" resultType="java.lang.Integer">
        select count(loc_name) from location where loc_name = #locName# and biz_id = #bizId#;
    </select>

    <select id="getActiveLocationByNickName" resultMap="locationResult">
        select * from (select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.loc_name = #locName# and location.biz_id = #bizId# and location.is_active='Y')as a GROUP BY loc_name;
    </select>

    <select id="getBusinessByBizNameEmail" resultMap="businessSummaryResult">
        select * from (select
        business.biz_id,
        business.biz_name,
        business.description,
        business_to_category.category_code,
        business.contact_first_name,
        business.contact_last_name,
        business.contact_email,
        business.contact_phone,
        business.website,
        business.is_active,
        business.reservation_lead_time,
        business.cancellation_lead_time,
        business.is_searchable,
        business.dt_format_id,
        business.created_dt,
        business.created_by,
        business.modified_dt,
        business.modified_by,
        business.is_deleted,
        business.allow_unregistered_users,
        business.notify_by_email,
        business.notify_by_SMS,
        category.category_name as category_name
        from business left join business_to_category on business_to_category.biz_id = business.biz_id and business_to_category.is_active = 'Y'
        left join category on business_to_category.category_code= category.category_code
        where business.biz_name = #bizName# and business.contact_email=#contactEmail#)as a GROUP BY biz_name;
    </select>



    <select id="getUserByUserId" resultMap="result">
        select user_id from user_master
        where user_master.user_id = #userId#
    </select>




    <insert id="addResourceHours" >
        insert into resource_hours(
        res_id,
        day_of_week,
        is_working,
        loc_id,
        start_time,
        end_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        #resId#,
        #dayOfWeek#,
        #isOpen#,
        #locId#,
        #openTime#,
        #closeTime#,
        #createdDt#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <insert id="updateResourceHours" >
        update resource_hours set
        is_working = #isOpen#,
        start_time = #openTime#,
        end_time = #closeTime#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where res_id = #resId# and day_of_week = #dayOfWeek# and loc_id = #locId#;
    </insert>

    <insert id="addResourceCertificate" >
        insert into resource_certificate(
        res_cert_id,
        res_id,
        res_cert_num,
        res_cert_name,
        res_cert_completion_date,
        res_cert_expiration_date,
        res_cert_organisation)
        values(
        null,
        #resId#,
        #certificateNumber#,
        #certificateName#,
        #certificateCompletionDate#,
        #certificateExpirationDate#,
        #certificateOrganization#);
    </insert>

    <update id="updateResourceCertificate">
        update resource_certificate set
        res_cert_num = #certificateNumber#,
        res_cert_name = #certificateName#,
        res_cert_completion_date = #certificateCompletionDate#,
        res_cert_expiration_date =  #certificateExpirationDate#,
        res_cert_organisation =   #certificateOrganization#
        where res_cert_id = #resCertId#;
    </update>

    <delete id="deleteResourceHours">
        delete
        from resource_hours
        where res_id = #resId# and loc_id=#locId#
    </delete>

    <delete id="deleteResourceHoursBylocId">
        delete
        from resource_hours
        where loc_id = #locId#
    </delete>


    <select id="getResourceCertificate" resultMap="resourceCertificateResult">
        SELECT res_cert_id,res_id,res_cert_num,res_cert_name,res_cert_completion_date,res_cert_expiration_date,res_cert_organisation
        FROM resource_certificate where res_id=#resId#;
    </select>


    <select id="getResourceHours" resultMap="resourceHoursResult">
        select
        res_id,
        day_of_week,
        is_working,
        loc_id,
        SUBSTRING(CONCAT(Date(now()),' ',start_time),12) as start_time,
        SUBSTRING(CONCAT(Date(now()),' ',end_time),12) as end_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from resource_hours
        where res_id = #resId#
    </select>

    <select id="getResourceHours1" resultMap="resourceHoursResult">
        select
        res_id,
        day_of_week,
        is_working,
        loc_id,
        SUBSTRING(CONCAT(Date(now()),' ',start_time),12) as start_time,
        SUBSTRING(CONCAT(Date(now()),' ',end_time),12) as end_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from resource_hours
        where res_id = #resId# and loc_id = #locId#;
    </select>


    <select id="getResourceHoursByBizId" resultMap="resourceHoursResult">
        select
        resource_hours.res_id,
        resource_hours.loc_id,
        resource_hours.day_of_week,
        resource_hours.is_working,
        resource_hours.start_time,
        resource_hours.end_time,
        resource_hours.created_dt,
        resource_hours.created_by,
        resource_hours.modified_dt,
        resource_hours.modified_by
        from resource_hours inner join resource on resource.res_id = resource_hours.res_id
        where resource.biz_id = #bizId#
    </select>

    <select id="getResHoursByBizId" resultMap="resourceHoursResult1">
        select
        resource_hours.loc_id as loc_id,
        resource_hours.res_id as res_id,
        r.first_name as first_name,
        r.last_name as last_name,
        r.nick_name as nick_name,
        group_concat(distinct CAST(resource_hours.day_of_week as CHAR) order by resource_hours.day_of_week) as day_of_week,
        resource_hours.is_working as is_working,
        SUBSTRING(CONCAT(Date(now()),' ',resource_hours.start_time),12) as start_time,
        SUBSTRING(CONCAT(Date(now()),' ',resource_hours.end_time),12) as end_time,
        resource_hours.created_dt as created_dt,
        resource_hours.created_by as created_by,
        resource_hours.modified_dt as modified_dt,
        resource_hours.modified_by as modified_by
        from resource_hours inner join location on location.loc_id = resource_hours.loc_id
        join resource r on r.res_id = resource_hours.res_id
        where resource_hours.loc_id in (SELECT loc_id FROM location l where biz_id = #bizId# ) and r.is_active = 'Y' and resource_hours.is_working = 1 and r.res_role_code != 'TECHNICIAN'
        group by resource_hours.loc_id,resource_hours.start_time, resource_hours.end_time, resource_hours.res_id, r.nick_name ORDER By r.res_role_code desc;
    </select>



    <select id="getUserByEmailId" resultMap="result">
        select email from user_master
        where user_master.email = #email#
    </select>


    <select id="getAllBusinessEntries" resultMap="allbusiness">
        select
        business.biz_id
        from user_master
        inner join business_user on user_master.user_id=business_user.user_id
        inner join business on business.biz_id=business_user.biz_id
        inner join location on location.biz_id=business.biz_id
        inner join service on service.biz_id=business.biz_id
        inner join resource on resource.biz_id=business.biz_id
        inner join business_holiday on business_holiday.biz_id=business.biz_id and business_holiday.is_active='Y' where user_master.user_id=#userId# group by business.biz_id;
    </select>



    <select id="getHolidaysByCountryCode" resultMap="holidays">
        select country_code,
        holiday_dt,
        holiday_reason,
        is_active
        from holiday where holiday.country_code=#countryCode# and year(CURDATE()) = year(holiday_dt);
    </select>


    <select id="getDefaultHolidayForBranches" resultMap="holidayResult1">
        select business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format(business_holiday.holiday_dt,'%m/%d/%Y') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by from business_holiday where loc_id=#locId# and business_holiday.is_active = 'Y'
        and holiday_dt NOT IN (select holiday_dt from holiday where country_code=#countryCode#) and reason not in (select holiday_reason from holiday where country_code=#countryCode#);

    </select>

    <select id="getDefaultHolidayForBranchesInDateNMonth" resultMap="holidayResult1">
        select business_holiday.holiday_id,
        business_holiday.loc_id,
        business_holiday.biz_id,
        date_format(business_holiday.holiday_dt,'%d %b') as holiday_dt,
        business_holiday.reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by from business_holiday where loc_id=#locId# and business_holiday.is_active = 'Y'
        and holiday_dt NOT IN (select holiday_dt from holiday where country_code=#countryCode#) and reason not in (select holiday_reason from holiday where country_code=#countryCode#);

    </select>

    <select id="getAllCategories" resultMap="listBusinessCategoriesResult">
        select
        category_code,
        category_name,
        resource_title,
        resource_title_plural,
        receiver_title,
        receiver_title_plural,
        details,
        is_active
        from category;
    </select>


    <select id="getCategories" resultMap="listBusinessCategoriesResult">
        select
        category_code,
        category_name,
        resource_title,
        resource_title_plural,
        receiver_title,
        receiver_title_plural,
        details,
        is_active
        from category where is_active = 'Y'
    </select>

    <select id="getBusiness" resultMap="businessResult1">
        select
        biz_id,
        biz_name,
        description,
        category_code,
        contact_first_name,
        contact_last_name,
        contact_email,
        contact_phone,
        website,
        is_active,
        is_searchable,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business
        where biz_id = #bizId#
    </select>


    <select id="getLocIdByBizId" resultMap="locationResult1">
        select loc_id from location where biz_id = #bizId#
    </select>

    <select id="getServiceNames" resultMap="serviceMasterNamesResult">
        select
        service_master.service_name,
        service_master.service_code
        from service_master inner join service on service_master.service_code = service.service_code
        where service.biz_id = #bizId#
    </select>


    <select id="getBusinessHours" resultMap="businessHoursResult">
        select
        biz_id,
        day_of_week,
        is_open,
        SUBSTRING(CONCAT(Date(now()),' ',open_time),12) as open_time,
        SUBSTRING(CONCAT(Date(now()),' ',close_time),12) as close_time,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_hours
        where biz_id = #bizId#
    </select>


    <select id="getCurrencyByCountryCode" resultMap="currencyResult">
        select
        country_code,
        currency_code,
        currency_name,
        symbol
        from currency where country_code = #countryCode#
    </select>

    <update id="setLocationActive">
        update location
        set is_active = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id = #bizId# and is_active='N';
    </update>

    <update id="deleteCourseInCourseTable">
        update course
        set is_active='D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where course_id=#courseId#;
    </update>

    <update id="deleteCourseToAppointmentFromCourse">
        update course_to_appointment
        set is_active='D' ,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where course_id=#courseId#;
    </update>

    <update id="deleteAppointmentFromCourse">
        update appointment
        set is_active='D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where appt_id=#apptId#;
    </update>

    <update id="setDeleteResourceRecord">
        update resource set
        is_active='D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where res_id=#resId#;
    </update>

    <update id="setdeleteLocationResourceRecord">
        update location_to_resource set
        is_active='D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id=#locId#;
    </update>

    <update id="setDeleteBusinessLocation">
        update location set
        is_active='D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_id=#locId#;
    </update>

    <update id="updateMaterialList">
        update material_stock set is_deleted='D' where loc_id=#locId#;
    </update>

    <update id="setResourceActive">
        update resource
        set is_active = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id = #bizId# and is_active = 'N';
    </update>

    <insert id="addLocationToService">
        insert into location_to_service(
        loc_svc_id,
        loc_id,
        svc_id,
        cost,
        duration,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #locId#,
        #svcId#,
        #cost#,
        #duration#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)
    </insert>

    <select id="getHolidayByLocId" resultMap="holidayResult">
        select
        business_holiday.holiday_id as holiday_id,
        location.loc_id as loc_id,
        business_holiday.biz_id as biz_id,
        date_format(holiday.holiday_dt,'%d %b') as holiday_dt,
        holiday.holiday_reason as reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by,
        location.loc_name
        from holiday inner join location on location.country_code= holiday.country_code
        inner join business_holiday on business_holiday.loc_id=location.loc_id and business_holiday.is_active = 'Y'
        where business_holiday.loc_id=#locId# and holiday.holiday_dt=business_holiday.holiday_dt and holiday.holiday_reason=business_holiday.reason group by holiday.holiday_reason;
    </select>

    <select id="getBusinessHolidayByBizIdLocId" resultMap="holidayResult1">
        select
        holiday_id,
        loc_id,
        biz_id,
        date_format(holiday_dt,'%d-%b-%Y') as holiday_dt,
        reason,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_holiday where biz_id=#bizId# and loc_id=#locId# and is_active = 'Y';
    </select>

    <select id="getHolidayByLocIdInFormatyyyyMMdd" resultMap="holidayResult">
        select
        business_holiday.holiday_id as holiday_id,
        location.loc_id as loc_id,
        business_holiday.biz_id as biz_id,
        date_format(holiday.holiday_dt,'%d-%b-%Y') as holiday_dt,
        holiday.holiday_reason as reason,
        business_holiday.created_dt,
        business_holiday.created_by,
        business_holiday.modified_dt,
        business_holiday.modified_by,
        location.loc_name
        from holiday inner join location on location.country_code= holiday.country_code
        inner join business_holiday on business_holiday.loc_id=location.loc_id and business_holiday.is_active = 'Y'
        where business_holiday.loc_id=#locId# and holiday.holiday_dt=business_holiday.holiday_dt and holiday.holiday_reason=business_holiday.reason group by holiday.holiday_dt;
    </select>


    <delete id="deleteLocationToResourceOfBusiness">
        delete t1 from location_to_resource as t1
        inner join location t2 on t2.loc_id=t1.loc_id
        inner join resource t3 on t3.res_id=t1.res_id where t3.biz_id=#bizId# ;
    </delete>

    <delete id="deleteLocationToServiceOfBusiness">
        delete t1 from location_to_service as t1
        inner join location t2 on t2.loc_id=t1.loc_id
        inner join service t3 on t3.svc_id=t1.svc_id where t3.biz_id=#bizId#;
    </delete>

    <delete id="deleteResourceLeaveScheduleOfBusiness">
        delete t1 from resource_leave_schedule as t1
        inner join resource t3 on t3.res_id=t1.res_id where t3.biz_id=#bizId# ;
    </delete>

    <delete id="deleteResourceHoursOfBusiness">
        delete t1 from resource_hours as t1
        inner join resource t3 on t3.res_id=t1.res_id where t3.biz_id=#bizId# ;
    </delete>

    <delete id="deleteResourceToServiceOfBusiness">
        delete t1 from resource_to_service as t1
        inner join resource t2 on t2.res_id=t1.res_id
        inner join service t3 on t3.svc_id=t1.svc_id where t3.biz_id=#bizId#;
    </delete>

    <delete id="deleteResourcesOfBusiness">
        delete from resource where biz_id=#bizId#;
    </delete>

    <delete id="deleteServicesOfBusiness">
        delete from service where biz_id=#bizId#;
    </delete>

    <select id="getLocationToServiceByLocIdSvcId" resultMap="locationToService1">
        select 	loc_svc_id,
        loc_id,
        svc_id,
        cost,
        duration,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from location_to_service where loc_id=#locId# and svc_id=#svcId# and is_active = 'Y';
    </select>

    <update id="setBusinessIsDeleted">
        update business
        set is_deleted = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id = #bizId#;
    </update>

    <update id="setAppointmentInActiveUsingBizId">
        update appointment
        set is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id in ($bizId$);
    </update>

    <update id="setAppointmentInActiveUsingLocId">
        update appointment
        set is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where  loc_id = #locId#;
    </update>

    <update id="setAppointmentInActiveUsingResId">
        update appointment
        set is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where  res_id = #resId# and loc_id=#locId#;
    </update>

    <update id="deleteBusinessByDownGrade">
        update business
        set is_deleted = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id in ($bizId$);
    </update>

    <update id="setServiceIsInactive">
        update service
        set is_active = 'N',
        modifiedBy = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where svc_id = #svcId#;
    </update>

    <select id="getPackageForLocationToService" resultMap="package">
        select loc_svc_id,
        package,
        cost,
        duration,
        package_name,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from package where loc_svc_id=#locSvcId#;
    </select>

    <delete id="deletePackageByLocToSvcId">
        delete
        from package
        where loc_svc_id=#locSvcId#;
    </delete>

    <insert id="addPackage">
        insert into package(
        loc_svc_id,
        package_id,
        package,
        cost,
        duration,
        package_name,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        client_location,
        session_type)
        values(
        #locSvcId#,
        null,
        0,
        #cost#,
        #duration#,
        #packageName#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #clientLocation#,
        #sessionType#)
        <selectKey resultType="java.lang.Integer" keyProperty="packageId">
            select last_insert_id() as package_id
        </selectKey>
    </insert>


    <insert id="addPackagePayoutDetails">
        insert into package_payout_details set
        package_id = #packageId#,
        payout_type = #payoutType#,
        max_payout_factor = #maxPayoutFactor#,
        effective_from = #effectiveFrom#,
        effective_upto = '0000-00-00',
        created_dt = UTC_TIMESTAMP(),
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy# ;
    </insert>


    <select id="getBusinessHolidayByBizIdLocIdYearOfHoliday" resultMap="holidayResult1">
        select $sqlRows$
        holiday_id,
        loc_id,
        biz_id,
        date_format(holiday_dt,'%m/%d/%Y') as holiday_dt,
        reason,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from business_holiday where is_active= 'Y' and biz_id=#bizId# and loc_id=#locId# and date_format(holiday_dt,'%Y') = #yr#
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getResourceTitleByBizId" resultMap="listBusinessCategoriesResult">
        select
        category.category_code,
        category_name,
        resource_title,
        resource_title_plural,
        receiver_title,
        receiver_title_plural,
        details,
        category.is_active
        from category inner join business on business.category_code=category.category_code where business.biz_id=#bizId#
    </select>

    <select id="getLeaveTypes" resultMap="leaveReasonsResult">
        select
        leave_code,
        description
        from leave_reason;
    </select>

    <insert id="addResourceLeave">
        insert into resource_leave_schedule values
        (#resourceLeaveSchedule.resId#,
        CONCAT(#resourceLeaveSchedule.startTime#,' ',(select business_hours.open_time from business_hours inner join resource on resource.biz_id = business_hours.biz_id where resource.res_id=#resourceLeaveSchedule.resId# and business_hours.day_of_week = #dow#)),
        CONCAT(#resourceLeaveSchedule.endTime#,' ',(select business_hours.close_time from business_hours inner join resource on resource.biz_id = business_hours.biz_id where resource.res_id=#resourceLeaveSchedule.resId# and business_hours.day_of_week = #dow#)),
        #resourceLeaveSchedule.leaveCode#,
        #resourceLeaveSchedule.reason#,
        UTC_TIMESTAMP(),
        #resourceLeaveSchedule.createdBy#,
        UTC_TIMESTAMP(),
        #resourceLeaveSchedule.modifiedBy#);
    </insert>

    <select id="getAllClients" resultMap="bizClientsListResult">
        select $sqlRows$
        c.client_id,
        CONCAT(first_name,' ',IFNULL(last_name,'')) as first_name,
        CONCAT(CONCAT(IF (c.address_line1 = '', '', CONCAT(c.address_line1, ',')),IF (c.address_line2 = '', '', CONCAT(c.address_line2, ','))),c.city) as address_line1,
        referral_type,
        notify_by_SMS,
        count(a.appt_id) as count,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'com') as count_completed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'c') as count_confirmed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'can') as count_cancelled,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cnp') as count_completed_awaiting_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cyp') as count_completed_with_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'dnc') as count_didnot_come,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'p') as count_pending,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'r') as count_cancelled_by_business,
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp')),0) as value,
        (select CONVERT_TZ(max(ap.start_time),'UTC', t.timezone) from appointment ap where (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp')  and ap.client_id = c.client_id) as start_time,
        c.email,
        c.is_onsked_user,
        c.is_active,
        c.cell_phone
        from client c
        left join appointment a on a.client_id = c.client_id
        left join location l on l.loc_id = a.loc_id
        left join timezone t on l.timezone_code = t.timezone_code
        left join package p on p.package_id = a.package_id
        where c.biz_id = #bizId#
        and IFNULL(c.is_active,'Y') = if(#clientStatus# = '0', IFNULL(c.is_active,'Y'), #clientStatus#)
        and (SUBSTRING(c.created_dt,1,10)&gt;= if(#startDate# = '0', SUBSTRING(c.created_dt,1,10), #startDate#))
        and (SUBSTRING(c.created_dt,1,10) &lt;= if(#endDate# = '0', SUBSTRING(c.created_dt,1,10), #endDate#))
        group by c.client_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getAllClientsMoreOptions" resultMap="bizClientsListResult">
        select $sqlRows$
        c.client_id,
        CONCAT(first_name,' ',IFNULL(last_name,'')) as first_name,
        CONCAT(CONCAT(IF (c.address_line1 = '', '', CONCAT(c.address_line1, ',')),IF (c.address_line2 = '', '', CONCAT(c.address_line2, ','))),c.city) as address_line1,
        referral_type,
        notify_by_SMS,
        count(a.appt_id) as count,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'com') as count_completed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'c') as count_confirmed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'can') as count_cancelled,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cnp') as count_completed_awaiting_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cyp') as count_completed_with_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'dnc') as count_didnot_come,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'p') as count_pending,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'r') as count_cancelled_by_business,
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp')),0) as value,
        (select CONVERT_TZ(max(ap.start_time),'UTC', t.timezone) from appointment ap where (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp') and ap.client_id = c.client_id) as start_time,
        c.email,
        c.is_onsked_user,
        c.is_active,
        c.cell_phone
        from client c
        left join appointment a on a.client_id = c.client_id
        left join location l on l.loc_id = a.loc_id
        left join timezone t on l.timezone_code = t.timezone_code
        left join package p on p.package_id = a.package_id
        left join service s on s.svc_id = a.svc_id
        where c.biz_id = #bizId#
        and IFNULL(c.is_active,'Y') = if(#clientStatus# = '0', IFNULL(c.is_active,'Y'), #clientStatus#)
        and (
        case
        when (#countMin# != '0' and #countMax# !='0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin# and (select count(*) from appointment where appointment.client_id = c.client_id) &lt;= #countMax#
        when (#countMin# != '0' and #countMax# = '0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin#
        when (#countMin# = '0' and #countMax# != '0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &lt;= #countMax#
        else
        (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin#
        END
        )
        and IFNULL(a.svc_id,'0') = if(#svcId# = '0', IFNULL(a.svc_id,'0'), #svcId#)
        and IFNULL(a.package_id,'0') = if(#pkgId# = '0', IFNULL(a.package_id,'0'), #pkgId#)
        and IFNULL(a.loc_id,'0') = if(#locId# = '0', IFNULL(a.loc_id,'0'), #locId#)
        and IFNULL(a.status_code,'0') = if(#statusCode# = '0', IFNULL(a.status_code,'0'), #statusCode#)
        and (SUBSTRING(c.created_dt,1,10)&gt;= if(#startDate# = '0', SUBSTRING(c.created_dt,1,10), #startDate#))
        and (SUBSTRING(c.created_dt,1,10) &lt;= if(#endDate# = '0', SUBSTRING(c.created_dt,1,10), #endDate#))
        group by c.client_id
        having (
        case
        when (#valueMin# != '0' and #valueMax# != '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin# and IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &lt;= #valueMax#
        when (#valueMin# != '0' and #valueMax# = '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin#
        when (#valueMin# = '0' and #valueMax# != '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &lt;= #valueMax#
        else
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin#
        END
        )
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <insert id="addBizClient">
        insert into client
        values(null,
        #bizId#,
        #email#,
        #firstName#,
        #lastName#,
        #gender#,
        #dateOfBirthAsYYYYMMDD#,
        #addressLine1#,
        #addressLine2#,
        #city#,
        #stateCode#,
        #zipCode#,
        #countryCode#,
        #cellPhone#,
        #homePhone#,
        #workPhone#,
        #workPhoneExt#,
        #isActive#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #udf1#,
        #udf2#,
        #udf3#,
        #udf4#,
        #udf5#,
        #onskedPin#,
        #notifyBySMS#,
        #bloodGroup#,
        #emergencyContactNo#,
        #referralType#,
        #friendFirstName#,
        #friendLastName#,
        #friendemail#,
        #friendCellPhone#,
        #clientInsuranceName#,
        #clientReferredSource#,
        #isOnskedUser#);
        <selectKey resultType="java.lang.Integer" keyProperty="clientId">
            select last_insert_id() as client_id
        </selectKey>
    </insert>

    <insert id="addBizClientAddInfo">
        insert into client_referral
        values(#clientId#,
        #bizId#,
        #friendFirstName#,
        #friendLastName#,
        #friendemail#,
        #friendCellPhone#,
        #physicianFirstName#,
        #physicianLastName#,
        #physicianemail#,
        #physicianCellPhone#,
        #physicianHospital#,
        #insuranceReferralId#,
        #insuranceCellPhone#,
        #insuranceCompanyName#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#);
    </insert>

    <update id="updateBizClientAddInfo">
        update client_referral set
        f_first_name = #friendFirstName#,
        f_last_name = #friendLastName#,
        f_email = #friendemail#,
        f_cell_phone = #friendCellPhone#,
        p_first_name = #physicianFirstName#,
        p_last_name = #physicianLastName#,
        p_email = #physicianemail#,
        p_cell_phone = #physicianCellPhone#,
        p_hospital_name = #physicianHospital#,
        i_referral_id = #insuranceReferralId#,
        i_company_name = #insuranceCellPhone#,
        i_cell_phone = #insuranceCompanyName#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where client_id = #clientId#;
    </update>

    <select id="getBizNameByBizId" resultMap="businessNameAndPIN">
        select biz_name,notify_by_PIN from business where biz_id=#bizId#;
    </select>

    <select id="getPackageCountOfBusinessByBizId" resultType="java.lang.Integer">
        select count(location_to_service.loc_svc_id) from package inner join location_to_service on location_to_service.loc_svc_id=package.loc_svc_id and location_to_service.is_active = 'Y'
        inner join location on location.loc_id=location_to_service.loc_id
        inner join service on service.svc_id=location_to_service.svc_id
        inner join business on business.biz_id=service.biz_id where business.biz_id=#bizId#;
    </select>

    <select id="getTimeZoneCodeByLocId" resultType="java.lang.String">
        select timezone_code from location where loc_id = #locId#;
    </select>

    <select id="getTimeZoneByLocId" resultType="java.lang.String">
        select		t.timezone
        from		timezone		t
        inner join	location		l
        on			t.timezone_code	= l.timezone_code
        where 		l.loc_id		= #locId#;
    </select>

    <select id="getClientReferralPresentByClientId" resultType="java.lang.Integer">
        SELECT count(*) FROM client_referral where client_id=#clientId#;
    </select>

    <select id="getBusinessActiveOrNot" resultType="java.lang.String">
        SELECT is_active FROM business where biz_id=#bizId#;
    </select>

    <select id="getBusinessExpiryDate" resultType="java.lang.String">
        SELECT DATE_ADD(substr(up.package_expiry_dt,1,10), INTERVAL 1 Month) as expiry_dt FROM business_user bu
        join user_payments up on up.user_id=bu.user_id
        join user_upgrade_levels ull on ull.level_id = up.level_id where bu.biz_id=#bizId#
        and up.payment_dt = (select max(payment_dt) as payment_dt from user_payments  where user_id=up.user_id order by up.payment_dt desc);

    </select>

    <select id="getTimeZoneCodeByResId" resultType="java.lang.String">
        select location.timezone_code from
        location inner join location_to_resource on location_to_resource.loc_id = location.loc_id and location_to_resource.is_active = 'Y'
        where location_to_resource.res_id = #resId#;
    </select>

    <select id="getTimeZoneByResId" resultType="java.lang.String">
        select		t.timezone
        from		timezone				t
        inner join	location				l
        on			t.timezone_code			= l.timezone_code
        inner join	location_to_resource	ltr
        on 			ltr.loc_id 				= l.loc_id
        where 		ltr.res_id				= #resId#;
    </select>

    <select id="getTimeZoneCodeByResIdLocId" resultType="java.lang.String">
        select location.timezone_code from
        location inner join location_to_resource on location_to_resource.loc_id = location.loc_id and location_to_resource.is_active = 'Y'
        where location_to_resource.res_id = #resId#  and location_to_resource.loc_id =#locId#;
    </select>

    <select id="getTimeZoneByResIdLocId" resultType="java.lang.String">
        select		t.timezone
        from		timezone				t
        inner join	location				l
        on			t.timezone_code			= l.timezone_code
        inner join	location_to_resource	ltr
        on 			ltr.loc_id 				= l.loc_id
        where 		ltr.res_id				= #resId#
        and			ltr.loc_id				= #locId#;
    </select>

    <update id="activateDeactivate">
        update $table$
        set $updateColumn$ = #updateColumnValue#
        where $conditionColumn$ = #conditionColumnValue#;
    </update>

    <select id="getListOfLocationsAddedAfterBizConfirmation" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId# and location.is_active = "T" ;
    </select>

    <select id="getActiveAndTempLocationListForAddingSvc" resultMap="locationResult">
        select location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timeZone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location left join timezone on location.timezone_code = timezone.timezone_code where location.biz_id= #bizId# and location.is_active in ("Y","T") and location.loc_id not in (select distinct loc_id  from location_to_service where is_active = 'Y') ORDER BY location.is_headquarters DESC
    </select>

    <select id="getActiveAndTempLocationList" resultMap="locationResult">
        select
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_active in ("Y","T") ORDER BY location.is_headquarters DESC
    </select>

    <select id="getListOfInactiveBusinessLocationsWithoutService" resultMap="locationResult">
        select location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timeZone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.modified_by,
        location.tax from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id= #bizId# and location.is_active = "N" and location.loc_id not in (select distinct loc_id  from location_to_service where is_active = 'Y') ORDER BY location.is_headquarters DESC
    </select>

    <select id="getClientDtlsByClientId" resultMap="clientResult1">
        select client.client_id,
        b.biz_id,
        client.email,
        client.first_name,
        client.last_name,
        client.gender,
        date_format(client.date_of_birth,'%d-%b-%Y') as date_of_birth,
        client.address_line1,
        client.address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        client.is_active,
        client.created_dt,
        client.created_by,
        client.modified_dt,
        client.modified_by,
        client.udf1,
        client.udf2,
        client.udf3,
        client.udf4,
        client.udf5,
        client.notify_by_SMS,
        client.blood_group,
        client.emergency_contact_no,
        client.referral_type,
        client.f_first_name,
        client.f_last_name,
        client.f_email,
        client.f_cell_phone,
        client.client_insurance_name,
        client.client_referred_source
        from client
        join business b on b.biz_id=client.biz_id
        left join appointment a on a.client_id = client.client_id
        where client.client_id= #clientId# group by client.client_id;
    </select>

    <select id="getClientAddInfoByClientId" resultMap="clientRefferralResult">
        select
        biz_id,
        f_first_name,
        f_last_name,
        f_email,
        f_cell_phone,
        p_first_name,
        p_last_name,
        p_email,
        p_cell_phone,
        p_hospital_name,
        i_referral_id,
        i_company_name,
        i_cell_phone,
        created_dt,
        created_by,
        modified_dt,
        modified_by from client_referral where client_id=#clientId#;
    </select>

    <select id="getClientDtls" resultMap="clientResult">
        select client.client_id,
        client.biz_id,
        client.email,
        client.first_name,
        client.last_name,
        IF(client.gender IS NULL, '', IF(client.gender='M','Male','Female')) as gender,
        date_format(client.date_of_birth,'%m/%d/%Y') as date_of_birth,
        client.address_line1,
        client.address_line2,
        client.city,
        state.state_name as state_code,
        client.zip_code,
        country.country_name as country_code,
        client.cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        client.is_active,
        client.created_dt,
        client.created_by,
        client.modified_dt,
        client.modified_by,
        client.notify_by_SMS,
        client.blood_group,
        client.emergency_contact_no,
        client.client_insurance_name
        from client left join state on state.state_code = client.state_code and state.country_code = client.country_code
        left join country on country.country_code = client.country_code
        where client.client_id= #clientId#
    </select>

    <update id="updateClientDetails">
        update client set
        email = #email#,
        first_name = #firstName#,
        last_name = #lastName#,
        gender = #gender#,
        date_of_birth = #dateOfBirthAsYYYYMMDD#,
        address_line1 = #addressLine1#,
        address_line2 = #addressLine2#,
        city = #city#,
        state_code = #stateCode#,
        zip_code = #zipCode#,
        country_code = #countryCode#,
        cell_phone = #cellPhone#,
        home_phone = #homePhone#,
        work_phone = #workPhone#,
        work_phone_ext = #workPhoneExt#,
        is_active = #isActive#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#,
        udf1=#udf1#,
        udf2=#udf2#,
        udf3=#udf3#,
        udf4=#udf4#,
        udf5=#udf5#,
        notify_by_SMS=#notifyBySMS#,
        blood_group=#bloodGroup#,
        emergency_contact_no=#emergencyContactNo#,
        referral_type=#referralType#,
        f_first_name=#friendFirstName#,
        f_last_name=#friendLastName#,
        f_email=#friendemail#,
        f_cell_phone=#friendCellPhone#,
        client_insurance_name=#clientInsuranceName#,
        client_referred_source=#clientReferredSource#
        where client_id = #clientId#;
    </update>

    <select id="getTimeZoneCodeOfBizUser" resultType="java.lang.String">
        select timezone_code from user_master inner join business_user on business_user.user_id=user_master.user_id where business_user.biz_id=#biz_id#;
    </select>

    <select id="getTimeZoneOfBizUser" resultType="java.lang.String">
        select		t.timezone
        from 		user_master		um
        inner join	timezone		t
        on			t.timezone_code	= um.timezone_code
        inner join	business_user	bu
        on			bu.user_id		= um.user_id
        where		bu.biz_id		= #biz_id#;
    </select>

    <select id="getClientsByBizIDSearchElement" resultMap="bizClientsListResult">
        select $sqlRows$
        c.client_id,
        CONCAT(first_name,' ',IFNULL(last_name,'')) as first_name,
        CONCAT(CONCAT(IF (c.address_line1 = '', '', CONCAT(c.address_line1, ',')),IF (c.address_line2 = '', '', CONCAT(c.address_line2, ','))),c.city) as address_line1,
        referral_type,
        notify_by_SMS,
        count(a.appt_id) as count,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'com') as count_completed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'c') as count_confirmed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'can') as count_cancelled,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cnp') as count_completed_awaiting_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cyp') as count_completed_with_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'dnc') as count_didnot_come,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'p') as count_pending,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'r') as count_cancelled_by_business,
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp')),0) as value,
        (select CONVERT_TZ(max(ap.start_time),'UTC', t.timezone) from appointment ap where (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp') and ap.client_id = c.client_id) as start_time,
        c.email,
        c.is_onsked_user,
        c.is_active,
        c.cell_phone
        from client c
        left join appointment a on a.client_id = c.client_id
        left join location l on l.loc_id = a.loc_id
        left join timezone t on l.timezone_code = t.timezone_code
        left join package p on p.package_id = a.package_id
        where c.biz_id = #bizId#
        and IFNULL(c.is_active,'Y') = if(#clientStatus# = '0', IFNULL(c.is_active,'Y'), #clientStatus#)
        and (SUBSTRING(c.created_dt,1,10)&gt;= if(#startDate# = '0', SUBSTRING(c.created_dt,1,10), #startDate#))
        and (SUBSTRING(c.created_dt,1,10) &lt;= if(#endDate# = '0', SUBSTRING(c.created_dt,1,10), #endDate#))
        and (first_name like if(#searchElement# = '', first_name , #searchElement#) or last_name like if(#searchElement# = '', last_name , #searchElement#) or CONCAT(first_name,' ',last_name) like if(#searchElement# = '', CONCAT(first_name,' ',last_name) , #searchElement#) or CONCAT(first_name,last_name) like if(#searchElement# = '', CONCAT(first_name,last_name) , #searchElement#))
        and (email like if(#clientEmail# = '', email , #clientEmail#))
        and (cell_phone like if(#clientPhone# = '', cell_phone , #clientPhone#))
        group by c.client_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getClientsByBizIDSearchElementMoreOptions" resultMap="bizClientsListResult">
        select $sqlRows$
        c.client_id,
        CONCAT(first_name,' ',IFNULL(last_name,'')) as first_name,
        CONCAT(CONCAT(IF (c.address_line1 = '', '', CONCAT(c.address_line1, ',')),IF (c.address_line2 = '', '', CONCAT(c.address_line2, ','))),c.city) as address_line1,
        referral_type,
        notify_by_SMS,
        count(a.appt_id) as count,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'com') as count_completed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'c') as count_confirmed,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'can') as count_cancelled,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cnp') as count_completed_awaiting_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'cyp') as count_completed_with_pin,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'dnc') as count_didnot_come,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'p') as count_pending,
        (select count(ap.appt_id) from appointment ap where ap.client_id = c.client_id and ap.status_code = 'r') as count_cancelled_by_business,
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp')),0) as value,
        (select CONVERT_TZ(max(ap.start_time),'UTC', t.timezone) from appointment ap where (ap.status_code = 'com' or ap.status_code = 'cnp' or ap.status_code = 'cyp') and ap.client_id = c.client_id) as start_time,
        c.email,
        c.is_onsked_user,
        c.is_active,
        c.cell_phone
        from client c
        left join appointment a on a.client_id = c.client_id
        left join location l on l.loc_id = a.loc_id
        left join timezone t on l.timezone_code = t.timezone_code
        left join package p on p.package_id = a.package_id
        left join service s on s.svc_id = a.svc_id
        where c.biz_id = #bizId#
        and IFNULL(c.is_active,'Y') = if(#clientStatus# = '0', IFNULL(c.is_active,'Y'), #clientStatus#)
        and IFNULL(a.package_id,'0') = if(#pkgId# = '0', IFNULL(a.package_id,'0'), #pkgId#)
        and IFNULL(a.loc_id,'0') = if(#locId# = '0', IFNULL(a.loc_id,'0'), #locId#)
        and (SUBSTRING(c.created_dt,1,10)&gt;= if(#startDate# = '0', SUBSTRING(c.created_dt,1,10), #startDate#))
        and (SUBSTRING(c.created_dt,1,10) &lt;= if(#endDate# = '0', SUBSTRING(c.created_dt,1,10), #endDate#))
        and (
        case
        when (#countMin# != '0' and #countMax# != '0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin# and (select count(*) from appointment where appointment.client_id = c.client_id) &lt;= #countMax#
        when (#countMin# != '0' and #countMax# = '0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin#
        when (#countMin# = '0' and #countMax# != '0')
        then (select count(*) from appointment where appointment.client_id = c.client_id) &lt;= #countMax#
        else
        (select count(*) from appointment where appointment.client_id = c.client_id) &gt;= #countMin#
        END
        )
        and IFNULL(a.svc_id,'0') = if(#svcId# = '0', IFNULL(a.svc_id,'0'), #svcId#)
        and IFNULL(a.status_code,'0') = if(#statusCode# = '0', IFNULL(a.status_code,'0'), #statusCode#)
        and (first_name like if(#searchElement# = '', first_name , #searchElement#) or last_name like if(#searchElement# = '', last_name , #searchElement#) or CONCAT(first_name,' ',last_name) like if(#searchElement# = '', CONCAT(first_name,' ',last_name) , #searchElement#) or CONCAT(first_name,last_name) like if(#searchElement# = '', CONCAT(first_name,last_name) , #searchElement#))
        and (email like if(#clientEmail# = '', email , #clientEmail#))
        and (cell_phone like if(#clientPhone# = '', cell_phone , #clientPhone#))
        group by c.client_id
        having (
        case
        when (#valueMin# != '0' and #valueMax# != '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin# and IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &lt;= #valueMax#
        when (#valueMin# != '0' and #valueMax# = '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin#
        when (#valueMin# = '0' and #valueMax# != '0')
        then IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &lt;= #valueMax#
        else
        IFNULL((select sum(pa.cost) from appointment ap left join package pa on pa.package_id = ap.package_id where ap.client_id = c.client_id and ap.status_code = 'com'),0) &gt;= #valueMin#
        END
        )
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;

    </select>

    <select id="getFeaturedBusinesses" resultMap="featuredBusinessResult">
        select
        business.biz_id,
        biz_name,
        address_line1,
        address_line2,
        business.is_active as bizIsActive,
        IFNULL(featured_businesses.is_active,0) as featuredBizIsActive
        from business join featured_businesses on featured_businesses.biz_id= business.biz_id
        join location on location.biz_id = business.biz_id
        where business.is_active = "Y" and location.is_headquarters = "Y" and location.is_active = "Y" and  featured_businesses.is_active="Y" ;
    </select>

    <select id="getCourseDetailsList" resultMap="courseDetailsList">
        SELECT course_id,course_name,biz_id,loc_id,res_id,svc_id,pkg_id,client_id,
        course_type,recurring_type,number_of_days,created_dt,created_by,modified_dt,modified_by,is_active FROM course;
    </select>

    <select id="getCourseDetails" resultMap="courseDetails">
        SELECT
        c.course_id as course_id,
        c.course_name as course_name,
        business.biz_name as biz_name,
        location.loc_name as loc_name,
        location.state_code as state_code,
        resource.nick_name as nick_name,
        service_master.service_name as svc_name,
        package.package_name as pkg_name,
        c.course_type as course_type,
        c.recurring_type as recurring_type,
        c.number_of_days as number_of_days
        FROM course c
        inner join resource on c.res_id = resource.res_id
        join location on location.loc_id = c.loc_id
        join service on c.svc_id = service.svc_id
        join service_master on service.service_code = service_master.service_code
        join business on business.biz_id = c.biz_id
        join package on c.pkg_id = package.package_id
        where c.is_active='Y'
        order by c.course_id desc;
    </select>


    <select id="getCourseDetailsBySort" resultMap="courseDetails">

        select $sqlRows$
        c.course_id as course_id,
        c.course_name as course_name,
        business.biz_name as biz_name,
        location.loc_name as loc_name,
        location.state_code as state_code,
        resource.nick_name as nick_name,
        service_master.service_name as svc_name,
        package.package_name as pkg_name,
        c.course_type as course_type,
        c.recurring_type as recurring_type,
        c.number_of_days as number_of_days
        FROM course c
        inner join resource on c.res_id = resource.res_id
        join location on location.loc_id = c.loc_id
        join service on c.svc_id = service.svc_id
        join service_master on service.service_code = service_master.service_code
        join business on business.biz_id = c.biz_id
        join business_user on business_user.biz_id = business.biz_id
        join package on c.pkg_id = package.package_id
        where c.is_active='Y' and business_user.user_id=#userId#
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getCourseDetailsByCourseId" resultMap="courseDetails">
        SELECT
        c.course_id as course_id,
        c.course_name as course_name,
        business.biz_name as biz_name,
        location.loc_name as loc_name,
        location.state_code as state_code,
        resource.nick_name as nick_name,
        service_master.service_name as svc_name,
        package.package_name as pkg_name,
        c.course_type as course_type,
        c.recurring_type as recurring_type,
        c.number_of_days as number_of_days
        FROM course c
        inner join resource on c.res_id = resource.res_id
        join location on location.loc_id = c.loc_id
        join service on c.svc_id = service.svc_id
        join service_master on service.service_code = service_master.service_code
        join business on business.biz_id = c.biz_id
        join package on c.pkg_id = package.package_id
        where c.course_id=#courseId# and c.is_active='Y';
    </select>

    <select id="checkEmailIdExits" resultType="java.lang.Integer">
        select if(count(*)=0, 0, res_id) as res_id from resource where email=#emailId#;
    </select>

    <select id="getResourceByResId" resultMap="resourceResult3">
        select
        resource.res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        is_onsked_user,
        restype.res_role_name,
        null as res_role_code,
        IFNULL(resource_rate_per_hour.rate_per_hour, 0) as rate_per_hour,
        DATE_FORMAT(CONVERT_TZ(IFNULL(resource_rate_per_hour.effective_from, UTC_TIMESTAMP()), 'UTC', t.timezone), '%d-%b-%Y') as rph_effective_date,
        IFNULL(resource_payout_percentage.payout_percentage, 0) as payout_percentage,
        DATE_FORMAT(CONVERT_TZ(IFNULL(resource_payout_percentage.effective_from, UTC_TIMESTAMP()), 'UTC', t.timezone), '%d-%b-%Y') as pp_effective_date,
        null as loc_id,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        left join resource_rate_per_hour on resource_rate_per_hour.res_id = resource.res_id
        and resource_rate_per_hour.effective_upto = '0000-00-00 00:00:00'
        left join resource_payout_percentage on resource_payout_percentage.res_id = resource.res_id
        and resource_payout_percentage.effective_upto = '0000-00-00 00:00:00'
        left join	(	select	timezone.timezone
        from	location_to_resource
        inner
        join	location
        on		location_to_resource.loc_id			=	location.loc_id
        inner
        join	timezone
        on		location.timezone_code				=	timezone.timezone_code
        where	location_to_resource.res_id			=	#resId#
        and		location_to_resource.is_active		=	'Y'
        order
        by		location_to_resource.modified_by	desc
        limit	1
        )	t on 1 = 1
        where resource.res_id = #resId#;
    </select>

    <select id="getResourceOfLocation" resultMap="resourceResult3">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        resource.resource_level,
        resource_role_type.res_role_name,
        resource_role_type.res_role_code,
        IFNULL(resource_rate_per_hour.rate_per_hour, 0) as rate_per_hour,
        DATE_FORMAT(CONVERT_TZ(IFNULL(resource_rate_per_hour.effective_from, UTC_TIMESTAMP()), 'UTC', timezone.timezone), '%d-%b-%Y') as rph_effective_date,
        IFNULL(resource_payout_percentage.payout_percentage, 0) as payout_percentage,
        DATE_FORMAT(CONVERT_TZ(IFNULL(resource_payout_percentage.effective_from, UTC_TIMESTAMP()), 'UTC', timezone.timezone), '%d-%b-%Y') as pp_effective_date,
        location_to_resource.loc_id as loc_id
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id
        right join resource_role_type on resource.res_role_code = resource_role_type.res_role_code
        inner join business on resource.biz_id = business.biz_id
        left join resource_rate_per_hour on resource_rate_per_hour.res_id = resource.res_id
        and resource_rate_per_hour.effective_upto = '0000-00-00 00:00:00'
        left join resource_payout_percentage on resource_payout_percentage.res_id = resource.res_id
        and resource_payout_percentage.effective_upto = '0000-00-00 00:00:00'
        inner join location on location_to_resource.loc_id = location.loc_id
        inner join timezone on location.timezone_code = timezone.timezone_code
        where resource.res_id = #resId# and location_to_resource.loc_id = #locId#
        and
        (
        location_to_resource.is_active = 'Y'
        or
        (business.is_active = 'N' and location_to_resource.is_active = 'N')
        );
    </select>

    <select id="getResourceHoursOfAllLocations" resultMap="resourceHoursResult">
        SELECT
        resource_hours.res_id,
        resource_hours.day_of_week,
        resource_hours.is_working,
        resource_hours.loc_id,
        if(resource_hours.is_working != 1, start_time, SUBSTRING( CONCAT( DATE( NOW( ) ) ,  ' ', start_time ) , 12 )) AS start_time,
        if(resource_hours.is_working != 1, end_time, SUBSTRING( CONCAT( DATE( NOW( ) ) ,  ' ', end_time ) , 12 )) AS end_time,
        resource_hours.created_dt,
        resource_hours.created_by,
        resource_hours.modified_dt,
        resource_hours.modified_by,
        location.loc_name
        FROM resource_hours
        JOIN location ON location.loc_id = resource_hours.loc_id
        WHERE resource_hours.res_id = #resId#;
    </select>

    <select id="getResourceByEmail" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where email = #email#
    </select>

    <select id="getResourceByEmailIsDeleted" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where email = #email# and is_active='D';
    </select>

    <select id="getResourceByDiffNickName" resultMap="resourceResult">
        select
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where email = #email# and nick_name=#nickName#;
    </select>


    <delete id="deleteAppointmentsOfResourcesOfBusiness">
        delete appointment,appointment_rating FROM appointment left join appointment_rating on appointment.appt_id=appointment_rating.appt_id where appointment.res_id in (select res_id from resource where biz_id=#bizId#);
    </delete>

    <select id="getResourceByLocIdAndEmail" resultMap="resourceResult">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        restype.res_role_name,
        resource.resource_level
        from resource join location_to_resource on resource.res_id=location_to_resource.res_id and location_to_resource.is_active = 'Y'
        join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where resource.email=#email# and location_to_resource.loc_id=#locId#;
    </select>

    <select id="getLocationToResourceCountByResId" resultType="java.lang.Integer">
        select
        count(*)
        from location_to_resource where res_id = #resId# and is_active = 'Y';
    </select>

    <select id="getApptCountToResource" resultType="java.lang.Integer">
        select count(*) from  appointment where res_id = #resId# and loc_id=#locId# and end_time &gt; utc_timestamp() and is_active!='D' and status_code in ('c','p');
    </select>

    <select id="getResToLocCount" resultType="java.lang.Integer">
        select count(*) from  location_to_resource where res_id = #resId# and is_active = 'Y' or is_active = 'T';
    </select>

    <select id="getLocationToResourceByResIdAndLocId" resultMap="LocationToResourceByResIdAndLocId">
        select loc_id,
        res_id,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from  location_to_resource where res_id = #resId# and loc_id = #locId# and is_active = 'Y';
    </select>

    <select id="getResource1" resultMap="resourceResult1">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        resource.resource_level,
        resource_role_type.res_role_name,
        resource_role_type.res_role_code,
        location_to_resource.loc_id as loc_id
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id
        right join resource_role_type on resource.res_role_code = resource_role_type.res_role_code
        inner join business on resource.biz_id = business.biz_id
        where resource.res_id = #resId# and location_to_resource.loc_id = #locId#
        and
        (
        location_to_resource.is_active = 'Y'
        or
        (business.is_active = 'N' and location_to_resource.is_active = 'N')
        );
    </select>

    <update id="setLocationToResourceActive">
        update
        location_to_resource
        inner join resource on resource.res_id=location_to_resource.res_id
        set location_to_resource.is_active = 'Y',
        location_to_resource.modified_by = #modifiedBy#,
        location_to_resource.modified_dt = UTC_TIMESTAMP()
        where resource.biz_id = #bizId# and location_to_resource.is_active = 'N';
    </update>

    <select id="getResourceLocByBizId2" resultMap="locationBizResourceResult">
        select
        resource.res_id as res_id,
        resource.biz_id as biz_id,
        location.loc_id,
        location.loc_name
        from resource inner join location_to_resource on resource.res_id = location_to_resource.res_id
        join location on location_to_resource.loc_id = location.loc_id
        where resource.biz_id = #bizId# and location_to_resource.is_active = 'Y';
    </select>


    <update id="updateLocationToSvc">
        update location_to_service set
        client_location = #clientLocation#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where loc_svc_id = #locSvcId#;
    </update>

    <select id="getAddressOfClient" resultType="java.lang.String">
        select concat(address_line1,",",address_line2,",",city,",",state.state_name,",",country.country_name,",",zip_code) from client
        inner join state on state.state_code=client.state_code and state.country_code=client.country_code
        join country on country.country_code=client.country_code
        where client_id=#clientId#;
    </select>

    <select id="getclientLocationOrNot" resultType="java.lang.String">
        SELECT distinct client_location FROM location_to_service where loc_id=#locId# and svc_id=#svcId# and is_active = 'Y';
    </select>

    <select id="getapptIdByCourseId" resultType="java.lang.String">
        SELECT group_concat(cast(appt_id as char(10))) as appt_id FROM course_to_appointment where course_id=#courseId#;
    </select>

    <select id="getAddressOfLocation" resultType="java.lang.String">
        select concat(address_line1,",",address_line2,",",city,",",state.state_name,",",country.country_name,",",zip_code), state.state_code, country.country_code
        from location
        join state on state.state_code=location.state_code and state.country_code=location.country_code
        join country on country.country_code=location.country_code
        where loc_id=#locId#;
    </select>

    <select id="getPackagesByLocIdSvcId" resultMap="packageResult">
        select distinct
        lts.svc_id as svc_id,
        package.package as package,
        package.package_name as package_name,
        package.cost as cost,
        package.duration as duration,
        package.package_id as package_id,
        IFNULL(package.client_location, 'N') as client_location,
        IFNULL(package.session_type, 'single') as session_type
        from package inner join location_to_service lts on package.loc_svc_id = lts.loc_svc_id and lts.is_active = 'Y'
        join location l on l.loc_id = lts.loc_id
        join resource_to_service rts on rts.svc_id = lts.svc_id and lts.loc_id = rts.loc_id and rts.is_active = 'Y'
        where lts.loc_id =  if(#locId# != 0, #locId#, lts.loc_id) and lts.svc_id = if(#svcId# != 0, #svcId#, lts.svc_id) and l.biz_id = if(#bizId# != 0,#bizId#,l.biz_id) ;
    </select>

    <select id="getPackagesByLocIdResId" resultMap="packageResult1">
        select distinct
        package.package_id as package_id,
        package.package_name as package_name,
        package.duration as duration
        from package inner join location_to_service
        on package.loc_svc_id = location_to_service.loc_svc_id and location_to_service.is_active = 'Y'
        inner join resource_to_service on resource_to_service.svc_id = location_to_service.svc_id and resource_to_service.is_active = 'Y'
        inner join location_to_resource on location_to_resource.res_id = resource_to_service.res_id and location_to_resource.is_active = 'Y'
        where location_to_service.loc_id = #locId# and location_to_service.svc_id = location_to_service.svc_id and resource_to_service.res_id = #resId#;
    </select>

    <select id="getServiceforManageCourse" resultType="java.lang.Integer">
        select distinct
        location_to_service.svc_id as svc_id
        from package inner join location_to_service
        on package.loc_svc_id = location_to_service.loc_svc_id and location_to_service.is_active = 'Y'
        inner join resource_to_service on resource_to_service.svc_id = location_to_service.svc_id and resource_to_service.is_active = 'Y'
        inner join location_to_resource on location_to_resource.res_id = resource_to_service.res_id and location_to_resource.is_active = 'Y'
        where location_to_service.loc_id = #locId# and location_to_service.svc_id = location_to_service.svc_id
        and resource_to_service.res_id = #resId# and package.package_id=#pkgId#;
    </select>

    <insert id="addPromotion">
        insert into promotion(
        promotion_id,
        promotion_name,
        description,
        loc_id,
        svc_id,
        start_time,
        end_time,
        is_active,
        packages,
        promotion_type_id,
        promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        user_limit_usage,
        created_by,
        created_dt,
        modified_by,
        modified_dt,
        is_published,
        mail_date,
        biz_id
        )
        values(
        null,
        #promotionName#,
        #description#,
        #locId#,
        #svcId#,
        #startDate#,
        #endDate#,
        #isActive#,
        #packageId#,
        #promotionType#,
        #promotionCode#,
        #discountType#,
        #discountValue#,
        #allowedUsage#,
        #userUsage#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        UTC_TIMESTAMP(),
        #isPublished#,
        #mailDate#,
        #bizId#
        );
        <selectKey resultType="java.lang.Integer" keyProperty="promotionId">
            select last_insert_id() as promotion_id
        </selectKey>
    </insert>

    <update id="updatePromotion">
        update promotion set
        promotion_name=#promotionName#,
        description=#description#,
        loc_id=#locId#,
        svc_id=#svcId#,
        start_time=#startDateAsYYYYMMDD#,
        end_time=#endDateAsYYYYMMDD#,
        is_active= #isActive#,
        packages= #packageId#,
        promotion_type_id=#promotionType#,
        promotion_code=#promotionCode#,
        discount_type =#discountType#,
        discount_value = #discountValue#,
        allowed_usage = #allowedUsage#,
        user_limit_usage = #userUsage#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP(),
        remainder_date = #remainderDate#,
        is_published = #isPublished#,
        mail_date = #mailDate#
        where promotion_id=#promotionId#;
    </update>

    <select id="getPromotionByPromotionId" resultMap="promotionResultForEdit">
        select
        p.biz_id,
        promotion_id,
        p.promotion_name,
        p.description,
        p.loc_id,
        p.svc_id,
        p.start_time,
        p.end_time,
        p.is_active,
        p.packages,
        p.promotion_type_id,
        p.promotion_code,
        p.discount_type,
        p.discount_value,
        p.allowed_usage,
        p.current_usage,
        p.user_limit_usage,
        p.remainder_date,
        p.mail_date,
        p.is_published,
        if(p.loc_id = '0', 'All', location.loc_name) as loc_name,
        (select count(*) from appointment where promotion_code = p.promotion_code) as appt_count,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'com') as count_completed,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'c') as count_confirmed,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'can') as count_cancelled,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'cnp') as count_completed_awaiting_pin,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'cyp') as count_completed_with_pin,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'dnc') as count_didnot_come,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'p') as count_pending,
        (select count(*) from appointment where promotion_code = p.promotion_code and status_code = 'r') as count_cancelled_by_business,
        (select IFNULL(sum(appointment_cost),0) from appointment where promotion_code = p.promotion_code and (status_code = 'com' or status_code = 'cyp' or status_code = 'cnp')) as appt_value
        from promotion p left join location on location.loc_id = p.loc_id where p.promotion_id = #promotionId# group by p.promotion_id;

    </select>

    <select id="getPastPromotion" resultMap="promotionResult">
        select $sqlRows$
        promotion.biz_id,
        promotion.promotion_id,
        promotion.promotion_name,
        promotion.description,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.is_active,
        promotion.packages,
        promotion.promotion_type_id,
        promotion.promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage,
        remainder_date,
        mail_date,
        is_published
        from promotion
        where promotion.biz_id = #bizId#
        and promotion.is_published = 'Y'
        and promotion.is_active = 'y'
        and promotion.end_time &lt; utc_date()
        group by promotion.promotion_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getSavedPromotion" resultMap="promotionResult">
        select $sqlRows$
        promotion.biz_id,
        promotion.promotion_id,
        promotion.promotion_name,
        promotion.description,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.is_active,
        promotion.packages,
        promotion.promotion_type_id,
        promotion.promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage,
        remainder_date,
        mail_date,
        is_published
        from promotion
        where promotion.biz_id = #bizId#
        and promotion.is_published = 'N'
        group by promotion.promotion_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getPastInactivePromotion" resultMap="promotionResult">
        select $sqlRows$
        promotion.biz_id,
        promotion.promotion_id,
        promotion.promotion_name,
        promotion.description,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.is_active,
        promotion.packages,
        promotion.promotion_type_id,
        promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage,
        remainder_date,
        mail_date,
        is_published
        from promotion
        where promotion.biz_id = #bizId#
        and promotion.is_published = 'Y'
        and promotion.is_active = 'N'
        group by promotion.promotion_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <update id="disablePromotion">
        update promotion set
        is_active = 'N'
        where promotion_id = #promotionId#;
    </update>

    <update id="disablePastPromotion">
        update promotion set
        is_active = 'Y'
        where promotion_id = #promotionId#;
    </update>

    <update id="updateMatMaster">
        update material_master set
        material_name = #matName#
        where material_id = #matId#;
    </update>

    <update id="updateMatToPkg">
        update material_to_package set
        qty_needed = #qtyNeeded#,
        material_id = #materialId#,
        modified_dt = utc_timestamp()
        where material_id = #matId# and package_id = #pkg# ;
    </update>

    <delete id="deletePromotion">
        delete from promotion where promotion_id=#promotionId#;
    </delete>

    <insert id="addDataToClients">
        load data local infile #destinationDir# into table promotion_email fields terminated by ',' ENCLOSED BY '"'
        (name,biz_id,promotion_id,email_id);
    </insert>

    <insert id="addDataToClientsEmail">
        insert into promotion_email (biz_id,promotion_id,name,email_id,date_sent) values (#bizId#,#promotionId#,#name#,#emailId#,UTC_TIMESTAMP());
    </insert>

    <select id="getActivePromotion" resultMap="activePromotion">
        <!-- select
         promotion.promotion_id,
		 promotion.promotion_name,
         location.loc_name,
         service_master.service_name,
         promotion.start_time,
         promotion.end_time,
         package.package_name
	   from location inner join promotion
	       inner join service on promotion.svc_id = service.svc_id
	       inner join service_master on service.service_code = service_master.service_code
	       inner join location_to_service on location_to_service.is_active = 'Y'
	       inner join package  on package.duration = promotion.packages
       where location.biz_id = #bizId# and promotion.is_active = 'y' and
	       location_to_service.svc_id = promotion.svc_id and
	       location_to_service.loc_svc_id = package.loc_svc_id group by promotion.promotion_id; -->


        select
        promotion.promotion_id,
        promotion.promotion_name,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.packages
        from location join business on location.biz_id = business.biz_id
        inner join timezone on location.timezone_code = timezone.timezone_code
        inner join promotion on promotion.biz_id = business.biz_id
        where promotion.biz_id = #bizId#
        and promotion.is_active = 'Y'
        and promotion.is_published = 'Y'
        and promotion.start_time &lt;= DATE(CONVERT_TZ(UTC_TIMESTAMP, 'UTC', timezone.timezone)) and promotion.end_time &gt;= DATE(CONVERT_TZ(UTC_TIMESTAMP, 'UTC', timezone.timezone))
        group by promotion.promotion_id order by promotion.promotion_name asc;

    </select>

    <select id="getAdditional" resultMap="additionalInformation">
        select udf1_title,
        udf2_title,
        udf3_title,
        udf4_title,
        udf5_title
        from business
        where biz_id=#bizId#;
    </select>

    <select id="getUpComingPromotion" resultMap="promotionResult">
        select $sqlRows$
        promotion.biz_id,
        promotion.promotion_id,
        promotion.promotion_name,
        promotion.description,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.is_active,
        promotion.packages,
        promotion.promotion_type_id,
        promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage,
        remainder_date,
        mail_date,
        is_published
        from promotion
        where promotion.biz_id = #bizId# and promotion.is_active = 'y' and promotion.start_time &gt; utc_date() and promotion.is_published = 'Y'
        group by promotion.promotion_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getOngoingPromotion" resultMap="promotionResult1">
        select $sqlRows$
        promotion.promotion_id,
        b.biz_name,
        promotion.promotion_name,
        promotion.description,
        promotion.loc_id,
        promotion.svc_id,
        promotion.start_time,
        promotion.end_time,
        promotion.is_active,
        promotion.packages,
        promotion.promotion_type_id,
        promotion_code,
        discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage,
        remainder_date,
        mail_date,
        is_published
        from promotion
        join business b on b.biz_id=promotion.biz_id
        where promotion.biz_id = #bizId#
        and promotion.is_published = 'Y'
        and promotion.is_active = 'y'and promotion.start_time &lt;= utc_date() and promotion.end_time &gt;= utc_date()
        group by promotion.promotion_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getAppointmentRatingByBizId" resultType="java.lang.Double">
        select avg(rating)
        from appointment_rating as t1
        inner join appointment as t2 on t1.appt_id=t2.appt_id
        inner join business as t3 on t2.biz_id=t3.biz_id
        where t3.biz_id=#bizId#;
    </select>

    <select id="getBusinessPromotion" resultMap="businessPromotionResult">
        select
        business.biz_id as biz_id,
        business.biz_name as biz_name,
        group_concat(" ",CAST(promotion_name as CHAR)," ") as  promotion_name
        from business join business_user on business.biz_id = business_user.biz_id
        join location on location.biz_id=business.biz_id
        join promotion on promotion.loc_id=location.loc_id
        where business_user.user_id = #userId# group by business.biz_id order by business.biz_name asc;
    </select>

    <select id="getUserBusinessPromotion" resultMap="businessPromotionResult1">
        select
        business.biz_id as biz_id,
        business.biz_name as biz_name,
        group_concat("",CAST(promotion_name as CHAR),"") as  promotion_name,
        group_concat("'",CAST(promotion_id as CHAR),"'") as  promotion_id
        from business
        join business_user on business.biz_id = business_user.biz_id
        join location on location.biz_id=business.biz_id
        join promotion <!-- on promotion.loc_id=location.loc_id -->
        where business_user.user_id = #userId# group by business.biz_id order by business.biz_name asc;
    </select>

    <select id="getPromotionByPromotionCode" resultType="java.lang.Integer">
        select if(count(*),true,false)
        from promotion
        inner join promotion_email on promotion.promotion_id = promotion_email.promotion_id
        join user_master on promotion_email.email_id = user_master.email
        where promotion_code=#promotionCode#
        and if(promotion.promotion_type_id = 1,if(now() between start_time and end_time,true,false), if(#date# between start_time and end_time,true,false))
        and user_master.user_id=#userId#
        and if((SELECT FIND_IN_SET(#pkgId#,packages) )>0,true,false)
        and if((SELECT FIND_IN_SET(#svcId#,svc_id) )>0,true,false)
        and if((SELECT FIND_IN_SET(#locId#,loc_id) )>0,true,false);
    </select>

    <select id="getPromotionByPromotionCodeByClientId" resultType="java.lang.Integer">
        select if(count(*),true,false)
        from promotion
        inner join promotion_email on promotion.promotion_id = promotion_email.promotion_id
        join client on promotion_email.email_id = client.email
        where promotion_code=#promotionCode#
        and if(promotion.promotion_type_id = 1,if(now() between start_time and end_time,true,false), if(#date# between start_time and end_time,true,false))
        and client.client_id=#clientId#
        and if((SELECT FIND_IN_SET(if(packages = '0',0,#pkgId#),packages) )>0,true,false)
        and if((SELECT FIND_IN_SET(if(svc_id = '0',0,#svcId#),svc_id) )>0,true,false)
        and if((SELECT FIND_IN_SET(if(loc_id='0',0,#locId#),loc_id) )>0,true,false);
    </select>

    <select id="checkPromotionCodeExist" resultType="java.lang.Integer">
        SELECT count(promotion_code) FROM promotion where promotion_code=#promotionCode#;
    </select>

    <select id="oldPromotionCode" resultType="java.lang.String">
        SELECT promotion_code FROM promotion where promotion_id=#promotionId#;
    </select>

    <select id="getLocationIsActiveTCount" resultType="java.lang.Integer">
        select count(*) from location where location.biz_id = #bizId# and location.is_active = 'T';
    </select>

    <select id="getUniqueLocationToService1" resultMap="locationToService">
        SELECT loc_svc_id,loc_id,svc_id,client_location,service_name,loc_name,cost,duration,created_dt,created_by,modified_dt,modified_by  FROM (select
        location_to_service.loc_svc_id as loc_svc_id,
        location_to_service.loc_id as loc_id,
        location_to_service.svc_id as svc_id,
        location_to_service.client_location as client_location,
        location_to_service.created_dt as created_dt,
        location_to_service.created_by as created_by,
        location_to_service.modified_dt as modified_dt,
        location_to_service.modified_by as modified_by,
        location_to_service.cost as cost,
        location_to_service.duration as duration,
        service.service_code as service_code,
        service_master.service_name as service_name,
        location.loc_name as loc_name
        from location_to_service inner join location on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service  on service.svc_id=location_to_service.svc_id
        inner join service_master on service.service_code=service_master.service_code where service.biz_id = #bizId# and location.loc_id = #locId#
        ORDER BY loc_svc_id ASC) as a GROUP BY loc_id,svc_id ;
    </select>

    <select id="getCountOfLocToResOtherThanTheDeletingLoc" resultType="java.lang.Integer">
        select count(*) from location_to_resource where loc_id != #locId# and res_id = #resId# and is_active = 'Y';
    </select>

    <select id="getCountOfLocToResOtherThanTheDeletingLoc1" resultType="java.lang.Integer">
        select count(*) from location_to_resource where loc_id != #locId# and res_id = #resId# and is_active!='D';
    </select>

    <select id="getCountOfApptsToLoc" resultType="java.lang.Integer">
        select count(*) from  appointment where loc_id = #locId# and is_active!='D';
    </select>

    <select id="getCountOfApptsByLoc" resultType="java.lang.Integer">
        select count(*) from  appointment where loc_id = #locId#;
    </select>

    <select id="getCountOfApptsToRes" resultType="java.lang.Integer">
        select count(*) from  appointment where res_id = #resId#;
    </select>

    <select id="getApptCntToBiz" resultType="java.lang.Integer">
        select count(*) from  appointment where biz_id = #bizId# and is_active!='D';
    </select>

    <select id="getApptCntByBiz" resultType="java.lang.Integer">
        select count(*) from  appointment where biz_id = #bizId#;
    </select>

    <select id="getAppointmentsCount" resultType="java.lang.Integer">
        select count(*) from  appointment where biz_id = #bizId# and loc_id = #locId# and res_id = #resId# and svc_id = #svcId# and start_time = #startTime# and is_active = 'y';
    </select>

    <insert id="addBusinessToCategory">
        insert into business_to_category(
        biz_cat_id,
        category_code,
        biz_id,
        is_active,
        created_by,
        created_dt,
        modified_by,
        modified_dt)
        values(
        null,
        #categoryCode#,
        #bizId#,
        #isActive#,
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        UTC_TIMESTAMP());
    </insert>

    <select id="getMasterServicesByBizId" resultMap="serviceMasterResult1">
        select  service_master.service_code,
        c.category_name,
        group_concat(distinct cast(service_master.service_name  as char(100)),".",cast(service_master.service_code  as char(100))) as service_name,
        business_to_category.category_code,
        service_master.description,
        business_to_category.is_active
        from business_to_category inner join service_master on business_to_category.category_code = service_master.category_code
        join category c on business_to_category.category_code = c.category_code
        where business_to_category.biz_id=#bizId# and
        business_to_category.is_active='Y' and service_master.is_active='Y'
        group by business_to_category.category_code;
    </select>

    <select id="getServiceListByBizIdLocId" resultMap="LocationToServiceUniqueResult1">
        select
        distinct sm.service_code as service_code,
        concat(sm.service_name,"->",c.category_name )as service_name,
        sm.category_code as category_code,
        sm.description as description,
        sm.is_active as is_active
        from service_master sm inner join business_to_category bc on sm.category_code = bc.category_code
        join category c on bc.category_code = c.category_code
        where bc.is_active="Y"
        and not Exists (select ser.service_code
        from location_to_service ls inner join service ser on ls.svc_id = ser.svc_id and ls.is_active = 'Y'
        where sm.service_code=ser.service_code and loc_id = #locId#)
        and sm.is_active = 'Y' and bc.biz_id=#bizId#;
    </select>

    <select id="getBusinessCategoriesNotSelected" resultMap="listBusinessCategoriesResult">
        select distinct(c.category_code),
        c.category_name,
        c.resource_title,
        c.resource_title_plural,
        c.receiver_title,
        c.receiver_title_plural,
        c.details,
        c.is_active
        from category c join service_master on service_master.category_code = c.category_code where c.category_code not in
        (select distinct bc.category_code from business_to_category bc where bc.biz_id=#bizId# and bc.is_active='Y')
        and c.is_active="Y"
        order by c.category_name;
    </select>

    <select id="getBusinessCategoriesSelected" resultMap="listBusinessCategoriesResult">
        select c.category_code,
        c.category_name,
        c.resource_title,
        c.resource_title_plural,
        c.receiver_title,
        c.receiver_title_plural,
        c.details,
        c.is_active
        from service s inner join service_master sm on sm.service_code = s.service_code
        join category c on c.category_code = sm.category_code
        where biz_id=#bizId#
        group by category_code
        order by category_name;
    </select>

    <select id="getBusinessCategoriesUsed" resultMap="listBusinessCategoriesResult">
        select distinct c.category_code,
        c.category_name,
        c.resource_title,
        c.resource_title_plural,
        c.receiver_title,
        c.receiver_title_plural,
        c.details,
        c.is_active
        from business_to_category bc join category c on c.category_code=bc.category_code
        where bc.category_code not in
        (select distinct sm.category_code from service_master sm join service ser on ser.service_code=sm.service_code
        where ser.biz_id=#bizId#)
        and bc.biz_id=#bizId# and bc.is_active='Y'
        order by c.category_name;
    </select>

    <select id="getBusinessCategories" resultMap="listBusinessCategoriesResult">
        select  c.category_code,
        c.category_name,
        c.resource_title,
        c.resource_title_plural,
        c.receiver_title,
        c.receiver_title_plural,
        c.details,
        c.is_active
        from business_to_category bc join category c on c.category_code = bc.category_code
        where bc.biz_id=#bizId# and bc.is_active = 'Y';
    </select>

    <update id="updateBusinessCategories">
        update business_to_category set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where category_code
        not in (select distinct category_code
        from service s
        join service_master sm on sm.service_code= s.service_code
        where s.biz_id=#bizId#)
        and category_code not in (substring(#categoryCodes#,0,length(#categoryCodes#)-1)) and biz_id=#bizId#;
    </update>

    <update id="updateBusinessCategoriesSelected">
        update business_to_category set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where category_code
        not in (select distinct category_code
        from service s
        join service_master sm on sm.service_code= s.service_code
        where s.biz_id=#bizId#)
        and category_code not in (substring(#categoryCodesSelected#,0,length(#categoryCodesSelected#)-1)) and biz_id=#bizId#;
    </update>

    <insert id="addBusinessToCategoryFromEdit">
        insert into business_to_category(
        biz_cat_id,
        category_code,
        biz_id,
        is_active,
        created_by,
        created_dt,
        modified_by,
        modified_dt)
        select null,#categoryCode#,#bizId#,'Y',#createdBy#,UTC_TIMESTAMP(),#modifiedBy#,UTC_TIMESTAMP()
        from dual
        WHERE NOT EXISTS (SELECT * FROM business_to_category
        where category_code=#categoryCode# and biz_id=#bizId# and is_active = 'Y');
    </insert>

    <select id="getApptCountToResourcePast" resultType="java.lang.Integer">
        select count(*) from  appointment where res_id = #resId# and loc_id=#locId# and end_time &lt; utc_timestamp() and is_active!='D' and status_code in ('c','p');
    </select>

    <update id="updateServiceToResource">
        update resource_to_service
        set is_active = #active#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where res_id = #resId# and loc_id=#locId#;
    </update>

    <select id="getResourceToLocationByNickName" resultMap="resourceResult2">
        select * from (select
        resource.res_id,
        resource.biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        is_onsked_user
        from resource inner join location_to_resource on location_to_resource.res_id = resource.res_id and resource.biz_id=#bizId# and location_to_resource.is_active = 'Y'
        where resource.nick_name = #nickName# and location_to_resource.loc_id = #locId#) as a ;
    </select>

    <select id="getResourceByNickNamelist" resultMap="resourceResult2">
        select
        res_id,
        resource.biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        is_onsked_user
        from resource
        where nick_name = #nickName# and biz_id=#bizId#;
    </select>

    <select id="getResourceToLocationByNickNameList" resultMap="resourceResult2">
        select
        resource.res_id,
        resource.biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        is_onsked_user
        from resource inner join location_to_resource on location_to_resource.res_id = resource.res_id and resource.biz_id=#bizId# and location_to_resource.is_active = 'Y'
        where resource.nick_name = #nickName# and location_to_resource.loc_id = #locId# ;
    </select>

    <insert id="addResourceToService">
        insert into resource_to_service(
        res_id,
        svc_id,
        loc_id,
        is_active,
        created_by,
        created_dt,
        modified_by,
        modified_dt)
        select #resId#,#svcId1#,#locId#,'Y',#createdBy#,utc_timestamp(),#modifiedBy#,utc_timestamp()
        from dual
        WHERE NOT EXISTS (SELECT * FROM resource_to_service
        where res_id=#resId# and svc_id=#svcId1# and loc_id=#locId# and is_active = 'Y');
    </insert>


    <select id="checkForDupliceteMaterial" resultType="java.lang.Integer">
        select count(*) from material_master where material_name=#matName# and biz_id = #bizId#;
    </select>

    <select id="getMaterialsByBizId" resultMap="materialList">
        select concat(material_master.material_name,"(",material_master.manufacturer,")" )as material_name,
        material_master.material_id
        from material_master
        where material_master.biz_id= #bizId# and material_master.material_id
        not in (select material_to_package.material_id from material_to_package where material_to_package.package_id = #package# );
    </select>

    <select id="getActiveBusinessesByUserId" resultMap="bizList">
        select distinct business.biz_id,
        business.biz_name,
        business.display_counter,
        business.notify_by_pin
        from business inner join location on location.biz_id = business.biz_id and location.is_active = 'Y'
        join location_to_resource on location.loc_id = location_to_resource.loc_id and location_to_resource.is_active = 'Y'
        join service on service.biz_id = business.biz_id and service.is_active = 'Y'
        join resource_to_service on resource_to_service.res_id = location_to_resource.res_id and resource_to_service.loc_id = location.loc_id and resource_to_service.svc_id = service.svc_id and resource_to_service.is_active = 'Y'
        join location_to_service on location_to_service.is_active = 'Y' and location_to_service.loc_id = resource_to_service.loc_id and location_to_service.svc_id = resource_to_service.svc_id
        join package on package.loc_svc_id = location_to_service.loc_svc_id
        join business_user on business_user.biz_id = business.biz_id and business_user.user_id = #userId#
        where business.is_active = 'Y' and  business.is_deleted != 'Y' and business.manage_inventory='Y';
    </select>

    <select id="getPkgsToSvcsByLocId" resultMap="pkgsTosvcs">
        select l.loc_name,
        b.biz_name,
        location_to_service.loc_svc_id,
        location_to_service.svc_id,
        concat(service_master.service_name,"->",c.category_name )as service_name,
        group_concat(Distinct  " ",CAST(package.package_name as CHAR),":",cast(package.package_id as char)) as  package_name
        from location_to_service
        inner join service on service.svc_id = location_to_service.svc_id and location_to_service.is_active = 'Y'
        join service_master on service_master.service_code = service.service_code
        join category c on c.category_code=service_master.category_code
        join package on package.loc_svc_id = location_to_service.loc_svc_id
        join location l on l.loc_id = location_to_service.loc_id
        join business b on l.biz_id=b.biz_id
        where location_to_service.loc_id = #locId# group by service_master.service_name order by service_name ;
    </select>

    <select id="getMaterialsToPkgByLocSvcId" resultMap="matsToPkgs">
        select material_master.material_name,
        material_to_package.qty_needed,
        material_master.material_id
        from material_to_package
        inner join material_master on material_master.material_id = material_to_package.material_id
        where material_to_package.package_id = #pkgId#;
    </select>

    <select id="getMaterialAndQtyByMatId" resultMap="matsToPkgs">
        select material_master.material_name,
        material_to_package.qty_needed,
        material_master.material_id
        from material_to_package
        inner join material_master on material_master.material_id = material_to_package.material_id
        where material_master.material_id = #matId# and material_to_package.package_id = #pkg#;
    </select>

    <select id="getMatByMatId" resultMap="matByMatId">
        select material_id,biz_id,material_name,manufacturer,disposable,cost from material_master where material_id = #matId#;
    </select>

    <delete id="deleteMaterialToPackage">
        delete from material_to_package
        where material_id = #materialId# and package_id = #pkgNumber# ;
    </delete>

    <select id="getMaterialsListByBizId" resultMap="matByMatId">
        select material_id, biz_id, material_name, manufacturer, disposable,cost from material_master where biz_id = #bizId#;
    </select>

    <select id="getMatCountByMatNameAndManufacturer" resultType="java.lang.Integer">
        select count(*) from material_master where biz_id = #bizId# and material_name = #matName# and manufacturer = #manufacturer#;
    </select>

    <update id="updateMasterMaterial">
        update material_master set material_name=#matName#, manufacturer=#manufacturer#, disposable=#disposable#,modified_date = UTC_TIMESTAMP(),cost = #cost# where material_id=#matId#;
    </update>

    <select id="checkForPkgUsingMaterial" resultType="java.lang.Integer">
        select count(*) from material_to_package where material_id = #matId#;
    </select>

    <delete id="deleteMasterMaterialByMatId">
        delete from material_master where material_id = #matId#;
    </delete>

    <insert id="addPurchase">
        insert into purchase_header
        (purchase_id,
        loc_id,
        biz_id,
        purchase_date,
        purchase_order,
        remark,
        tot_amnt_include_tax,
        tot_tax,
        created_dt,
        completed)
        values(
        null,
        #locId#,
        #bizId#,
        #purchaseDate#,
        #purchaseOreder#,
        #remark#,
        #totAmntIncludingTax#,
        #totTax#,
        utc_timestamp(),
        'N');
        <selectKey resultType="java.lang.Integer" keyProperty="purchaseId">
            select last_insert_id() as purchase_id
        </selectKey>
    </insert>

    <select id="getBasicPurchaseIdLocId" resultMap="basicPurchaseDetails1">
        select * FROM purchase_header where loc_id=#locId#;
    </select>

    <select id="getBasicPurchaseDetailsByPid" resultMap="basicPurchaseDetails">
        select business.biz_name,
        location.loc_name,
        purchase_header.loc_id,
        purchase_header.purchase_id,
        purchase_header.biz_id,
        purchase_header.purchase_date,
        purchase_header.purchase_order,
        purchase_header.remark,
        purchase_header.tot_amnt_include_tax,
        purchase_header.tot_tax,
        purchase_header.completed
        from purchase_header
        inner join business on purchase_header.biz_id = business.biz_id
        inner join location on location.loc_id = purchase_header.loc_id
        where purchase_id = #pId# and business.biz_id=#bizId# ;
    </select>

    <insert id="addPurchaseDetails">
        insert into purchase_details (line_item_no, purchase_id, mat_id, qty, rate, batch_no, tax_amnt, amount, remark)
        values(null,#purchaseId#,#matId#,#qty#,#rate#,#batchNumber#,#taxAmnt#,#amnt#,#remark#);
    </insert>

    <update id="updateBasicPurchaseMaterial">
        update purchase_header set biz_id = #bizId#, loc_id = #locId#, purchase_date = #purchaseDate#,purchase_order = #purchaseOreder#,remark = #remark#,tot_amnt_include_tax=#totAmntIncludingTax#,tot_tax = #totTax# where purchase_id = #purchaseId#
    </update>

    <select id="getBizIdForMatId" resultType="java.lang.Integer">
        select biz_id from material_master where material_id = #matId#;
    </select>

    <select id="getLocIdsForBizId" resultMap="locIdList">
        select loc_id from location where biz_id = #bizId# and is_active = 'Y';
    </select>

    <insert id="initStockForNewMaterialToAllLocsOfBiz">
        insert into material_stock(material_id,loc_id,qty,date) values(#matId#,#locId#,0,utc_timestamp());
    </insert>

    <select id="getLocsAndMatIdsForAllInventoryAciveAndBizActiveBiz"  resultMap="updateStocks">
        select business.biz_id,
        location.loc_id,
        material_master.material_id
        from material_master
        inner join business on material_master.biz_id = business.biz_id
        inner join location on location.biz_id = business.biz_id and business.is_active = 'Y' and business.manage_inventory = 'Y';
    </select>

    <select id="getLastRunTiming" resultType="java.lang.String">
        select timing from batch order by timing desc limit 1;
    </select>

    <select id="getPackageByPromotionId" resultType="java.lang.String">
        select packages from promotion where promotion_id = #promotionId#;
    </select>

    <select id="calculateStock" resultType="java.lang.Integer">
        select (@t3 :=(select qty from material_stock where material_stock.loc_id = #locId# and material_stock.material_id = #matId# order by date  DESC LIMIT 1)
        +(@t2 :=(select if ((select sum(purchase_details.qty) from purchase_header
        inner join purchase_details on purchase_details.purchase_id = purchase_header.purchase_id
        where purchase_header.loc_id = #locId# and purchase_header.created_dt &gt;= #enteredDt# and purchase_details.mat_id = #matId# and purchase_header.created_dt &lt;= utc_timestamp()),(select sum(purchase_details.qty) from purchase_header
        inner join purchase_details on purchase_details.purchase_id = purchase_header.purchase_id
        where purchase_header.loc_id = #locId# and purchase_header.created_dt &gt;= #enteredDt# and purchase_details.mat_id = #matId# and purchase_header.created_dt &lt;= utc_timestamp()),0))))
        -(@t1 :=(select if((select sum(material_to_package.qty_needed) from appointment
        inner join location_to_service on location_to_service.is_active = 'Y' and location_to_service.loc_id = appointment.loc_id and location_to_service.svc_id = appointment.svc_id
        inner join package  on package.loc_svc_id = location_to_service.loc_svc_id
        inner join material_to_package on package.package_id = material_to_package.package_id
        inner join material_master on material_master.disposable != 'Y' and material_master.material_id = #matId#
        where material_to_package.material_id = #matId# and appointment.start_time &gt;= #enteredDt# and appointment.end_time &lt;= utc_timestamp() and appointment.status_code = 'com' and appointment.loc_id = #locId#),(select sum(material_to_package.qty_needed) from appointment
        inner join location_to_service on location_to_service.loc_id = appointment.loc_id and location_to_service.svc_id = appointment.svc_id
        inner join package  on package.loc_svc_id = location_to_service.loc_svc_id
        inner join material_to_package on package.package_id =material_to_package.package_id
        inner join material_master on material_master.disposable != 'Y' and material_master.material_id = #matId#
        where material_to_package.material_id = #matId# and appointment.start_time &gt;= #enteredDt# and appointment.end_time &lt;= utc_timestamp() and appointment.status_code = 'com' and appointment.loc_id = #locId#),0))) as yy;
    </select>

    <insert id="addIntoStocks">
        insert into material_stock(material_id, loc_id, qty, date) values(#matId#,#locId#,#qty#,utc_timestamp())
    </insert>

    <insert id="enterLastRunTiming">
        insert into batch(srl_num, func_name, timing) values(null,'stock',utc_timestamp());
    </insert>

    <select id="getMatIdsByLocId" resultMap="getmats">
        select material_id,material_name from material_master inner join location on location.biz_id = material_master.biz_id where location.loc_id = #locId# ;
    </select>

    <select id="getInventoryBizCountByUserId" resultType="java.lang.Integer">
        select count(*) from business_user inner join business on business_user.biz_id = business.biz_id and business.manage_inventory = 'Y'
        where business_user.user_id = #userId# and business.is_deleted!='Y';
    </select>

    <select id="getLatestStockByMatIdAndLocId" resultType="java.lang.Integer">
        select qty from material_stock where material_stock.loc_id = #locId# and material_stock.material_id = #matId# order by date  DESC LIMIT 1;
    </select>

    <update id="updatePurchaseHeader">
        update purchase_header set completed = 'Y' where purchase_id = #pId#;
    </update>

    <select id="getBusinessesByUserIdByPromotionIdByLimitBySort" resultMap="businessPromotionSummaryResult1">
        select $sqlRows$ business.biz_id as biz_id,
        business.biz_name as biz_name,
        group_concat(" ",CAST(promotion_name as CHAR)," ") as  promotion_name
        from business inner join business_user on business.biz_id = business_user.biz_id
        left join location on location.biz_id=business_user.biz_id
        left join promotion on promotion.loc_id=location.loc_id
        where business_user.user_id =#userId# and business.is_deleted = 'N'
        and business.is_active="Y" group by business_user.biz_id
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getUniqueLocationToServiceByLocIdBizIdforCategoryCode" resultMap="LocationToServiceUniqueResult">
        select loc_id,
        loc_name,
        concat(service_name," -> ",category_name) as service_name,
        service_code,
        svc_id from
        (select location.loc_id,
        location.loc_name,
        c.category_name,
        service_master.service_name,
        service_master.service_code,
        service.svc_id
        from service_master
        inner join location on location.loc_id=#locId#
        inner join location_to_service on location_to_service.loc_id=location.loc_id and location_to_service.is_active = 'Y'
        inner join service on service.svc_id=location_to_service.svc_id
        inner join category c on c.category_code = service_master.category_code
        where service_master.service_code=service.service_code)as a GROUP BY loc_id,svc_id;
    </select>

    <select id="getUniqueLocationToServiceByLocIdBizIdOnCategoryCode" resultMap="serviceMasterResult1">
        select
        sm.service_code,
        category_name,
        group_concat(distinct cast(sm.service_name  as char(100)),".",cast(s.svc_id  as char(100))) as service_name,
        c.category_code,
        sm.description,
        c.is_active
        from service_master sm inner join service s on s.service_code= sm.service_code
        inner join location_to_service ls on s.svc_id=ls.svc_id and ls.is_active = 'Y'
        inner join package p on p.loc_svc_id = ls.loc_svc_id
        inner join location l on ls.loc_id=l.loc_id and ls.loc_id =  if(#locId# = 0 ,ls.loc_id, #locId#)
        inner join category c on sm.category_code=c.category_code
        where sm.service_code=s.service_code and l.biz_id = #bizId#  GROUP BY c.category_code;
    </select>

    <select id="getResourceServicesByCategory" resultMap="serviceMasterResult1">
        select  sm.service_code,
        category_name,
        group_concat(cast(sm.service_name  as char(100)),".",cast(s.svc_id  as char(100)),"@",cast((case when rs.svc_id != '' then rs.svc_id else '' end) as char(100))) as service_name,
        c.category_code,
        description,
        c.is_active
        from location_to_service ls
        join resource_to_service rs on ls.svc_id=rs.svc_id and ls.loc_id=rs.loc_id and rs.res_id=#resId# and ls.is_active = 'Y' and rs.is_active = 'Y'
        left join service s on s.svc_id=ls.svc_id
        left join service_master sm on sm.service_code = s.service_code
        left join category c on c.category_code = sm.category_code where ls.loc_id=#locId# group by c.category_code  order by category_name asc ;
    </select>

    <select id="getLocsToBizWhichHasActiveRes" resultMap="locationResult2">
        select distinct location.loc_id,
        location.loc_name, location.timezone_code, b.biz_name
        from location
        inner join location_to_resource on location.loc_id = location_to_resource.loc_id and location_to_resource.is_active = 'Y'
        join resource_to_service on resource_to_service.res_id = location_to_resource.res_id and resource_to_service.loc_id = location.loc_id and resource_to_service.is_active = 'Y'
        join business b on b.biz_id = location.biz_id
        where location.biz_id = #bizId# and location.is_active = 'Y' order by location.loc_name asc;
    </select>

    <select id="getClientInfoForBizCal" resultMap="clientInfo">
        SELECT client_id,email,first_name,last_name,cell_phone FROM client where biz_id = #bizId# and is_active = 'Y' order by email;
    </select>

    <select id="getClientInfoForCourseCal" resultMap="courseClientInfo">
        SELECT
        if(ctu.client_id = 0 and ctu.user_id = 0,urg.id, if(ctu.client_id != 0,c.client_id,um.user_id)) as user_id,
        if(ctu.client_id = 0 and ctu.user_id = 0,urg.first_name, if(ctu.client_id != 0,c.first_name,um.first_name)) as first_name,
        if(ctu.client_id = 0 and ctu.user_id = 0,urg.last_name, if(ctu.client_id != 0,c.last_name,um.last_name)) as last_name,
        if(ctu.client_id = 0 and ctu.user_id = 0,urg.email, if(ctu.client_id != 0,c.email,um.email)) as email,
        if(ctu.client_id = 0 and ctu.user_id = 0,"unreg_user", if(ctu.client_id != 0,"client","user")) as user_type
        FROM client c
        join course_to_user ctu on c.client_id = ctu.client_id
        left join unregistered_user_master urg on urg.id = ctu.unreg_user_id
        left join user_master um on um.user_id = ctu.user_id
        where ctu.course_id=#courseId# and c.is_active = 'Y';
    </select>

    <delete id="deleteStocksByMatId">
        delete from material_stock where material_id = #matId#;
    </delete>

    <select id="getApptCountToService" resultType="java.lang.Integer">
        select count(*) from  appointment where svc_id = #svcId# and loc_id=#locId# and end_time &gt; utc_timestamp();
    </select>

    <select id="getPastApptCountToService" resultType="java.lang.Integer">
        select count(*) from  appointment where svc_id = #svcId# and loc_id=#locId# and end_time &lt; utc_timestamp();
    </select>

    <select id="getApptCountToResourceService" resultType="java.lang.Integer">
        select count(*) from  appointment where loc_id=#locId# and res_id = #resId# and svc_id = #svcId# and is_active!='D' and status_code in ('c','p');
    </select>

    <select id="getResCountToService" resultType="java.lang.Integer">
        select count(*) from  resource_to_service where svc_id = #svcId# and loc_id=#locId# and is_active = 'Y';
    </select>

    <select id="getPackageCountToService" resultType="java.lang.Integer">
        select count(*)
        from location_to_service ls
        inner join package p on p.loc_svc_id = ls.loc_svc_id and ls.is_active = 'Y'
        where ls.svc_id = #svcId# and ls.loc_id=#locId#;
    </select>

    <update id="updateLocationToServiceForPastAppointments">
        update location_to_service
        set is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where svc_id = #svcId# and loc_id=#locId#;
    </update>

    <update id="updateMasterService">
        update service
        set is_active = 'D',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where svc_id = #svcId#;
    </update>

    <select id="getMasterServiceExists" resultType="java.lang.Integer">
        select count(*)  from location_to_service ls where ls.svc_id = #svcId# and is_active != 'D';
    </select>

    <select id="getMaterialsListByBizIdByLimitBySort" resultMap="matByMatId">
        select $sqlRows$ material_id, biz_id, material_name, manufacturer, disposable, cost from material_master where biz_id = #bizId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getFoundRows" resultType="java.lang.Integer">
        <!-- select business_id from business;  -->
        select FOUND_ROWS();
    </select>

    <select id="getMatIdsByLocIdByLimitBySort" resultMap="getmats">
        select $sqlRows$ material_id,
        material_name,
        manufacturer
        from material_master
        inner join location on location.biz_id = material_master.biz_id
        where location.loc_id = #locId#
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getMaterialsToPkgByLocSvcIdByLimitBySort" resultMap="matsToPkgs">
        select $sqlRows$ concat(material_master.material_name,"(",material_master.manufacturer,")" )as material_name,
        material_to_package.qty_needed,
        material_master.material_id
        from material_to_package
        inner join material_master on material_master.material_id = material_to_package.material_id
        where material_to_package.package_id = #pkgId# and  material_master.biz_id= #bizId#
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="inventoryBreadCrum" resultMap="bizToLoc">
        select business.biz_name,
        package.package_name,
        location.loc_name,
        service_master.service_name,
        business.biz_id,
        location.loc_id
        from package
        inner join location_to_service on location_to_service.loc_svc_id=package.loc_svc_id and location_to_service.is_active = 'Y'
        inner join location  on location.loc_id= location_to_service.loc_id
        inner join service on service.svc_id= location_to_service.svc_id
        inner join service_master on service_master. service_code=service.service_code
        join business on location.biz_id = business.biz_id where package.package_id=#pkgId#;
    </select>

    <select id="getMaterialsByBizIdByMatId" resultMap="materialList1">
        select material_master.material_name,
        material_master.material_id,
        material_master.manufacturer
        from material_master
        where material_master.material_id=#matId#
        union
        select material_master.material_name,
        material_master.material_id,
        material_master.manufacturer
        from material_master
        where material_master.biz_id= #bizId# and material_master.material_id
        not in
        (select material_to_package.material_id from material_to_package where material_to_package.package_id = #package# );
    </select>

    <select id="checkDuplicateClient" resultType="java.lang.Integer">
        select count(*) from client where email = #email# and biz_id = #bizId#;
    </select>

    <select id="getPackageDetails1" resultMap="package2">
        select count(l.loc_id) as loc_Count,
        l.loc_id,
        s.svc_id,
        group_concat(distinct " ",CAST(ls.loc_svc_id as CHAR),";",CAST(r.nick_name as CHAR)," ") as nick_name,
        group_concat(distinct " ",CAST(ls.loc_svc_id as CHAR),"")as loc_svc_id,
        l.loc_name,
        group_concat(distinct "",CAST(p.package_id as CHAR),"") as package_id,
        group_concat(distinct " ",CAST(ls.loc_svc_id as CHAR),";",CAST(sm.service_name as CHAR)," -> ",c.category_name," ") as service_name,
        group_concat(distinct "","^",CAST(p.package_id as CHAR),":' ",CAST(ls.loc_svc_id as CHAR),"';",CAST(p.package_name as CHAR),"`",CAST(if(IFNULL(p.session_type,'single') = 'multiple', 'Multi Session', 'Single Session') as CHAR),"`",CONCAT(CONCAT(CAST(p.duration div 60 as CHAR)," hrs  "),CONCAT(CAST(p.duration mod 60 as CHAR)," min")),"`",CAST(if(IFNULL(p.client_location, 'N') = 'Y', 'Yes', 'No') as CHAR),"`",CAST(p.cost as CHAR), "/") as package_name,
        group_concat(distinct "' ",CAST(ls.loc_svc_id as CHAR),"';",CAST(ls.client_location as CHAR),"") as client_location
        from location l
        left join location_to_service ls on ls.loc_id=l.loc_id and ls.is_active = 'Y'
        left join service s on ls.svc_id = s.svc_id
        left join service_master sm on sm.service_code=s.service_code
        left join category c on c.category_code = sm.category_code
        left join location_to_resource lr on lr.loc_id=ls.loc_id and lr.is_active = 'Y'
        left join resource_to_service rs on rs.loc_id=ls.loc_id and rs.svc_id=ls.svc_id and rs.is_active = 'Y'
        left join resource r on r.res_id=rs.res_id and r.res_id=lr.res_id
        left join package p on p.loc_svc_id=ls.loc_svc_id
        where l.is_active!='D' and l.biz_id=#bizId# group by l.loc_id;
    </select>

    <select id="getPackageDetailsByLocSvcId" resultMap="packageLocSvcId">
        select
        l.loc_name,
        sm.service_name,
        p.loc_svc_id,
        p.package_id,
        p.package_name,
        p.duration,
        p.cost,
        IFNULL(p.client_location, 'N') as client_location,
        IFNULL(p.session_type, 'single') as session_type,
        ppd.payout_type,
        ppd.max_payout_factor,
        ppd.effective_from
        from location l
        left join location_to_service ls on ls.loc_id=l.loc_id and ls.is_active = 'Y'
        left join service s on ls.svc_id = s.svc_id
        left join service_master sm on sm.service_code=s.service_code
        left join package p on p.loc_svc_id=ls.loc_svc_id
        left join package_payout_details ppd on ppd.package_id = p.package_id and ppd.effective_upto = '0000:00:00'
        where p.loc_svc_id=#svcId# and p.package_id=#pkgId#;
    </select>

    <update id="updatePackage">
        update package set
        cost = #cost#,
        duration = #duration#,
        package_name = #packageName#,
        modified_dt =  UTC_TIMESTAMP(),
        modified_by =   #modifiedBy#,
        client_location = #clientLocation#,
        session_type = #sessionType#
        where package_id = #packageId#;
    </update>

    <update id="updatePackagePayoutDetails">
        update package_payout_details set
        payout_type = #payoutType#,
        max_payout_factor = #maxPayoutFactor#,
        effective_from = #effectiveFrom#,
        effective_upto = '0000-00-00',
        created_dt = UTC_TIMESTAMP(),
        created_by = #createdBy#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where package_id = #packageId#;
    </update>

    <update id="updatePackagePayoutEffectiveUpto">
        update package_payout_details set
        effective_upto = DATE_SUB(#effectiveFrom#, INTERVAL 1 DAY)
        where package_id = #pkgId# and effective_from = #effectiveFrom# and effective_upto = '0000:00:00';
    </update>

    <delete id="deletePackages">
        delete from package where package_id = #pkgId#;
    </delete>

    <select id="getCountOfAppt" resultType="java.lang.Integer">
        SELECT count(a.package_id) FROM appointment a where a.package_id in (SUBSTRING(#packId#,1,length(#packId#)))
    </select>

    <select id="getCountMaterialToPackage" resultType="java.lang.Integer">
        SELECT count(mp.package_id) FROM material_to_package mp where mp.package_id in (SUBSTRING(#packId#,1,length(#packId#)))
    </select>

    <select id="getLocSvcId" resultMap="locSvcId">
        select
        l.loc_id,
        l.loc_name,
        sm.service_name
        from location l
        left join location_to_service ls on ls.loc_id=l.loc_id and ls.is_active = 'Y'
        left join service s on ls.svc_id = s.svc_id
        left join service_master sm on sm.service_code=s.service_code
        where ls.loc_svc_id=#svcId#;
    </select>

    <select id="getPackageDetailsOfBusinessByBizId" resultMap="package1">
        select count(l.loc_id) as loc_Count,
        l.loc_id,
        s.svc_id,
        ls.loc_svc_id as loc_svc_id,
        l.loc_name,
        p.package_id as package_id,
        sm.service_name as service_name,
        group_concat(distinct "&lt;strong&gt;",CAST(p.package_name as CHAR),"&lt;/strong&gt; (",CAST(p.duration as CHAR)," mins) - $$" ,CAST(p.cost as CHAR)," ") as package_name,
        ls.client_location
        from location_to_service ls
        left join resource_to_service rs on ls.svc_id = rs.svc_id and ls.is_active = 'Y' and rs.is_active = 'Y'
        left join location l on ls.loc_id = l.loc_id
        left join service s on ls.svc_id = s.svc_id
        left join service_master sm on sm.service_code=s.service_code
        left join package p on p.loc_svc_id=ls.loc_svc_id where l.biz_id=#bizId# and p.loc_svc_id = ls.loc_svc_id group by p.loc_svc_id;
    </select>

    <select id="getAllPackagesOfBusinessByBizId" resultMap="package1">
        select	 null				as	loc_id
        ,l.loc_name			as	loc_name
        ,0					as	loc_Count
        ,null				as	svc_id
        ,sm.service_name	as	service_name
        ,null				as	loc_svc_id
        ,p.package_id		as	package_id
        ,p.package_name		as	package_name
        ,null				as	client_location
        from	package				p
        inner
        join	location_to_service	ls
        on		p.loc_svc_id		=	ls.loc_svc_id
        inner
        join	location			l
        on		ls.loc_id			=	l.loc_id
        left
        join	service				s
        on		ls.svc_id			=	s.svc_id
        left
        join	service_master		sm
        on		s.service_code		=	sm.service_code
        where	l.biz_id			=	#bizId#;
    </select>

    <select id="checkForApptUsingPackage" resultType="java.lang.Integer">
        select count(*)
        from appointment
        join material_to_package on material_to_package.package_id = appointment.package_id
        where appointment.package_id = #pkgId#
        and material_to_package.created_dt &lt;= appointment.created_dt
        and material_to_package.material_id=#matId#;
    </select>

    <select id="getActiveBusinessesByUserIdForCal" resultMap="bizList">
        select distinct business.biz_id,
        business.biz_name,
        business.display_counter,
        business.notify_by_pin
        from business inner
        join business_user on business_user.biz_id = business.biz_id and business_user.user_id = #userId#
        where business.is_active = 'Y' and business.is_deleted != 'Y' order by business.biz_name asc;
    </select>

    <select id="getActiveBusinessesForSMS" resultMap="bizList">
        select distinct business.biz_id,
        business.biz_name,
        business.display_counter,
        business.notify_by_pin
        from business inner
        join business_user on business_user.biz_id = business.biz_id
        where business.is_active = 'Y' and business.is_deleted != 'Y';
    </select>

    <select id="getLocationScvByBizIdCount" resultType="java.lang.Integer">
        select count(*)
        from location_to_service inner
        join service on service.svc_id = location_to_service.svc_id and location_to_service.is_active = 'Y'
        join location on location_to_service.loc_id = location.loc_id
        join service_master on service.service_code = service_master.service_code
        where service.biz_id = #bizId# and location.loc_id=#locId# and location.is_active!="D" ;
    </select>

    <select id="getCountries1" resultMap="countriesResult">
        select
        country_code,
        country_name
        from country
    </select>

    <select id="getServiceCount" resultType="java.lang.Integer">
        SELECT count(svc_id) FROM service s where service_code=#serviceCode#;
    </select>

    <select id="getCategoryCount" resultType="java.lang.Integer">
        SELECT count(category_code) FROM business_to_category where category_code=#categoryCode# and is_active = 'Y';
    </select>

    <select id="getLocSvcPackRes" resultMap="viewBusinessSummary">
        select l.loc_name,
        sm.service_name,
        group_concat(distinct "&lt;strong&gt;",CAST(p.package_name as CHAR),"&lt;/strong&gt;;",CAST(p.duration as CHAR),";$$" ,CAST(p.cost as CHAR)," ") as package_name,
        group_concat(distinct "",r.first_name," ",r.last_name," (",r.nick_name,")") as resource_name,
        group_concat(distinct "",CAST(pr.promotion_id as CHAR),"-",pr.promotion_name) as promotion_name
        from location l left join location_to_service ls on ls.loc_id = l.loc_id and ls.is_active = 'Y'
        join service s on s.svc_id=ls.svc_id and s.biz_id = l.biz_id
        join  service_master sm on sm.service_code = s.service_code
        join resource r on r.biz_id=l.biz_id and r.res_role_code != 'TECHNICIAN'
        join location_to_resource lr on lr.loc_id= l.loc_id and r.res_id=lr.res_id
        join resource_to_service rs on rs.loc_id= l.loc_id and r.res_id=rs.res_id and rs.svc_id = s.svc_id and rs.is_active = 'Y'
        join package p on ls.loc_svc_id=p.loc_svc_id
        left join promotion pr on pr.loc_id = l.loc_id and pr.svc_id = s.svc_id and pr.is_active = 'y'and pr.start_time &lt;= #curDate# and pr.end_time &gt;= #curDate#
        inner join business b on r.biz_id = b.biz_id
        where l.biz_id=#bizId#
        and
        (
        r.is_active = 'Y'
        or
        (b.is_active = 'N' and r.is_active = 'N')
        )
        and
        (
        lr.is_active = 'Y'
        or
        (b.is_active = 'N' and lr.is_active = 'N')
        )
        group by l.loc_id,sm.service_name ORDER By r.res_role_code desc;
    </select>

    <select id="getResourceDetailsByBizId" resultMap="viewBusinessSummary1">
        select
        group_concat(distinct cast(l.loc_id as char)) as loc_id,
        r.res_id,
        group_concat(distinct r.first_name," ",r.last_name," (",r.nick_name,")") as resource_name,
        group_concat(distinct l.loc_name,":",cast(l.loc_id as char)) as loc_name,
        group_concat(sm.service_name,":",cast(l.loc_id as char)) as service_name
        from resource r join location_to_resource lr on lr.res_id=r.res_id and lr.is_active = 'Y'
        join location l on l.loc_id = lr.loc_id
        join resource_to_service rs on rs.res_id = r.res_id and rs.loc_id = l.loc_id and rs.is_active = 'Y'
        join service s on rs.svc_id = s.svc_id
        join service_master sm on sm.service_code = s.service_code
        where r.biz_id=#bizId# group by r.res_id;
    </select>

    <select id="getServiceFromResSvc" resultType="java.lang.Integer">
        SELECT count(*) FROM resource_to_service where svc_id =#svcId# and is_active = 'Y';
    </select>

    <select id="getBusinessServiceByBizId" resultMap="businessSummaryResult3">
        select
        b.biz_id,
        um.user_id,
        b.biz_name,
        b.description,
        group_concat(distinct " ",CONCAT(cast(c.category_code as char),'-',c.category_name)) as category_name,
        b.contact_first_name,
        b.contact_last_name,
        b.contact_email,
        b.contact_phone,
        b.website,
        b.is_active,
        b.reservation_lead_time,
        b.cancellation_lead_time,
        b.is_searchable,
        b.dt_format_id,
        b.created_dt,
        b.created_by,
        b.modified_dt,
        b.modified_by,
        b.is_deleted,
        group_concat(distinct " ",CONCAT(cast(sm.category_code as char),'-',sm.service_name)) as service_name,
        b.allow_unregistered_users,
        b.notify_by_email,
        b.notify_by_SMS,
        b.display_counter,
        udf1_title,
        udf2_title,
        udf3_title,
        udf4_title,
        udf5_title,
        manage_inventory
        from business  b join business_user bu on bu.biz_id=b.biz_id
        join user_master um on um.user_id=bu.user_id
        join business_to_category bc on bc.biz_id=b.biz_id and bc.is_active = 'Y'
        join category c on c.category_code=bc.category_code
        join service s on s.biz_id=b.biz_id
        join service_master sm on sm.service_code=s.service_code
        where b.biz_id=#bizId# group by b.biz_id;
    </select>

    <select id="getBusinessesByUserIdByInventoryByLimitBySort" resultMap="businessInventoryResult">
        select $sqlRows$ business.biz_id as biz_id,
        business.biz_name as biz_name,
        group_concat(Distinct  " ",CAST(location.loc_name as CHAR),":",cast(location.loc_id as char)) as  loc_name
        from business inner join business_user on business.biz_id = business_user.biz_id
        left join location on location.biz_id=business_user.biz_id
        inner join location_to_service ls on ls.loc_id = location.loc_id and location.is_active='Y' and ls.is_active = 'Y'
        inner join package p on p.loc_svc_id = ls.loc_svc_id
        inner join resource_to_service rts on rts.svc_id = ls.svc_id and ls.loc_id = rts.loc_id and rts.is_active = 'Y'
        where business_user.user_id=#userId# and business.is_deleted = 'N'
        and business.is_active="Y" and business.manage_inventory=if(#isInventory# = 'Y', 'Y',business.manage_inventory) group by business_user.biz_id
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getBusinessName" resultMap="businessResultName">
        SELECT b.biz_id,b.biz_name FROM business b join business_user bu on bu.biz_id=b.biz_id where bu.user_id=#userId# and b.is_deleted='N';
    </select>

    <select id="getBusinessesByUserIdBySort" resultMap="businessesList">
        select  $sqlRows$
        b.biz_id,
        b.biz_name,
        b.description,
        group_concat(distinct " ",CAST(c.category_name as CHAR),"") as category_name,
        (CASE WHEN ISNULL(group_concat(" ",CAST(l.loc_id as CHAR),"")) then 0 else group_concat(" ",CAST(l.loc_id as CHAR),"") END) as locIdList,
        (CASE WHEN ISNULL(group_concat(" ",CAST(s.svc_id as CHAR),"")) then 0 else group_concat(" ",CAST(s.svc_id as CHAR),"") END) as svcIdList,
        b.contact_first_name,
        b.contact_last_name,
        b.contact_email,
        b.contact_phone,
        b.website,
        b.is_active,
        b.reservation_lead_time,
        b.cancellation_lead_time,
        b.is_searchable,
        b.dt_format_id,
        b.created_dt,
        b.created_by,
        b.modified_dt,
        b.modified_by,
        b.is_deleted,
        b.allow_unregistered_users,
        b.notify_by_email,
        b.notify_by_SMS,
        b.notify_by_PIN
        from business b inner join business_user bu on b.biz_id = bu.biz_id
        join business_to_category bc on bc.biz_id = b.biz_id and bc.is_active = 'Y'
        join category c on c.category_code = bc.category_code
        left join location l on l.biz_id=b.biz_id
        left join service s on s.biz_id=b.biz_id
        where bu.user_id = #userId# and b.is_deleted = 'N' group by b.biz_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getActivebusinessByUserId" resultMap="businessesList">
        select  $sqlRows$
        b.biz_id,
        b.biz_name,
        b.description,
        group_concat(distinct " ",CAST(c.category_name as CHAR),"") as category_name,
        (CASE WHEN ISNULL(group_concat(" ",CAST(l.loc_id as CHAR),"")) then 0 else group_concat(" ",CAST(l.loc_id as CHAR),"") END) as locIdList,
        (CASE WHEN ISNULL(group_concat(" ",CAST(s.svc_id as CHAR),"")) then 0 else group_concat(" ",CAST(s.svc_id as CHAR),"") END) as svcIdList,
        b.contact_first_name,
        b.contact_last_name,
        b.contact_email,
        b.contact_phone,
        b.website,
        b.is_active,
        b.reservation_lead_time,
        b.cancellation_lead_time,
        b.is_searchable,
        b.dt_format_id,
        b.created_dt,
        b.created_by,
        b.modified_dt,
        b.modified_by,
        b.is_deleted,
        b.allow_unregistered_users,
        b.notify_by_email,
        b.notify_by_SMS,
        b.notify_by_PIN
        from business b inner join business_user bu on b.biz_id = bu.biz_id
        join business_to_category bc on bc.biz_id = b.biz_id and bc.is_active = 'Y'
        join category c on c.category_code = bc.category_code
        left join location l on l.biz_id=b.biz_id
        left join service s on s.biz_id=b.biz_id
        where bu.user_id = #userId# and b.is_deleted = 'N' and b.is_active = 'Y' group by b.biz_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getAllBusinessesBySort" resultMap="businessesList">
        select $sqlRows$
        business.biz_id,
        business.biz_name,
        business.description,
        group_concat(distinct " ",CAST(c.category_name as CHAR),"") as category_name,
        (CASE WHEN ISNULL(group_concat(" ",CAST(l.loc_id as CHAR),"")) then 0 else group_concat(" ",CAST(l.loc_id as CHAR),"") END) as locIdList,
        (CASE WHEN ISNULL(group_concat(" ",CAST(s.svc_id as CHAR),"")) then 0 else group_concat(" ",CAST(s.svc_id as CHAR),"") END) as svcIdList,
        business.contact_first_name,
        business.contact_last_name,
        business.contact_email,
        business.contact_phone,
        business.website,
        business.is_active,
        business.reservation_lead_time,
        business.cancellation_lead_time,
        business.is_searchable,
        business.dt_format_id,
        business.created_dt,
        business.created_by,
        business.modified_dt,
        business.modified_by,
        business.is_deleted,
        business.allow_unregistered_users,
        business.notify_by_email,
        business.notify_by_SMS,
        business.notify_by_PIN
        from business inner join business_user on business.biz_id = business_user.biz_id
        join business_to_category bc on bc.biz_id = business.biz_id and bc.is_active = 'Y'
        join category c on c.category_code = bc.category_code
        left join location l on l.biz_id=business.biz_id
        left join service s on s.biz_id=business.biz_id
        where business.is_deleted = 'N' and business.is_active="Y" group by business.biz_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getAllDeletedBusinessesBySort" resultMap="deletedBusinessesList">
        select $sqlRows$ business.biz_id,business.biz_name,business.contact_first_name,business.contact_last_name,count(location.loc_id) as loc_count FROM location
        right join business on business.biz_id=location.biz_id
        where business.is_deleted='Y' group by business.biz_id order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <update id="activateDeletedBusiness">
        update business set
        is_deleted='N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id=#bizId#;
    </update>

    <update id="inactivateDeletedBusiness">
        update business set
        is_active='N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id=#bizId#;
    </update>

    <select id="getListOfLocationsAddedAfterBizConfirmationByLimitBySort" resultMap="locationResult">
        select $sqlRows$
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId# and location.is_active = "T" order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getLocationsByLimitBySort" resultMap="locationResult">
        select $sqlRows$
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId# and location.is_active!='D' order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getLocationsByBizId" resultMap="locationResult">
        select $sqlRows$
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getLocationName" resultMap="locationResult">
        SELECT * FROM location join business on business.biz_id=location.biz_id
        join business_user on business.biz_id=business_user.biz_id
        left join timezone on location.timezone_code = timezone.timezone_code
        where business_user.user_id=#userId# and business.is_deleted='N' and location.is_active!='D';
    </select>

    <select id="getActiveAndTempLocationListByLimitBysort" resultMap="locationResult">
        select $sqlRows$
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_active in ("Y","T") order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getActiveLocationsByLimitBysort" resultMap="locationResult">
        select $sqlRows$
        location.loc_id,
        location.biz_id,
        location.loc_name,
        location.description,
        location.address_line1,
        location.address_line2,
        location.city,
        location.state_code,
        location.zip_code,
        location.country_code,
        location.currency_code,
        location.timezone_code,
        timezone.timezone,
        location.phone_number1,
        location.phone_number2,
        location.fax_number,
        location.is_headquarters,
        location.is_active,
        location.created_dt,
        location.custom_message,
        location.created_by,
        location.modified_dt,
        location.modified_by,
        location.lat,
        location.lng,
        location.auto_approve_request,
        location.pending_appt_overlap,
        location.appt_granularity,
        location.tax
        from location
        left join timezone on location.timezone_code = timezone.timezone_code
        where location.biz_id = #bizId#
        and location.is_active = 'Y' order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getResourcesByLimitBySort" resultMap="resourceResult">
        select $sqlRows$
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where biz_id = #bizId# and is_active != 'D'  order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getResourcesByBizId" resultMap="resourceResult">
        select $sqlRows$
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where biz_id = #bizId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getResourceName" resultMap="resourceResult">
        SELECT * FROM resource
        join business on business.biz_id=resource.biz_id
        join business_user on business.biz_id=business_user.biz_id
        join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where business_user.user_id=#userId# and business.is_deleted='N' and resource.is_active='Y';
    </select>

    <select id="getActiveResourcesByLimitBySort" resultMap="resourceResult">
        select $sqlRows$
        res_id,
        biz_id,
        first_name,
        last_name,
        nick_name,
        resource.description,
        address_line1,
        address_line2,
        city,
        state_code,
        zip_code,
        country_code,
        email,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        is_onsked_user,
        restype.res_role_name,
        resource_level
        from resource join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where biz_id = #bizId#
        and is_active = 'Y' order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getPromotionDetails" resultMap="promotionDetailsResult">
        <!-- SELECT p.promotion_id,
			p.promotion_name,
			p.promotion_code,
			p.start_time,
			p.end_time,
			p.promotion_type_id,
			p.description,
			l.loc_name,
			sm.service_name,
			pkg.package_name,
			b.biz_name,
			p.is_active,
			dt.discount_type,
        	discount_value,
          	allowed_usage,
          	current_usage,
          	user_limit_usage
		FROM promotion p join location l on l.loc_id=p.loc_id
		join service s on s.svc_id=p.svc_id
		join service_master sm on sm.service_code=s.service_code
		join (select group_concat(" ",CAST(package_name as CHAR),"") as package_name from package where package_id in ($packageId$)) as pkg
		join business b on b.biz_id=l.biz_id
		join discount_type dt on dt.discount_id = p.discount_type
		where p.promotion_id=#promotionId#; -->
        SELECT p.promotion_id,
        p.promotion_name,
        p.promotion_code,
        p.start_time,
        p.end_time,
        p.promotion_type_id,
        p.description,
        p.loc_id,
        p.svc_id,
        p.packages,
        p.biz_id,
        b.biz_name,
        p.is_active,
        dt.discount_type,
        discount_value,
        allowed_usage,
        current_usage,
        user_limit_usage
        FROM promotion p join business b on b.biz_id=p.biz_id
        join discount_type dt on dt.discount_id = p.discount_type
        where p.promotion_id = #promotionId# and p.biz_id = #bizId#;
    </select>
    <select id="listPurchaseDetails" resultMap="basicPurchaseDetails1">
        select $sqlRows$
        biz_id,
        loc_id,
        purchase_id,
        purchase_date,
        purchase_order
        from purchase_header where biz_id=#bizId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getMaterialList" resultMap="viewPurchaseDetails1">
        select
        material_master.material_name,
        material_master.manufacturer,
        purchase_header. remark,
        purchase_details.batch_no,
        purchase_details.qty,
        purchase_details.Rate,
        purchase_details.tax_amnt,
        purchase_details.amount,
        purchase_details. remark
        from purchase_header join purchase_details  on purchase_header.purchase_id=purchase_details.purchase_id join material_master  on material_master.material_id= purchase_details.mat_id
        where purchase_header.biz_id=#bizId# and purchase_details.purchase_id=#pId#;
    </select>

    <update id="updateActivebusinessByUserId">
        update business set
        notify_by_SMS=#flagSMS#,
        notify_by_PIN=#flagPIN#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where biz_id=#bizId#;
    </update>

    <update id="updatePurchaseMaterial" >
        update purchase_details, material_master set
        batch_no = #batchNumber#,
        qty = #qty#,
        Rate =#rate#,
        tax_amnt = #taxAmnt#,
        amount=#amnt#,
        remark = #remark#,
        material_master.material_name=#matName#,
        material_master.manufacturer= #manufacturer#
        where material_master.material_id=purchase_details.mat_id and purchase_id = #purchaseId#;
    </update>
    <select id="checkInvoice" resultType="java.lang.Integer">
        select count(*) from purchase_header where biz_id=#bizId# and loc_id=#locId# and purchase_order=#purchaseOrder#;
    </select>
    <select id="getResourceByOnskedUserId" resultMap="StaffResult">
        select r.res_id ,r.first_name,r.last_name,r.nick_name
        from business b
        join business_user bu on b.biz_id=bu.biz_id
        join resource r on r.biz_id=b.biz_id
        where bu.user_id=#onskedUserId#;
    </select>

    <select id="getBusinessDetailsByBizId" resultMap="businessDetailsByBizId">
        select biz_name,notify_by_SMS,notify_by_PIN, display_counter from business where biz_id=#bizId#;
    </select>

    <select id="getUniqueLocationToServiceByLimit" resultMap="locationToService">
        SELECT $sqlRows$ loc_svc_id,loc_id,svc_id,client_location,service_name,loc_name,cost,duration,created_dt,created_by,modified_dt,modified_by  FROM (select
        location_to_service.loc_svc_id as loc_svc_id,
        location_to_service.loc_id as loc_id,
        location_to_service.svc_id as svc_id,
        location_to_service.client_location as client_location,
        location_to_service.created_dt as created_dt,
        location_to_service.created_by as created_by,
        location_to_service.modified_dt as modified_dt,
        location_to_service.modified_by as modified_by,
        location_to_service.cost as cost,
        location_to_service.duration as duration,
        service.service_code as service_code,
        group_concat(service_master.service_name) as service_name,
        location.loc_name as loc_name
        from location_to_service inner join location on location_to_service.loc_id=location.loc_id and location.is_active!='D' and location_to_service.is_active = 'Y'
        inner join service on service.svc_id=location_to_service.svc_id
        inner join service_master on service.service_code=service_master.service_code where service.biz_id = #bizId#
        GROUP BY loc_id  ORDER BY loc_svc_id ASC ) as a GROUP BY loc_id,svc_id  limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getServiceFromLocSvc" resultType="java.lang.Integer">
        SELECT count(*) FROM location_to_service where svc_id =#svcId# and is_active = 'Y';
    </select>

    <select id="getMaterialsListByLocId" resultType="java.lang.Integer">
        select count(*) from material_stock where loc_id =#locId#;
    </select>

    <select id="getMaterialsListByBizIdBySearch" resultMap="matByMatId">
        select $sqlRows$ material_id, biz_id, material_name, manufacturer, disposable, cost
        from material_master
        where  material_name like #matName# and manufacturer like #manufacturer# and  biz_id = #bizId# and disposable = if(#disposable# = 'N', 'N',if(#disposable# = 'Y','Y',material_master.disposable))order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getMatIdsByLocIdBySearch" resultMap="getmats">
        select $sqlRows$ material_id,
        material_name,manufacturer
        from material_master
        inner join location on location.biz_id = material_master.biz_id
        where location.loc_id = #locId# and material_name like #matName# and manufacturer like #manufacturer#
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getAppointmentCountByClientIdAndBizId" resultType="java.lang.Integer">
        select count(*) from  appointment where biz_id = #bizId# and client_id=#clientId# and status_code in ('c','p');
    </select>

    <update id="disableClient">
        update client set
        is_active = 'N',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where client_id = #clientId#;
    </update>

    <delete id="deleteClient">
        delete from client
        where client_id = #clientId#;
    </delete>

    <update id="enableClient">
        update client set
        is_active = 'Y',
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where client_id = #clientId#;
    </update>

    <select id="getPackageDetails" resultMap="packageDetails">
        select group_concat(" ",CAST(package_name as CHAR),"") as package_name from package where package_id in ($pkgId$);
    </select>

    <select id="getServiceName" resultMap="serviceDetails">
        select group_concat(" ",CAST(service_name as CHAR),"") as service_name from service join service_master on service.service_code = service_master.service_code where svc_id in ($svcId$);
    </select>

    <select id="getlocationNameForPromotion" resultMap="locationDetails">
        select group_concat(" ",CAST(loc_name as CHAR),"") as loc_name from location where loc_id in ($locId$);
    </select>

    <select id="getUniqueLocationToServiceByLocIdBizIdOnResource" resultMap="serviceMasterResult1">
        select
        sm.service_code,
        category_name,
        group_concat(distinct cast(sm.service_name  as char(100)),".",cast(s.svc_id  as char(100))) as service_name,
        c.category_code,
        sm.description,
        c.is_active
        from service_master sm inner join service s on s.service_code= sm.service_code
        inner join location_to_service ls on s.svc_id=ls.svc_id and ls.is_active = 'Y'
        inner join resource_to_service rs on rs.svc_id=s.svc_id and rs.loc_id=ls.loc_id and rs.is_active = 'Y'
        inner join package p on p.loc_svc_id = ls.loc_svc_id
        inner join location l on ls.loc_id=l.loc_id and ls.loc_id=#locId#
        inner join category c on sm.category_code=c.category_code
        where sm.service_code=s.service_code  GROUP BY c.category_code;
    </select>


    <select id="getMatchingLocationToServiceByLocIdBizIdOnResource" resultMap="serviceMasterResult1">
        select
        sm.service_code,
        category_name,
        group_concat(distinct cast(sm.service_name  as char(100)),".",cast(s.svc_id  as char(100))) as service_name,
        c.category_code,
        sm.description,
        c.is_active
        from service_master sm inner join service s on s.service_code= sm.service_code
        inner join location_to_service ls on s.svc_id=ls.svc_id and ls.is_active = 'Y'
        inner join resource_to_service rs on rs.svc_id=s.svc_id and rs.loc_id=ls.loc_id and rs.is_active = 'Y'
        inner join package p on p.loc_svc_id = ls.loc_svc_id
        inner join location l on ls.loc_id=l.loc_id and (1 = CASE (IF(#locId# = '0', '0',#locId#)) WHEN '0' THEN 1 ELSE (CASE WHEN ((ls.loc_id in ($locId$))) THEN 1 END) END) and l.biz_id = #bizId#
        inner join category c on sm.category_code=c.category_code
        where sm.service_code=s.service_code  GROUP BY c.category_code;
    </select>

    <select id="getServiveListFromLocationList" resultMap="serviceListFromLocationListResult">
        select sm.service_code,
        category_name,
        sm.service_name,
        s.svc_id,
        c.category_code,
        sm.description,
        c.is_active
        from service_master sm inner join service s on s.service_code= sm.service_code
        inner join location_to_service ls on s.svc_id=ls.svc_id and ls.is_active = 'Y'
        inner join resource_to_service rs on rs.svc_id=s.svc_id and rs.loc_id=ls.loc_id and rs.is_active = 'Y'
        inner join package p on p.loc_svc_id = ls.loc_svc_id
        inner join location l on ls.loc_id=l.loc_id and ls.loc_id in($locIdList$)
        inner join category c on sm.category_code=c.category_code
        where sm.service_code=s.service_code group by s.svc_id;
    </select>

    <select id="getResourcesForLocByBizId" resultMap="resourceLocation">
        select
        r.res_id,
        group_concat(distinct cast(l.loc_id  as char(100))) as loc_id,
        r.nick_name,
        group_concat(distinct cast(l.loc_id  as char(100)),";",cast(l.loc_name  as char(100))) as loc_name
        from resource r join location_to_resource lr on lr.res_id=r.res_id and lr.is_active = 'Y'
        join  location l on l.loc_id = lr.loc_id where r.biz_id=#bizId# group by r.res_id;
    </select>
    <select id="getResourceHours2" resultMap="resourceHoursResult1">
        select
        resH.res_id,
        r.first_name,
        r.last_name,
        r.nick_name,
        group_concat(cast(resH.day_of_week as char(10))) as day_of_week,
        resH.is_working,
        resH.loc_id,
        SUBSTRING(CONCAT(Date(now()),' ',resH.start_time),12) as start_time,
        SUBSTRING(CONCAT(Date(now()),' ',resH.end_time),12) as end_time,
        resH.created_dt,
        resH.created_by,
        resH.modified_dt,
        resH.modified_by
        from resource_hours resH, resource r where resH.res_id = r.res_id and resH.res_id = #resId# and resH.loc_id = #locId# group by resH.start_time, resH.end_time order by resH.is_working desc;
    </select>

    <select id="getLocationHoursByBizId1" resultMap="locationHoursResult">
        select
        location_hours.loc_id,
        group_concat(cast(location_hours.day_of_week as char(10))) as day_of_week,
        location_hours.is_open,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.open_time),12) as open_time,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.close_time),12) as close_time,
        location_hours.created_dt,
        location_hours.created_by,
        location_hours.modified_dt,
        location_hours.modified_by
        from location_hours inner join location on location.loc_id = location_hours.loc_id
        where location.loc_id in($locId$) group by location_hours.open_time, location_hours.close_time order by is_open desc;
    </select>

    <select id = "getAppointmentRatingByCategoryCode" resultMap = "rating">
        select
        (CASE WHEN ISNULL(avg(rating)) then "0.0000" else avg(rating) END) as rating ,
        business.biz_id as biz_id,
        business.biz_name as biz_name,
        business.description as description,
        business.category_code as category_code,
        business.contact_first_name as contact_first_name,
        business.contact_last_name as contact_last_name,
        business.contact_email as contact_email,
        business.contact_phone as contact_phone,
        business.website as website,
        business.is_active as is_active,
        business.is_searchable as is_searchable,
        business.created_dt as created_dt,
        business.created_by as created_by,
        business.modified_dt as modified_dt,
        business.modified_by as modified_by,
        location.loc_id as loc_id,
        location.city as city,
        location.loc_name as loc_name,
        location.zip_code as zip_code,
        location.address_line1 as address_line1,
        location.address_line2 as address_line2,
        location.is_headquarters as is_headquarters
        from appointment_rating as ra
        right join appointment as a on ra.appt_id=a.appt_id
        right join business on a.biz_id=business.biz_id
        left join business_to_category on business_to_category.biz_id = business.biz_id and business_to_category.is_active = 'Y'
        left join location on business.biz_id = location.biz_id and location.is_headquarters = 'y'
        left join location_to_resource on location_to_resource.loc_id = location.loc_id  and a.loc_id=location.loc_id and location_to_resource.is_active = 'Y'
        and business.allow_unregistered_users = 'Y' group by business.biz_id order by business.biz_name asc;
    </select>

    <select id="getPackageDetailsOfBusinessByLocId" resultMap="package3">
        select
        l.loc_id,
        s.svc_id,
        l.loc_name,
        sm.service_name as service_name,
        resource.nick_name,
        resource.res_id,
        group_concat(distinct "",CAST(p.package_name as CHAR),"(",CAST(p.duration as CHAR)," mins) - $$" ,CAST(p.cost as CHAR)," ") as package_name
        from location_to_service ls
        left join resource_to_service rs on ls.svc_id = rs.svc_id and ls.is_active = 'Y' and rs.is_active = 'Y'
        left join location l on ls.loc_id = l.loc_id
        left join service s on ls.svc_id = s.svc_id
        left join service_master sm on sm.service_code=s.service_code
        left join resource on resource.biz_id = l.biz_id
        left join location_to_resource on location_to_resource.loc_id = l.loc_id and location_to_resource.is_active = 'Y'
        left join package p on p.loc_svc_id=ls.loc_svc_id where l.loc_id= #locId#  and p.loc_svc_id = ls.loc_svc_id
        group by sm.service_name order by p.package_name ASC;
    </select>

    <select id="getLocationHours1" resultMap="locationHoursResult1">
        select
        location_hours.loc_id as loc_id,
        group_concat(CAST(location_hours.day_of_week as CHAR)) as day_of_week,
        location_hours.is_open as is_open,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.open_time),12) as open_time,
        SUBSTRING(CONCAT(Date(now()),' ',location_hours.close_time),12) as close_time,
        location_hours.created_dt as created_dt,
        location_hours.created_by as created_by,
        location.lat as lat,
        location.lng as lng,
        location_hours.modified_dt as modified_dt,
        location_hours.modified_by as modified_by
        from location_hours inner join location on location.loc_id = location_hours.loc_id
        where location_hours.loc_id = #locId# group by location_hours.open_time, location_hours.close_time;
    </select>

    <select id="getLocationListByBizId" resultMap="locationHoursResultByBizID">

        SELECT
        l.biz_id as biz_id,
        l.loc_id as loc_id,
        l.loc_name as loc_name ,
        l.address_line1 as address_line1,
        l.description as description,
        l.city as city,
        l.zip_code as zip_code,
        l.phone_number1 as phone_number1,
        (CASE WHEN ISNULL(AVG(ar.rating)) then 0 else (AVG(ar.rating)) END) as rating
        FROM location l left join appointment a on l.loc_id=a.loc_id and l.biz_id=a.biz_id left join
        appointment_rating ar on a.appt_id=ar.appt_id where l.biz_id = #bizId#  group by l.loc_id, l.loc_name, l.address_line1, l.city ,l.description,l.zip_code,l.phone_number1;



    </select>

    <select id="getLocSvcPackRes1" resultMap="viewBusinessSummary">
        select
        l.loc_id,
        s.svc_id,
        ls.loc_svc_id as loc_svc_id,
        l.loc_name,
        sm.service_name,
        group_concat(distinct "",CAST(  p.package_name as CHAR  )," (",CAST(p.duration as CHAR)," mins) - $$" ,CAST(p.cost as CHAR     )," ") as package_name,
        (CASE WHEN ISNULL(group_concat(distinct "",r.first_name," ",r.last_name," (",r.nick_name,")")) then "No Staff Available" else group_concat(distinct "",r.first_name," ",r.last_name," (",r.nick_name,")") END) as resource_name,
        group_concat(distinct "",CAST(pr.promotion_id as CHAR),"-",pr.promotion_name) as promotion_name
        from location l left join location_to_service ls on ls.loc_id = l.loc_id and ls.is_active = 'Y'
        join service s on s.svc_id=ls.svc_id and s.biz_id = l.biz_id
        join  service_master sm on sm.service_code = s.service_code
        join location_to_resource lr on lr.loc_id= l.loc_id and lr.is_active = 'Y'
        join resource_to_service rs on rs.loc_id= l.loc_id and rs.is_active = 'Y'
        join package p on ls.loc_svc_id=p.loc_svc_id
        left join resource r on r.biz_id=l.biz_id and r.res_id=lr.res_id and r.res_id=rs.res_id and rs.svc_id = s.svc_id
        left join promotion pr on pr.loc_id = l.loc_id and pr.svc_id = s.svc_id and pr.is_active = 'y' and pr.start_time &lt;= #curDate# and pr.end_time &gt;= #curDate#
        where l.biz_id= #bizId#  and l.loc_id = #locId# group by l.loc_id,sm.service_name ;
    </select>

    <select id="getPatientListByLimitBySort" resultMap="patientResult">
        select $sqlRows$
        patient_id,
        patient.client_id,
        client.first_name,
        client.last_name,
        ssn_number,
        patient.is_active
        from patient inner join client on client.client_id = patient.client_id
        join business on business.biz_id = client.biz_id
        join business_user on business_user.biz_id = business.biz_id
        where business_user.user_id = #userId# and patient.is_active = 'Y' order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getPatientRecordNum" resultType="java.lang.Integer">
        select if(max(record_num) IS NULL, 1, max(record_num)+1) Maxval from patient where biz_id = #bizId#;
    </select>

    <insert id="addPatient">
        insert into patient(
        patient_id,
        client_id,
        biz_id,
        record_num,
        ssn_number,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #clientId#,
        #bizId#,
        #recordNum#,
        #socialSecurityNumber#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)
        <selectKey resultType="java.lang.Integer" keyProperty="patientId">
            select last_insert_id() as patient_id
        </selectKey>
    </insert>

    <select id="getClientListNotInPatientByBizId" resultMap="clientInfo">
        select client_id,
        email,
        t1.first_name,
        t1.last_name,
        t1.cell_phone
        from client as t1
        left join business_user as t3 on t3.biz_id = t1.biz_id
        where t3.user_id = #userId# and t1.biz_id = #bizId# and t1.is_active = 'Y' and client_id not in (select client_id from patient where is_active = 'Y');
    </select>

    <select id="getClientListNotInPatient" resultMap="clientInfo">
        select client_id,
        email,
        t1.first_name,
        t1.last_name,
        t1.cell_phone
        from client as t1
        left join business_user as t3 on t3.biz_id = t1.biz_id
        where t3.user_id = #userId# and t1.is_active = 'Y' and client_id not in (select client_id from patient where is_active = 'Y');
    </select>

    <insert id="addPatientIllness">
        insert into patient_illness(
        patient_illness_id,
        medical_code,
        patient_id,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #medicalCode#,
        #patientId#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)
    </insert>

    <insert id="addBusinessEnhancementLog">
        insert into business_enhancement_log(
        biz_enhan_id,
        biz_enhan_name,
        biz_id,
        user_id,
        modified_dt,
        flag)
        values(
        null,
        #bizEnhanName#,
        #bizId#,
        #userId#,
        UTC_TIMESTAMP(),
        #flag#)
    </insert>

    <select id="getPatientIllnessDetailsByPatientId" resultMap="patientIllnessResult">
        select patient_illness_id,
        pi.medical_code,
        patient_id,
        description,
        pi.is_active
        from patient_illness as pi join medical_code as mc on mc.medical_code = pi.medical_code where patient_id = #patient_id# and pi.is_active='Y';
    </select>

    <select id="getPrevPatientIllnessDetailsByPatientId" resultMap="patientIllnessResult">
        select
        patient_illness_id,
        pi.medical_code,
        patient_id,
        description,
        pi.is_active
        from patient_illness as pi join medical_code as mc on mc.medical_code = pi.medical_code where patient_id = #patientId# and pi.is_active='N' and pi.medical_code not in (select
        pi1.medical_code
        from patient_illness as pi1 join medical_code as mc on mc.medical_code = pi1.medical_code where patient_id = #patientId# and pi1.is_active='Y')group by pi.medical_code
    </select>

    <update id="updatePatientsIllness">
        update patient_illness set
        illness_description = #illnessDescription#,
        modified_dt = UTC_TIMESTAMP()
        where patient_illness_id = #patientIllnessId#
    </update>

    <delete id="deletePatientIllness">
        update patient_illness set
        is_active = 'N' where patient_illness_id in ($patientIllnessId$);
    </delete>

    <delete id="deletePatientInsurance">
        delete from patient_insurance where patient_insurance_id = #patientInsuranceId#;
    </delete>

    <select id="getPatientInsuranceListByLimitBySort" resultMap="patientInsuranceResult">
        select $sqlRows$
        patient_insurance_id,
        patient_id,
        insurance_company_name,
        policy_number,
        insurance_id,
        group_id,
        effective_dt,
        country_code,
        state_code,
        is_active,
        copay,
        created_dt,
        created_by,
        modified_dt,
        modified_by from patient_insurance where patient_id = #patientId# and is_active = 'Y' order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getClientInsuranceListByLimitBySort" resultMap="clientInsuranceResult">
        select $sqlRows$
        client_insurance_id,
        client_id,
        biz_id,
        i_referral_id,
        i_company_name,
        i_cell_phone,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from client_insurance where client_id = #clientId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getClientPhysicianListByLimitBySort" resultMap="clientPhysicianResult">
        select $sqlRows$
        client_physician_id,
        client_id,
        biz_id,
        p_first_name,
        p_last_name,
        p_email,
        p_cell_phone,
        p_hospital_name,
        created_dt,
        created_by,
        modified_dt,
        modified_by
        from client_physician where client_id = #clientId# order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <insert id="addPatientInsurance">
        insert into patient_insurance(
        patient_insurance_id,
        patient_id,
        insurance_company_name,
        ins_comp_email,
        ins_comp_phone,
        policy_number,
        insurance_id,
        group_id,
        effective_dt,
        expiry_dt,
        country_code,
        state_code,
        copay,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by,
        verified_by,
        verified_dt)
        values(
        null,
        #patientId#,
        #insuranceCompanyName#,
        #insCompEmail#,
        #insCompPhone#,
        #policyNumber#,
        #insuranceId#,
        #groupId#,
        #effectiveDateYYYYMMdd#,
        #expiryDateYYYYMMdd#,
        #countryCode#,
        #stateCode#,
        #copay#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#,
        #verifiedBy#,
        UTC_TIMESTAMP())
    </insert>

    <insert id="addClientInsurance">
        insert into client_insurance(
        client_insurance_id,
        client_id,
        biz_id,
        i_referral_id,
        i_company_name,
        i_cell_phone,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #clientId#,
        #bizId#,
        #insuranceReferralId#,
        #insuranceCompanyName#,
        #insuranceCellPhone#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)
    </insert>

    <insert id="addClientPhysician">

        insert into client_physician(
        client_physician_id,
        client_id,
        biz_id,
        p_first_name,
        p_last_name,
        p_email,
        p_cell_phone,
        p_hospital_name,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #clientId#,
        #bizId#,
        #physicianFirstName#,
        #physicianLastName#,
        #physicianEmail#,
        #physicianCellPhone#,
        #physicianHospital#,
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)

    </insert>

    <select id="getPatientByPatientId" resultMap="patientresult">
        select
        patient_id,
        patient.client_id,
        ssn_number,
        patient.is_active,
        client.address_line1,
        client.address_line2,
        client.first_name,
        client.last_name,
        client.email,
        date_format(client.date_of_birth,'%d-%b-%Y') as date_of_birth,
        record_num,
        client.gender,
        client.cell_phone
        from patient join client on client.client_id = patient.client_id where patient_id = #patientId#  and patient.is_active = 'Y';
    </select>

    <select id="getClientListByUserId" resultMap="clientInfo">
        select client_id,
        email,
        t1.first_name,
        t1.last_name,
        t1.cell_phone
        from client as t1
        left join business_user as t3 on t3.biz_id = t1.biz_id
        where t3.user_id = #userId# and t1.is_active = 'Y'
    </select>

    <select id="getPatientByApptId" resultMap="patient">
        select
        patient_id,
        p.client_id,
        ssn_number,
        p.is_active
        from appointment a join  patient as p on a.client_id = p.client_id where a.appt_id = #apptId# and p.is_active = 'Y';
    </select>

    <select id="getPatientByClientId" resultMap="patient">
        select
        patient_id,
        client_id,
        ssn_number,
        patient.is_active
        from patient where client_id = #clientId# and is_active = 'Y';
    </select>

    <update id="updatePatient">
        update patient set
        client_id = #clientId#,
        ssn_number = #socialSecurityNumber#,
        modified_dt = UTC_TIMESTAMP()
        where patient_id = #patientId# ;
    </update>

    <select id="getPatientBySsnnumber" resultType="java.lang.Integer">
        select count(*) from patient where ssn_number = #socialSecurityNumber# and is_active="Y";
    </select>

    <select id="getPatientInsuranceByPatientInsId" resultMap="patientInsuranceResult1">
        select
        patient_insurance_id,
        pi.patient_id,
        insurance_company_name,
        ins_comp_email,
        ins_comp_phone,
        policy_number,
        insurance_id,
        group_id,
        date_format(effective_dt,'%m/%d/%Y') as effective_dt,
        date_format(expiry_dt,'%m/%d/%Y') as expiry_dt,
        pi.country_code,
        pi.state_code,
        pi.is_active,
        copay,
        pi.created_dt,
        pi.created_by,
        pi.modified_dt,
        pi.modified_by,
        verified_dt,
        verified_by,
        c.address_line1,
        c.address_line2 from patient_insurance as pi join patient p on p.patient_id = pi.patient_id
        join client as c on p.client_id = c.client_id where pi.is_active = "Y" and patient_insurance_id = #patientInsuranceId#
    </select>

    <select id="getClientInsuranceByClientInsId" resultMap="clientInsuranceResult1">
        select
        ci.client_insurance_id,
        ci.client_id,
        ci.biz_id,
        ci.i_referral_id,
        ci.i_company_name,
        ci.i_cell_phone,
        ci.created_dt,
        ci.created_by,
        ci.modified_dt,
        ci.modified_by  from client_insurance as ci
        join client as c on ci.client_id = c.client_id where client_insurance_id = #clientInsuranceId#
    </select>

    <select id="getClientPhysicianByClientPhyId" resultMap="clientPhysicianResult1">
        select
        cp.client_physician_id,
        cp.client_id,
        cp.biz_id,
        cp.p_first_name,
        cp.p_last_name,
        cp.p_email,
        cp.p_cell_phone,
        cp.p_hospital_name,
        cp.created_dt,
        cp.created_by,
        cp.modified_dt,
        cp.modified_by  from client_physician as cp
        join client as c on cp.client_id = c.client_id where client_physician_id = #clientPhysicianId#
    </select>

    <update id="updatePatientInsurance">
        update patient_insurance set
        patient_id = #patientId#,
        insurance_company_name = #insuranceCompanyName#,
        ins_comp_email = #insCompEmail#,
        ins_comp_phone = #insCompPhone#,
        policy_number = #policyNumber#,
        effective_dt = #effectiveDateYYYYMMdd#,
        expiry_dt = #expiryDateYYYYMMdd#,
        country_code = #countryCode#,
        state_code = #stateCode#,
        copay = #copay#,
        is_active = 'Y',
        modified_dt = UTC_TIMESTAMP(),
        verified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#,
        verified_by = #verifiedBy# where patient_insurance_id = #patientInsuranceId#
    </update>

    <update id="updateClientInsurance">
        update client_insurance set
        client_id = #clientId#,
        biz_id = #bizId#,
        i_referral_id = #insuranceReferralId#,
        i_company_name = #insuranceCompanyName#,
        i_cell_phone = #insuranceCellPhone#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where client_insurance_id = #clientInsuranceId#
    </update>

    <update id="updateClientPhysician">
        update client_physician set
        client_id = #clientId#,
        biz_id = #bizId#,
        p_first_name = #physicianFirstName#,
        p_last_name = #physicianLastName#,
        p_email = #physicianEmail#,
        p_cell_phone=#physicianCellPhone#,
        p_hospital_name=#physicianHospital#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where client_physician_id = #clientPhysicianId#
    </update>

    <insert id="addMasterIllness">
        insert into master_illness(
        illness_id,
        illness_name,
        is_active,
        created_dt,
        created_by,
        modified_dt,
        modified_by)
        values(
        null,
        #illnessName#,
        'Y',
        UTC_TIMESTAMP(),
        #createdBy#,
        UTC_TIMESTAMP(),
        #modifiedBy#)
    </insert>

    <select id="getMasterIllnessList" resultMap="masterIllnessResult">
        select  medical_code,
        description,
        is_active
        from medical_code order by medical_code;
    </select>

    <select id="getPatientIllnessDetailsNotInCurNPrevByPatientId" resultMap="masterIllnessResult">
        SELECT medical_code,
        description,
        is_active from medical_code
        where medical_code not in (select medical_code from patient_illness where patient_id = #patientId#) and is_active = 'Y' order by medical_code;
    </select>

    <select id="getIllnessByName" resultType="java.lang.Integer">
        select count(*) from master_illness where illness_name = #illnessName#;
    </select>

    <select id="getActivePatientIllnessByMedicalCode" resultType="java.lang.Integer">
        select count(*) from patient_illness where medical_code = #medicalCode# and patient_id = #patientId# and is_active="Y";
    </select>

    <update id="updateClient">
        update client set
        address_line1 = #addressLine1#,
        address_line2 = #addressLine2#,
        email = #email#,
        cell_phone = #cellPhone#,
        date_of_birth = #dateOfBirth#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where client_id = #clientId#
    </update>

    <select id="getPatientInfoForBizCal" resultMap="patientInfo">
        SELECT c.client_id,patient_id,email,first_name,last_name FROM client as c
        join patient as p on c.client_id = p.client_id where p.biz_id = #bizId# and c.is_active = 'Y' and p.is_active = 'Y' group by patient_id;
    </select>

    <select id="getPatientInsCnt" resultType="java.lang.Integer">
        SELECT count(*) FROM patient_insurance as pi where patient_id = #patientId# and pi.is_active = "Y";
    </select>

    <select id="paymentDiscount" resultMap="apptPayment">
        select distinct promotion.discount_type as discount_type,promotion.discount_value as discount_value
        from promotion inner join promotion_email on promotion.promotion_id = promotion_email.promotion_id
        join user_master on promotion_email.email_id = user_master.email
        where promotion_code=#promoCode#
        and if(promotion.promotion_type_id = 1,if(now() between start_time and end_time,true,false), if(#startTime# between start_time and end_time,true,false))
        and if((SELECT FIND_IN_SET(#pkgId#,packages) )>0,true,false)
        and if((SELECT FIND_IN_SET(#locId#,loc_id) )>0,true,false)
        and if((SELECT FIND_IN_SET(#svcId#,svc_id) )>0,true,false);

    </select>

    <select id="paymentDiscountUsingClientId" resultMap="apptPayment">
        select distinct promotion.discount_type as discount_type,promotion.discount_value as discount_value
        from promotion inner join promotion_email on promotion.promotion_id = promotion_email.promotion_id
        join client on promotion_email.email_id = client.email
        where promotion_code=#promoCode#
        and if(promotion.promotion_type_id = 1,if(now() between start_time and end_time,true,false), if(#startTime# between start_time and end_time,true,false))
        and if((SELECT FIND_IN_SET(#pkgId#,packages) )>0,true,false)
        and if((SELECT FIND_IN_SET(#locId#,loc_id) )>0,true,false)
        and if((SELECT FIND_IN_SET(#svcId#,svc_id) )>0,true,false);
    </select>

    <select id="getDuplicateLocCount" resultType="java.lang.Integer">
        SELECT count(loc_name) from location where loc_name = #locName# and biz_id = #bizId#;
    </select>

    <select id="getBizUserPaymentCred" resultMap="bizUserPaymentCred">
        select paypal_hosted_button_id, authorize_api_login_id, authorize_transaction_key from business
        where biz_id = #bizId#;
    </select>

    <insert id="addGroupPackage">
        insert into group_package(
        group_pkg_id,
        group_pkg_name,
        group_pkg_description,
        group_pkg_cost,
        biz_id,
        loc_id,
        expiry_duration,
        group_pkg_type_id)
        values(
        null,
        #groupPkgName#,
        #groupPkgDesc#,
        #groupPkgCost#,
        #bizId#,
        #locId#,
        #expiryDuration#,
        #groupPkgTypeId#)
        <selectKey resultType="java.lang.String" keyProperty="groupPkgId">
            select last_insert_id() as group_pkg_id
        </selectKey>
    </insert>

    <insert id="addGroupPackageToPackage">
        insert into group_package_to_package(
        group_pkg_to_pkg_id,
        group_pkg_id,
        package_id,
        no_of_occurences,
        is_active,
        discount_number)
        values(
        null,
        #groupPkgId#,
        #pkgId#,
        #occurences#,
        'Y',
        #number#)
    </insert>

    <select id="getGroupPkgByGroupPkgId" resultMap="groupPackage">
        select
        group_pkg_id,
        group_pkg_name,
        group_pkg_description,
        group_pkg_cost,
        gp.biz_id,
        gp.loc_id,
        biz_name,
        loc_name,
        gpt.group_pkg_type_id,
        gpt.group_pkg_type_name,
        expiry_duration from group_package gp
        join business b on b.biz_id = gp.biz_id
        join location l on l.loc_id = gp.loc_id
        join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
        where group_pkg_id = #grpPkgId#
    </select>

    <select id="getGroupPkgOccurencesByGroupPkgId" resultMap="groupPackageOccurence">
        select
        group_pkg_to_pkg_id,
        group_pkg_id,
        package_id,
        no_of_occurences,
        discount_number,
        is_active from group_package_to_package where group_pkg_id = #grpPkgId# and is_active = "Y"
    </select>

    <update id="updateGroupPackage">
        update group_package
        set
        group_pkg_name = #groupPkgName#,
        group_pkg_description = #groupPkgDesc#,
        group_pkg_cost = #groupPkgCost#,
        biz_id = #bizId#,
        loc_id = #locId#,
        expiry_duration = #expiryDuration#,
        group_pkg_type_id=#groupPkgTypeId#
        where group_pkg_id = #groupPkgId#;
    </update>

    <select id="getGroupPackageToApptId" resultType="java.lang.Integer">
        select min(group_pkg_to_appt_id) from group_pkg_to_appt where group_pkg_id = #groupPkgId# and package_id = #pkgId# and appt_id = 0 and group_pkg_purchase_id=#groupPackagePurchaseId#;
    </select>

    <update id="updateGroupPackageAppt">
        update group_pkg_to_appt
        set
        appt_id = #bookedApptId#
        where group_pkg_id = #groupPkgId# and package_id = #pkgId# and group_pkg_to_appt_id = #grpPkgApptId#;
    </update>

    <update id="updateGroupPackageToPackage">
        update group_package_to_package
        set
        no_of_occurences = #occurences#,
        discount_number=#number#,
        is_active = 'Y'
        where group_pkg_to_pkg_id = #groupPkgToPkgId#
    </update>

    <select id="getGroupPkgType" resultMap="groupPackageType">
        select group_pkg_type_id,group_pkg_type_name from group_package_type;
    </select>

    <select id="getAllGroupPackagesListByUserId" resultMap="groupPackageList">
        select $sqlRows$
        gp.group_pkg_id,
        gp.group_pkg_name,
        gp.group_pkg_description,
        gp.group_pkg_cost,
        gp.biz_id,
        b.biz_name,
        gp.loc_id,
        l.loc_name,
        l.state_code,
        gp.expiry_duration,
        group_concat(p.package_name," (",cast(gpp.no_of_occurences as char),") " SEPARATOR "&lt;br&gt;") as pkgName,
        gpp.is_active,
        gpt.group_pkg_type_id,
        gpt.group_pkg_type_name
        from group_package gp
        join group_package_to_package gpp on gp.group_pkg_id = gpp.group_pkg_id
        join package p on gpp.package_id = p.package_id
        join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
        join business b on gp.biz_id = b.biz_id
        join location l on gp.loc_id = l.loc_id
        inner join business_user bu on b.biz_id = bu.biz_id where bu.user_id = if(#userId# = '0', bu.user_id,#userId#) and gp.biz_id = if(#bizId# = '0', gp.biz_id,#bizId#) and gp.loc_id = if(#locId# = '0', gp.loc_id,#locId#) and gpp.is_active = 'Y' group by gp.group_pkg_id
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getAllPurchasedGroupPackagesListByUserId" resultMap="groupPackagePurchaseList">
        <!-- select $sqlRows$
			gp.group_pkg_id,
			gp.group_pkg_name,
			gp.group_pkg_description,
			gp.group_pkg_cost,
			gp.biz_id,
			b.biz_name,
			gp.loc_id,
			l.loc_name,
			l.state_code,
			gp.expiry_duration,
			group_concat(p.package_name," (",cast(gpp.no_of_occurences as char),") " SEPARATOR "&lt;br&gt;") as pkgName,
			gpp.is_active,
			gpt.group_pkg_type_id,
			gpt.group_pkg_type_name
			from group_package gp
			join group_package_to_package gpp on gp.group_pkg_id = gpp.group_pkg_id
			join package p on gpp.package_id = p.package_id
			join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
			join business b on gp.biz_id = b.biz_id
			join location l on gp.loc_id = l.loc_id
	      join group_pkg_to_appt gpa on gpa.group_pkg_id = gp.group_pkg_id
	      join group_package_purchase gppu on gppu.group_pkg_id = gp.group_pkg_id and gppu.user_id = gpa.user_id and gppu.group_pkg_purchase_id = gpa.group_pkg_purchase_id
				inner join business_user bu on b.biz_id = bu.biz_id where gpa.user_id = #userId#
	      and gp.biz_id = if(#bizId# = '0', gp.biz_id,#bizId#) and gp.loc_id = if(#locId# = '0', gp.loc_id,#locId#)
	      and gpp.is_active = 'Y' group by gp.group_pkg_id
	      order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ; -->

        select $sqlRows$
        gp.group_pkg_id,
        gp.group_pkg_name,
        gp.group_pkg_description,
        gp.group_pkg_cost,
        gp.biz_id,
        b.biz_name,
        gp.loc_id,
        l.loc_name,
        l.state_code,
        gp.expiry_duration,
        gptp.group_pkg_purchase_id,
        group_concat(p.package_name," (",cast(gpp.no_of_occurences as char),") " SEPARATOR "&lt;br&gt;") as pkgName,
        gpp.is_active,
        gpt.group_pkg_type_id,
        gpt.group_pkg_type_name
        from group_package gp
        join group_package_purchase gptp on gptp.group_pkg_id = gp.group_pkg_id
        join group_pkg_payment gppt on gptp.group_pkg_purchase_id = gppt.group_pkg_purchase_id
        join group_package_to_package gpp on gp.group_pkg_id = gpp.group_pkg_id
        join package p on gpp.package_id = p.package_id
        join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
        join business b on gp.biz_id = b.biz_id
        join location l on gp.loc_id = l.loc_id
        join business_user bu on b.biz_id = bu.biz_id
        where gptp.user_id=#userId# and gp.biz_id = if(#bizId# = '0', gp.biz_id,#bizId#) and gp.loc_id = if(#locId# = '0', gp.loc_id,#locId#) and gpp.is_active = 'Y'
        group by gptp.group_pkg_purchase_id
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;

    </select>

    <select id="getBizNamenLocNamebyLocId" resultMap="businessInventoryResult">
        select l.biz_id,biz_name,loc_name from location l join business b on l.biz_id = b.biz_id where loc_id = #locId#
    </select>

    <select id="getSMSLogByUserId" resultMap="businessSMSLogResult">
        select $sqlRows$
        sms_id,appt_id,sms_log.biz_id as biz_id,biz_name,sms_log.user_id as user_id,unreg_user_id,client_id,user_first_name,
        user_last_name,sms_log.modified_dt as modified_dt,sms_log.modified_by as modified_by,status_code,cell_phone,is_active
        from sms_log
        join business_user bu on bu.biz_id = sms_log.biz_id
        where bu.user_id = (case when #userId# = '' then bu.user_id else #userId# end)
        and SUBSTRING(sms_log.modified_dt,1,10) &gt;= #startDate# and SUBSTRING(sms_log.modified_dt,1,10) &lt;= #endDate#
        and bu.biz_id = if(#bizId# = '0', bu.biz_id, #bizId#)
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo#;
    </select>

    <select id="getGroupPkgbyGrpPkgNameAndId" resultType="java.lang.Integer">
        SELECT count(*) FROM group_package where group_pkg_id != #grpPkgId# and group_pkg_name=#grpPkgName# and loc_id = #locId#;
    </select>

    <select id="getGrpPkgApptCountByGrpPkgId" resultType="java.lang.Integer">
        SELECT count(*) FROM group_pkg_to_appt where group_pkg_id = #grpPkgId#;
    </select>

    <select id="getGrpPkgPurchaseCountByGrpPkgId" resultType="java.lang.Integer">
        SELECT count(*) FROM group_package_purchase where group_pkg_id = #grpPkgId#;
    </select>

    <delete id="deleteGrpPkgToPkg">
        delete from group_package_to_package where group_pkg_id = #grpPkgId#;
    </delete>

    <delete id="deleteGrpPkg">
        delete from group_package where group_pkg_id = #grpPkgId#;
    </delete>

    <select id="getProductModel" resultMap="productModelResult">
        SELECT product_model_id,product_model_name,product_model_type_id FROM product_model;
    </select>

    <select id="getProductIssue" resultMap="productIssueResult">
        SELECT pi.product_issue_id, pi.product_issue_name,pr.product_issue FROM
        product_issue pi left join product_issue_to pr on pi.product_issue_id = pr.product_issue_id
        and pr.product_repair_id = #repairFormId#;
    </select>

    <select id="getProductHardwareIssueList" resultMap="productHardwareIssueResult">
        select phi.issue_id as issue_id,
        phi.issue_name as issue_name,
        tfts.tech_form_to_issue_id as tech_form_to_issue_id,
        tfts.tech_form_id as tech_form_id,
        IFNULL(tfts.is_present_before, 0) as is_present_before,
        IFNULL(tfts.is_present_after, 0) as is_present_after
        from product_hardware_issue phi left join technician_form_to_issue tfts on tfts.issue_id = phi.issue_id and tfts.tech_form_id=#techFormId#;
    </select>

    <select id="getProductPartsUsedList" resultMap="productPartsUsedResult">
        select pp.product_parts_id as product_parts_id,
        pp.product_parts_name as product_parts_name,
        ppu.parts_used_id as parts_used_id,
        ppu.parts_used_name as parts_used_name,
        ppu.tech_form_id as tech_form_id
        from product_parts pp left join product_parts_used ppu on pp.product_parts_id = ppu.product_parts_id and ppu.tech_form_id = #techFormId#;
    </select>

    <select id="getBizWhichHasGrpPkgs" resultMap="bizResult2">
        select distinct b.biz_id,
        b.biz_name
        from business b
        inner join group_package gp on b.biz_id = gp.biz_id where b.is_active = "Y" and is_deleted = "N";
    </select>

    <select id="getLocsWhichHasGrpPkgs" resultMap="locationResult2">
        select distinct l.loc_id,
        l.loc_name,l.timezone_code,b.biz_name
        from location l
        inner join group_package gp on l.loc_id = gp.loc_id
        join business b on b.biz_id = gp.biz_id where gp.biz_id = #bizId#;
    </select>

    <insert id="addGroupPackagePurchase">
        insert into group_package_purchase(
        group_pkg_purchase_id,
        user_id,
        group_pkg_id,
        expiry_dt,
        purchase_dt)
        values(
        null,
        #userId#,
        #groupPkgId#,
        DATE_ADD(UTC_TIMESTAMP(),INTERVAL +#expiryDt# MONTH),
        UTC_TIMESTAMP())
        <selectKey resultType="java.lang.Integer" keyProperty="groupPkgPurchaseId">
            select last_insert_id() as group_pkg_purchase_id
        </selectKey>
    </insert>

    <insert id="addGroupPackagePayment">
        insert into group_pkg_payment(
        group_pkg_payment_id,
        group_pkg_purchase_id,
        confirmation_number,
        amount,
        payment_mode,
        gateway_transaction_id,
        payment_dt,
        created_dt)
        values(
        null,
        #groupPkgPurchaseId#,
        #confirmationNumber#,
        #amount#,
        #paymentMode#,
        #gatewayTransactionId#,
        UTC_TIMESTAMP(),
        UTC_TIMESTAMP())
        <selectKey resultType="java.lang.Integer" keyProperty="groupPkgPaymentId">
            select last_insert_id() as group_pkg_payment_id
        </selectKey>
    </insert>

    <insert id="addGroupPackageAppt">
        insert into group_pkg_to_appt(
        group_pkg_to_appt_id,
        group_pkg_id,
        user_id,
        package_id,
        appt_id,
        group_pkg_purchase_id)
        values(
        null,
        #groupPkgId#,
        #userId#,
        #pkgId#,
        #apptId#,
        #groupPkgPurchaseId#)
        <selectKey resultType="java.lang.Integer" keyProperty="groupPkgToApptId">
            select last_insert_id() as group_pkg_to_appt_id
        </selectKey>
    </insert>

    <select id="getUserPurchasedGroupPackagesDetailsByGroupPkgId" resultMap="listOfGrpPkgOfUserByGroupPkgId">
        select
        gp.group_pkg_id,
        gp.group_pkg_name,
        gp.group_pkg_description,
        gp.group_pkg_cost,
        gp.biz_id,
        b.biz_name,
        gp.loc_id,
        l.loc_name,
        l.state_code,
        gp.expiry_duration,
        s.svc_id as svc_id,
        p.package_id as pkg_id,
        p.package_name as pkg_name,
        gpp.discount_number as discount_number,
        if(gpp.no_of_occurences !=0, gpp.no_of_occurences,'Unlimited') as no_of_occurences,
        count(appt_id) as used_pkg,
        (if(gpp.no_of_occurences !=0, gpp.no_of_occurences - count(appt_id), 'Unlimited')) as remaining,
        gpp.is_active,
        gppc.group_pkg_purchase_id,
        gpt.group_pkg_type_id,
        gpt.group_pkg_type_name
        from group_package gp
        join group_package_to_package gpp on gp.group_pkg_id = gpp.group_pkg_id
        join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
        left join group_package_purchase gppc on gp.group_pkg_id = gppc.group_pkg_id
        left join group_pkg_to_appt gpat on gppc.group_pkg_id = gpat.group_pkg_id and gpp.package_id = gpat.package_id
        and gppc.group_pkg_purchase_id = gpat.group_pkg_purchase_id
        join business b on gp.biz_id = b.biz_id
        join location l on gp.loc_id = l.loc_id
        join location_to_service lts on lts.loc_id = l.loc_id and lts.is_active = 'Y'
        join service s on s.svc_id = lts.svc_id
        join package p on gpp.package_id = p.package_id and p.loc_svc_id = lts.loc_svc_id
        where gppc.user_id = #userId# and gp.group_pkg_id=#groupPkgId# and gppc.group_pkg_purchase_id = #groupPkgPurchaseId# and gpp.is_active = 'Y'
        group by gpp.package_id;

        <!-- select
			gp.group_pkg_id,
			gp.group_pkg_name,
			gp.group_pkg_description,
			gp.group_pkg_cost,
			gp.biz_id,
			b.biz_name,
			gp.loc_id,
			l.loc_name,
			l.state_code,
			gp.expiry_duration,
			s.svc_id as svc_id,
			p.package_id as pkg_id,
			p.package_name as pkg_name,
			gpp.discount_number as discount_number,
      		if(gpp.no_of_occurences !=0, gpp.no_of_occurences,'Unlimited') as no_of_occurences,
      		count(appt_id) as used_pkg,
      		(if(gpp.no_of_occurences !=0, gpp.no_of_occurences - count(appt_id), 'Unlimited')) as remaining,
			gpp.is_active,
			gpt.group_pkg_type_id,
			gpt.group_pkg_type_name
			from group_package gp
			join group_package_to_package gpp on gp.group_pkg_id = gpp.group_pkg_id
			join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
      		left join group_pkg_to_appt gpat on gp.group_pkg_id = gpat.group_pkg_id and gpp.package_id = gpat.package_id
      		left join group_package_purchase gppc on gp.group_pkg_id = gppc.group_pkg_id and
        	gpat.group_pkg_id = gppc.group_pkg_id and gppc.group_pkg_purchase_id = gpat.group_pkg_purchase_id
			join business b on gp.biz_id = b.biz_id
			join location l on gp.loc_id = l.loc_id
			join location_to_service lts on lts.loc_id = l.loc_id
      		join service s on s.svc_id = lts.svc_id
	    	join package p on gpp.package_id = p.package_id and p.loc_svc_id = lts.loc_svc_id
			inner join business_user bu on b.biz_id = bu.biz_id where bu.user_id = #userId# and gp.group_pkg_id=#groupPkgId# and gpp.is_active = 'Y'
      		group by gpp.package_id -->

    </select>

    <select id="getUserPurchasedGroupPackagesDetails" resultMap="listOfGrpPkgOfUser">

        select $sqlRows$
        gp.group_pkg_id,
        group_concat(cast(gpa.package_id as char),"~",p.package_name,"~",cast((case when a.start_time is null then ' ' else CONVERT_TZ(a.start_time, 'UTC', t.timezone) end) as char), "~",cast((case when gpa.appt_id is null then '0' else gpa.appt_id end) as char), "~",CAST(s.svc_id as CHAR) SEPARATOR ";") as package_name,
        gp.group_pkg_name,
        b.biz_id,
        b.biz_name,
        l.loc_id,
        l.loc_name,
        date_format(gpp.expiry_dt,'%d-%b-%Y') as expiry_dt,
        gpp.user_id,
        gpa.appt_id,
        a.status_code as status_code,
        gpp.group_pkg_purchase_id,
        gptp.discount_number as discount_number,
        gpt.group_pkg_type_id,
        gpt.group_pkg_type_name,
        gptp.group_pkg_to_pkg_id
        from group_pkg_to_appt gpa
        join group_package gp  on gpa.group_pkg_id = gp.group_pkg_id
        join group_package_type gpt on gpt.group_pkg_type_id = gp.group_pkg_type_id
        join business b on b.biz_id = gp.biz_id
        join location l on l.loc_id = gp.loc_id
        join location_to_service lts on lts.loc_id = l.loc_id and lts.is_active = 'Y'
        join service s on s.svc_id = lts.svc_id
        join group_package_to_package gptp on gptp.group_pkg_id = gp.group_pkg_id
        join group_package_purchase gpp on gpp.group_pkg_id = gp.group_pkg_id and gpp.user_id = gpa.user_id and gpp.group_pkg_purchase_id = gpa.group_pkg_purchase_id
        join package p on p.package_id = gpa.package_id and p.package_id = gptp.package_id and p.loc_svc_id = lts.loc_svc_id
        left join appointment a on gpa.appt_id = a.appt_id
        left join timezone t on l.timezone_code = t.timezone_code
        where gpa.user_id = #userId# and gp.group_pkg_id=#groupPkgId# and a.is_active != 'D' group by a.appt_id
        order by $sortBy$ $sort$ limit #pageSize# offset #offPageNo# ;
    </select>

    <select id="getUserSelectedPurchasedGroupPackagesDetails" resultMap="selectedGrpPkgOfUser">
        select
        gp.group_pkg_id,
        gptp.package_id,
        substring(CONVERT_TZ(gpp.expiry_dt, 'UTC', t.timezone), 1, 10) as expiry_dt
        FROM group_package gp
        join location l on l.loc_id = gp.loc_id
        join group_package_purchase gpp on gpp.group_pkg_id = gp.group_pkg_id and gpp.user_id = #userId# and gpp.group_pkg_purchase_id=#groupPkgPurchaseId# and gp.group_pkg_id = #groupPkgId#
        join group_package_to_package gptp on gptp.group_pkg_id = gp.group_pkg_id and gptp.package_id = #pkgId#
        left join timezone t on l.timezone_code = t.timezone_code;
    </select>

    <select id="getBizResourceSelectedPurchasedGroupPackagesDetails" resultMap="selectedGrpPkgOfUser">
        select
        gp.group_pkg_id,
        gptp.package_id,
        substring(CONVERT_TZ(gpp.expiry_dt, 'UTC', t.timezone), 1, 10) as expiry_dt
        FROM group_package gp
        join location l on l.loc_id = gp.loc_id
        join group_package_purchase gpp on gpp.group_pkg_id = gp.group_pkg_id and gpp.group_pkg_purchase_id=#groupPkgPurchaseId# and gp.group_pkg_id = #groupPkgId#
        join group_package_to_package gptp on gptp.group_pkg_id = gp.group_pkg_id and gptp.package_id = #pkgId#
        left join timezone t on l.timezone_code = t.timezone_code;
    </select>

    <select id="getClientPresentByClientId" resultType="java.lang.Integer">
        SELECT client_id FROM client where client_id = #clientId#;
    </select>

    <select id="getClientbyEmailAndClientId" resultType="java.lang.Integer">
        SELECT count(*) FROM client where client_id != #clientId# and email =#email# and biz_id = #bizId#;
    </select>

    <select id="getClientIdByBizIdAndEmail" resultType="java.lang.Integer">
        SELECT client_id FROM client where biz_id = if(#bizId# = '0',biz_id,#bizId#) and email = #email# LIMIT 1;
    </select>

    <select id="getEmailByResId" resultType="java.lang.String">
        select email from resource where res_id=#resId#;
    </select>

    <select id="getServicesByLocIdBizId" resultMap="serviceJsonResult">
        select sm.service_name,s.svc_id from service_master sm
        join service s on s.service_code = sm.service_code
        join location_to_service ls on ls.svc_id = s.svc_id and ls.is_active = 'Y'
        where s.biz_id=#bizId# and ls.loc_id = #locId# and s.is_active = 'Y';
    </select>

    <select id="checkClientSMS" resultType="java.lang.String">
        SELECT notify_by_SMS FROM client where client_id=#clientId#;
    </select>

    <select id="getProductModelName" resultType="java.lang.String">
        SELECT product_model_name FROM product_model where product_model_id=#productModelId#;
    </select>

    <select id="getProductIssueName" resultType="java.lang.String">
        SELECT product_issue_name FROM product_issue where product_issue_id=#productIssueId#;
    </select>

    <select id="getPhoneCarrierName" resultType="java.lang.String">
        SELECT phone_carrier_name FROM phone_carrier where phone_carrier_id=#phoneCarrierId#;
    </select>

    <select id="getClientDetails" resultMap="clientResultInStore">
        select email,cell_phone from client where client_id=#clientId#
    </select>

    <update id="updateUserRoleByEmail">
        update user_role set role_code='USER' where user_id=(SELECT user_id FROM user_master where email=#email#) and role_code!='BIZADMIN';
    </update>

    <update id="updateClientPhysicianDetails">
        update client_physician set
        biz_id = #bizId#,
        p_first_name = #physicianFirstName#,
        p_last_name = #physicianLastName#,
        p_email = #physicianEmail#,
        p_cell_phone=#physicianCellPhone#,
        p_hospital_name=#physicianHospital#,
        modified_dt = UTC_TIMESTAMP(),
        modified_by = #modifiedBy#
        where client_id = #clientId#
    </update>

    <select id="getResourceTypeDetails" resultMap="resourceTypeDetails">
        SELECT res_role_code, res_role_name FROM resource_role_type;
    </select>

    <select id="getResourceTypeDetailsWithoutTechnician" resultMap="resourceTypeDetails">
        SELECT res_role_code, res_role_name FROM resource_role_type where res_role_code != 'TECHNICIAN';
    </select>

    <select id="getTechniciansForRepairForm" resultMap="resourceResult">
        select
        resource.res_id,
        resource.biz_id,
        resource.first_name,
        resource.last_name,
        resource.nick_name,
        resource.description,
        resource.address_line1,
        resource.address_line2,
        resource.city,
        resource.state_code,
        resource.zip_code,
        resource.country_code,
        resource.email,
        resource.cell_phone,
        resource.home_phone,
        resource.work_phone,
        resource.work_phone_ext,
        resource.is_active,
        resource.created_dt,
        resource.created_by,
        resource.modified_dt,
        resource.modified_by,
        resource.is_onsked_user,
        restype.res_role_name,
        resource.resource_level
        from resource inner join location_to_resource on location_to_resource.res_id = resource.res_id and location_to_resource.is_active = 'Y'
        join resource_role_type restype on resource.res_role_code = restype.res_role_code
        where location_to_resource.loc_id = #locId# and resource.res_role_code = 'TECHNICIAN' and resource.is_active = 'Y';
    </select>

    <select id="getFormStausListForTechnicianForm" resultMap="formStatusResult">
        SELECT form_status_code, form_status_name, res_role_code FROM form_status order by status_order;
    </select>

    <select id="getAppointmentStatusForGrid" resultMap="appointmentStatusForGrid">
        SELECT * FROM appointment_status where is_active='Y';
    </select>

    <update id="updateRepairFormSelfAssign">
        update product_repair set
        technician_id = #technicianId#,
        modified_by = #modifiedBy#,
        modified_dt = UTC_TIMESTAMP()
        where product_repair_id = #repairFormId#;
    </update>

    <select id="getClientAuditDetails" resultMap="auditResult">
        select
        (CASE
        WHEN modified_column = 'email' then ca.old_value
        WHEN modified_column = 'first_name' then ca.old_value
        WHEN modified_column = 'last_name' then ca.old_value
        WHEN modified_column = 'gender' then ca.old_value
        WHEN modified_column = 'date_of_birth' then DATE_FORMAT(ca.old_value, '%d %b %Y')
        WHEN modified_column = 'address_line1' then ca.old_value
        WHEN modified_column = 'address_line2' then ca.old_value
        WHEN modified_column = 'city' then ca.old_value
        WHEN modified_column = 'state_code' then s_old.state_name
        WHEN modified_column = 'zip_code' then ca.old_value
        WHEN modified_column = 'country_code' then c_old.country_name
        WHEN modified_column = 'cell_phone' then ca.old_value
        WHEN modified_column = 'home_phone' then ca.old_value
        WHEN modified_column = 'work_phone' then ca.old_value
        WHEN modified_column = 'work_phone_ext' then ca.old_value
        WHEN modified_column = 'is_active' then ca.old_value
        WHEN modified_column = 'notify_by_SMS' then ca.old_value
        WHEN modified_column = 'blood_group' then ca.old_value
        WHEN modified_column = 'emergency_contact_no' then ca.old_value
        WHEN modified_column = 'referral_type' then ca.old_value
        WHEN modified_column = 'f_first_name' then ca.old_value
        WHEN modified_column = 'f_last_name' then ca.old_value
        WHEN modified_column = 'f_email' then ca.old_value
        WHEN modified_column = 'f_cell_phone' then ca.old_value
        WHEN modified_column = 'client_insurance_name' then ca.old_value
        WHEN modified_column = 'client_referred_source' then ca.old_value
        END) AS 'from_value',
        (CASE
        WHEN modified_column = 'email' then ca.new_value
        WHEN modified_column = 'first_name' then ca.new_value
        WHEN modified_column = 'last_name' then ca.new_value
        WHEN modified_column = 'gender' then ca.new_value
        WHEN modified_column = 'date_of_birth' then DATE_FORMAT(ca.new_value, '%d %b %Y')
        WHEN modified_column = 'address_line1' then ca.new_value
        WHEN modified_column = 'address_line2' then ca.new_value
        WHEN modified_column = 'city' then ca.new_value
        WHEN modified_column = 'state_code' then s_new.state_name
        WHEN modified_column = 'zip_code' then ca.new_value
        WHEN modified_column = 'country_code' then c_new.country_name
        WHEN modified_column = 'cell_phone' then ca.new_value
        WHEN modified_column = 'home_phone' then ca.new_value
        WHEN modified_column = 'work_phone' then ca.new_value
        WHEN modified_column = 'work_phone_ext' then ca.new_value
        WHEN modified_column = 'is_active' then ca.new_value
        WHEN modified_column = 'notify_by_SMS' then ca.new_value
        WHEN modified_column = 'blood_group' then ca.new_value
        WHEN modified_column = 'emergency_contact_no' then ca.new_value
        WHEN modified_column = 'referral_type' then ca.new_value
        WHEN modified_column = 'f_first_name' then ca.new_value
        WHEN modified_column = 'f_last_name' then ca.new_value
        WHEN modified_column = 'f_email' then ca.new_value
        WHEN modified_column = 'f_cell_phone' then ca.new_value
        WHEN modified_column = 'client_insurance_name' then ca.new_value
        WHEN modified_column = 'client_referred_source' then ca.new_value
        END) AS 'to_value',
        (CASE
        WHEN modified_column = 'email' then 'E-Mail Changed'
        WHEN modified_column = 'first_name' then 'First Name Changed'
        WHEN modified_column = 'last_name' then 'Last Name Changed'
        WHEN modified_column = 'gender' then 'Gender Changed'
        WHEN modified_column = 'date_of_birth' then 'Date Of Birth Changed'
        WHEN modified_column = 'address_line1' then 'Address Line 1 Changed'
        WHEN modified_column = 'address_line2' then 'Address Line 2 Changed'
        WHEN modified_column = 'city' then 'City Changed'
        WHEN modified_column = 'state_code' then 'State Changed'
        WHEN modified_column = 'zip_code' then 'Zip Code Changed'
        WHEN modified_column = 'country_code' then 'Country Changed'
        WHEN modified_column = 'cell_phone' then 'Cell Phone Number Changed'
        WHEN modified_column = 'home_phone' then 'Home Phone Number Changed'
        WHEN modified_column = 'work_phone' then 'Work Phone Number Changed'
        WHEN modified_column = 'work_phone_ext' then 'Work Phone Extension Code Changed'
        WHEN modified_column = 'is_active' then 'Client Removed'
        WHEN modified_column = 'notify_by_SMS' then 'SMS Alert Option Changed'
        WHEN modified_column = 'blood_group' then 'Blood Group Changed'
        WHEN modified_column = 'emergency_contact_no' then 'Emergency Contact Number Changed'
        WHEN modified_column = 'referral_type' then 'Referral Type Changed'
        WHEN modified_column = 'f_first_name' then 'Friend First Name Changed'
        WHEN modified_column = 'f_last_name' then 'Friend Last Name Changed'
        WHEN modified_column = 'f_email' then 'Friend E-Mail Id Changed'
        WHEN modified_column = 'f_cell_phone' then 'Friend Contact Number Changed'
        WHEN modified_column = 'client_insurance_name' then 'Insurance Name Changed'
        WHEN modified_column = 'client_referred_source' then 'Referred Source Changed'
        END) AS 'description',
        CONCAT(u.first_name ,' ',u.last_name) as 'modified_by',
        CONVERT_TZ(ca.modified_dt,'UTC', tzo.timezone) as 'modified_dt'
        from client_audit ca
        left join country c_old on c_old.country_code = ca.old_value
        left join country c_new on c_new.country_code = ca.new_value
        left join state s_old on s_old.state_code = ca.old_value and s_old.country_code = ca.old_country_code
        left join state s_new on s_new.state_code = ca.new_value and s_new.country_code = ca.new_country_code
        join user_master u on u.user_id = ca.modified_by
        join location loc on loc.loc_id = (select loc.loc_id from client c, location loc where loc.biz_id = c.biz_id and loc.is_headquarters = 'Y' and c.client_id = ca.client_id)
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        where ca.client_id = #clientId#
        order by ca.modified_dt desc;
    </select>

    <select id="getResourceAuditDetails" resultMap="auditResult">
        select
        (CASE
        WHEN modified_column = 'biz_id' then ra.old_value
        WHEN modified_column = 'first_name' then ra.old_value
        WHEN modified_column = 'last_name' then ra.old_value
        WHEN modified_column = 'nick_name' then ra.old_value
        WHEN modified_column = 'description' then ra.old_value
        WHEN modified_column = 'address_line1' then ra.old_value
        WHEN modified_column = 'address_line2' then ra.old_value
        WHEN modified_column = 'city' then ra.old_value
        WHEN modified_column = 'state_code' then s_old.state_name
        WHEN modified_column = 'zip_code' then ra.old_value
        WHEN modified_column = 'country_code' then c_old.country_name
        WHEN modified_column = 'cell_phone' then ra.old_value
        WHEN modified_column = 'home_phone' then ra.old_value
        WHEN modified_column = 'work_phone' then ra.old_value
        WHEN modified_column = 'work_phone_ext' then ra.old_value
        WHEN modified_column = 'is_active' then ra.old_value
        WHEN modified_column = 'is_onsked_user' then ra.old_value
        WHEN modified_column = 'resource_level' then ra.old_value
        WHEN modified_column = 'resource_type' then resroletype_old.res_role_name
        WHEN modified_column = 'email' then ra.old_value
        END) AS 'from_value',
        (CASE
        WHEN modified_column = 'biz_id' then ra.new_value
        WHEN modified_column = 'first_name' then ra.new_value
        WHEN modified_column = 'last_name' then ra.new_value
        WHEN modified_column = 'nick_name' then ra.new_value
        WHEN modified_column = 'description' then ra.new_value
        WHEN modified_column = 'address_line1' then ra.new_value
        WHEN modified_column = 'address_line2' then ra.new_value
        WHEN modified_column = 'city' then ra.new_value
        WHEN modified_column = 'state_code' then s_new.state_name
        WHEN modified_column = 'zip_code' then ra.new_value
        WHEN modified_column = 'country_code' then c_new.country_name
        WHEN modified_column = 'cell_phone' then ra.new_value
        WHEN modified_column = 'home_phone' then ra.new_value
        WHEN modified_column = 'work_phone' then ra.new_value
        WHEN modified_column = 'work_phone_ext' then ra.new_value
        WHEN modified_column = 'is_active' then ra.new_value
        WHEN modified_column = 'is_onsked_user' then ra.new_value
        WHEN modified_column = 'resource_level' then ra.new_value
        WHEN modified_column = 'resource_type' then resroletype_new.res_role_name
        WHEN modified_column = 'email' then ra.new_value
        END) AS 'to_value',
        (CASE
        WHEN modified_column = 'biz_id' then 'Business Admin Changed'
        WHEN modified_column = 'first_name' then 'First Name Changed'
        WHEN modified_column = 'last_name' then 'Last Name Changed'
        WHEN modified_column = 'nick_name' then 'Nick Name Changed'
        WHEN modified_column = 'description' then 'Description Changed'
        WHEN modified_column = 'address_line1' then 'Address Line 1 Changed'
        WHEN modified_column = 'address_line2' then 'Address Line 2 Changed'
        WHEN modified_column = 'city' then 'City Changed'
        WHEN modified_column = 'state_code' then 'State Changed'
        WHEN modified_column = 'zip_code' then 'Zip Code Changed'
        WHEN modified_column = 'country_code' then 'Country Changed'
        WHEN modified_column = 'cell_phone' then 'Cell Phone Number Changed'
        WHEN modified_column = 'home_phone' then 'Home Phone Number Changed'
        WHEN modified_column = 'work_phone' then 'Work Phone Number Changed'
        WHEN modified_column = 'work_phone_ext' then 'Work Phone Extension Code Changed'
        WHEN modified_column = 'is_active' then 'Staff Removed'
        WHEN modified_column = 'is_onsked_user' then 'SMS Alert Option Changed'
        WHEN modified_column = 'resource_level' then 'Staff Level Changed'
        WHEN modified_column = 'resource_type' then 'Staff Type Changed'
        WHEN modified_column = 'email' then 'E-Mail Changed'
        END) AS 'description',
        CONCAT(u.first_name ,' ',u.last_name) as 'modified_by',
        CONVERT_TZ(ra.modified_dt,'UTC', tzo.timezone) as 'modified_dt'
        from resource_audit ra
        left join country c_old on c_old.country_code = ra.old_value
        left join country c_new on c_new.country_code = ra.new_value
        left join state s_old on s_old.state_code = ra.old_value and s_old.country_code = ra.old_country_code
        left join state s_new on s_new.state_code = ra.new_value and s_new.country_code = ra.new_country_code
        left join resource_role_type resroletype_old on resroletype_old.res_role_code = ra.old_value
        left join resource_role_type resroletype_new on resroletype_new.res_role_code = ra.new_value
        join user_master u on u.user_id = ra.modified_by
        join location loc on loc.loc_id = (select loc.loc_id from resource r, location loc where loc.biz_id = r.biz_id and loc.is_headquarters = 'Y' and r.res_id = ra.res_id)
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        where ra.res_id = #resId#
        order by ra.modified_dt desc;
    </select>

    <select id="getLocationAuditDetails" resultMap="auditResult">
        select
        (CASE
        WHEN modified_column = 'loc_name' then la.old_value
        WHEN modified_column = 'description' then la.old_value
        WHEN modified_column = 'address_line1' then la.old_value
        WHEN modified_column = 'address_line2' then la.old_value
        WHEN modified_column = 'city' then la.old_value
        WHEN modified_column = 'state_code' then la.old_value
        WHEN modified_column = 'zip_code' then la.old_value
        WHEN modified_column = 'country_code' then c_old.country_name
        WHEN modified_column = 'currency_code' then la.old_value
        WHEN modified_column = 'timezone_code' then la.old_value
        WHEN modified_column = 'phone_number1' then la.old_value
        WHEN modified_column = 'phone_number2' then la.old_value
        WHEN modified_column = 'fax_number' then la.old_value
        WHEN modified_column = 'is_headquarters' then la.old_value
        WHEN modified_column = 'is_active' then la.old_value
        WHEN modified_column = 'lat' then la.old_value
        WHEN modified_column = 'custom_message' then la.old_value
        WHEN modified_column = 'lng' then la.old_value
        WHEN modified_column = 'auto_approve_request' then la.old_value
        WHEN modified_column = 'appt_granularity' then la.old_value
        WHEN modified_column = 'tax' then la.old_value
        END) AS 'from_value',
        (CASE
        WHEN modified_column = 'loc_name' then la.new_value
        WHEN modified_column = 'description' then la.new_value
        WHEN modified_column = 'address_line1' then la.new_value
        WHEN modified_column = 'address_line2' then la.new_value
        WHEN modified_column = 'city' then la.new_value
        WHEN modified_column = 'state_code' then la.new_value
        WHEN modified_column = 'zip_code' then la.new_value
        WHEN modified_column = 'country_code' then c_new.country_name
        WHEN modified_column = 'currency_code' then la.new_value
        WHEN modified_column = 'timezone_code' then la.new_value
        WHEN modified_column = 'phone_number1' then la.new_value
        WHEN modified_column = 'phone_number2' then la.new_value
        WHEN modified_column = 'fax_number' then la.new_value
        WHEN modified_column = 'is_headquarters' then la.new_value
        WHEN modified_column = 'is_active' then la.new_value
        WHEN modified_column = 'lat' then la.new_value
        WHEN modified_column = 'custom_message' then la.new_value
        WHEN modified_column = 'lng' then la.old_value
        WHEN modified_column = 'auto_approve_request' then la.old_value
        WHEN modified_column = 'appt_granularity' then la.old_value
        WHEN modified_column = 'tax' then la.new_value
        END) AS 'to_value',
        (CASE
        WHEN modified_column = 'loc_name' then 'Location Name Changed'
        WHEN modified_column = 'description' then 'Description Changed'
        WHEN modified_column = 'address_line1' then 'Address Line 1 Changed'
        WHEN modified_column = 'address_line2' then 'Address Line 2 Changed'
        WHEN modified_column = 'city' then 'City Changed'
        WHEN modified_column = 'zip_code' then 'Zip Code Changed'
        WHEN modified_column = 'country_code' then 'Country Changed'
        WHEN modified_column = 'currency_code' then 'Currency Code Changed'
        WHEN modified_column = 'timezone_code' then 'Timezone Code Changed'
        WHEN modified_column = 'phone_number1' then 'Phone Number1 Changed'
        WHEN modified_column = 'phone_number2' then 'Phone Number2 Changed'
        WHEN modified_column = 'fax_number' then 'Fax Number Changed'
        WHEN modified_column = 'is_headquarters' then 'Headquarters Changed'
        WHEN modified_column = 'is_active' then 'Location Removed'
        WHEN modified_column = 'lat' then 'Latitude Changed'
        WHEN modified_column = 'custom_message' then 'Custom Message Changed'
        WHEN modified_column = 'lng' then 'Longitude Changed'
        WHEN modified_column = 'auto_approve_request' then 'Auto Approve Request Changed'
        WHEN modified_column = 'appt_granularity' then 'Appointment Granularity Changed'
        WHEN modified_column = 'tax' then 'Tax Value Changed'
        END) AS 'description',
        CONCAT(u.first_name ,' ',u.last_name) as 'modified_by',
        CONVERT_TZ(la.modified_dt,'UTC', tzo.timezone) as 'modified_dt'
        from location_audit la
        left join country c_old on c_old.country_code = la.old_value
        left join country c_new on c_new.country_code = la.new_value
        join user_master u on u.user_id = la.modified_by
        join location loc on loc.loc_id = la.loc_id
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        where la.loc_id = #locId#
        order by la.modified_dt desc;
    </select>

    <select id="getRepairFormAuditDetails" resultMap="auditResult">
        select
        (CASE
        WHEN pra.modified_column = 'technician_id' then CONCAT(old_res.first_name ,' ',old_res.last_name)
        WHEN pra.modified_column = 'phone_carrier_id' then old_pc.phone_carrier_name
        WHEN pra.modified_column = 'delivery_dt' then DATE_FORMAT(CONVERT_TZ(pra.old_value,'UTC', tzo.timezone), '%d %b %Y %h:%i %p')
        WHEN pra.modified_column = 'product_model_id' then old_pm.product_model_name
        WHEN pra.modified_column = 'product_add_on' and pra.old_value = 'S' then 'Screen Protector'
        WHEN pra.modified_column = 'product_add_on' and pra.old_value = 'P' then 'Protective Case/Accessory'
        WHEN pra.modified_column = 'product_add_on' and pra.old_value = 'B' then 'Screen Protector, Protective Case/Accessory'
        WHEN pra.modified_column = 'product_add_on' and pra.old_value = 'X' then 'No ADD ON'
        WHEN pra.modified_column = 'imei' then pra.old_value
        WHEN pra.modified_column = 'comments' then pra.old_value
        WHEN pra.modified_column = 'pick_up' and pra.old_value = '0' then 'Pick Up Option not selected'
        WHEN pra.modified_column = 'pick_up' and pra.old_value = '1' then 'Stay Back'
        WHEN pra.modified_column = 'pick_up' and pra.old_value = '2' then 'Drop Off'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.old_value = '1' then 'None'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.old_value = '2' then 'Pass Code'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.old_value = '3' then 'Unlock Pattern'
        END) AS 'from_value',
        (CASE
        WHEN pra.modified_column = 'technician_id' then CONCAT(new_res.first_name ,' ',new_res.last_name)
        WHEN pra.modified_column = 'phone_carrier_id' then new_pc.phone_carrier_name
        WHEN pra.modified_column = 'delivery_dt' then DATE_FORMAT(CONVERT_TZ(pra.new_value,'UTC', tzo.timezone), '%d %b %Y %h:%i %p')
        WHEN pra.modified_column = 'product_model_id' then new_pm.product_model_name
        WHEN pra.modified_column = 'product_add_on' and pra.new_value = 'S' then 'Screen Protector'
        WHEN pra.modified_column = 'product_add_on' and pra.new_value = 'P' then 'Protective Case/Accessory'
        WHEN pra.modified_column = 'product_add_on' and pra.new_value = 'B' then 'Screen Protector, Protective Case/Accessory'
        WHEN pra.modified_column = 'product_add_on' and pra.new_value = 'X' then 'No ADD ON'
        WHEN pra.modified_column = 'imei' then pra.new_value
        WHEN pra.modified_column = 'comments' then pra.new_value
        WHEN pra.modified_column = 'pick_up' and pra.new_value = '1' then 'Stay Back'
        WHEN pra.modified_column = 'pick_up' and pra.new_value = '2' then 'Drop Off'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.new_value = '1' then 'None'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.new_value = '2' then 'Pass Code'
        WHEN pra.modified_column = 'opt_device_unlock' and pra.new_value = '3' then 'Unlock Pattern'
        END) AS 'to_value',
        (CASE
        WHEN pra.modified_column = 'technician_id' then 'Technician Changed'
        WHEN pra.modified_column = 'phone_carrier_id' then 'Phone Carrier Changed'
        WHEN pra.modified_column = 'delivery_dt' then 'Expected Delivery Date and Time Changed'
        WHEN pra.modified_column = 'product_model_id' then 'Product Model Changed'
        WHEN pra.modified_column = 'product_add_on' then 'Product ADD ON Changed'
        WHEN pra.modified_column = 'imei' then 'IMEI Number Changed'
        WHEN pra.modified_column = 'comments' then 'Comment Changed'
        WHEN pra.modified_column = 'pick_up' then 'Pick Up Status Changed'
        WHEN pra.modified_column = 'opt_device_unlock' then 'Device Unlocking Method Changed'
        END) AS 'description',
        CONCAT(u.first_name ,' ',u.last_name) as 'modified_by',
        CONVERT_TZ(pra.modified_dt,'UTC', tzo.timezone) as 'modified_dt'
        from product_repair_audit pra
        join appointment a on a.appt_id = (select appt_id from product_repair pr where pr.product_repair_id = pra.product_repair_id)
        join location loc on loc.loc_id = a.loc_id
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        join user_master u on u.user_id = pra.modified_by
        left join resource old_res on  old_res.res_id = pra.old_value
        left join resource new_res on  new_res.res_id = pra.new_value
        left join phone_carrier old_pc on old_pc.phone_carrier_id = pra.old_value
        left join phone_carrier new_pc on new_pc.phone_carrier_id = pra.new_value
        left join product_model old_pm on old_pm.product_model_id = pra.old_value
        left join product_model new_pm on new_pm.product_model_id = pra.new_value
        where pra.product_repair_id = #productRepairId#
        order by pra.modified_dt desc;
    </select>

    <select id="isDisplayCounterEnabled" resultType="java.lang.String">
        select display_counter from business where biz_id = #bizId#;
    </select>

    <select id="getApptBookedTime" resultMap="apptResult">
        select CONVERT_TZ(a.start_time,'UTC', tzo.timezone) as start_time
        from appointment a join location loc on loc.loc_id = a.loc_id
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        where a.loc_id = #locId# and SUBSTRING((CONVERT_TZ(a.start_time,'UTC', tzo.timezone)),1,10) = #holidayDt#
        and a.status_code != 'can' and a.is_active = 'Y'
        order by a.appt_id desc;
    </select>

    <insert id="addDigitalSignature">
        insert into digital_validation values (
        null,
        #productRepairId#,
        #sigJson#);
    </insert>

    <select id="getCountRepairFormDigSign" resultType="java.lang.Integer">
        select
        count(*)
        from digital_validation where product_repair_id = #repairFormIdHex#;
    </select>

    <delete id="deleteLocToService">
        delete from location_to_service where loc_id = #locId#;
    </delete>

    <select id="getTechnicianFormAuditDetails" resultMap="auditResult">
        select
        (CASE
        WHEN tfa.modified_column = 'form_status_code' then old_fs.form_status_name
        END) AS 'from_value',
        (CASE
        WHEN tfa.modified_column = 'form_status_code' then new_fs.form_status_name
        END) AS 'to_value',
        (CASE
        WHEN tfa.modified_column = 'form_status_code' then 'Form Status Changed'
        END) AS 'description',
        CONCAT(u.first_name ,' ',u.last_name) as 'modified_by',
        CONVERT_TZ(tfa.modified_date,'UTC', tzo.timezone) as 'modified_dt'
        from technician_form_audit tfa
        join appointment a on a.appt_id = (select appt_id from technician_form t where t.tech_form_id = tfa.tech_form_id)
        join location loc on loc.loc_id = a.loc_id
        join form_status old_fs on old_fs.form_status_code = tfa.old_value
        join form_status new_fs on new_fs.form_status_code = tfa.new_value
        left join timezone tzo on tzo.timezone_code = loc.timezone_code
        join user_master u on u.user_id = tfa.modified_by
        where tfa.tech_form_id = #techFormId#
        order by tfa.modified_date desc;
    </select>

    <select id="getMaxWorkingHrs" resultMap="workingHrsResult">
        select max(loc.appt_granularity) as granularity, max(timediff(lochrs.close_time, lochrs.open_time)) as working_hours
        from location_hours lochrs join location loc on lochrs.loc_id=loc.loc_id
        where loc.loc_id = #locId#;
    </select>

    <select id="getServiceForManageClientsForBusiness" resultMap="svcToBiz">
        select s.svc_id,sm.service_name, l.loc_id, l.loc_name from service s
        join business b on s.biz_id = b.biz_id
        join service_master sm on sm.service_code = s.service_code
        join location_to_service lts on lts.svc_id = s.svc_id
        join location l on l.loc_id = lts.loc_id and l.biz_id = b.biz_id
        where b.biz_id = #bizId# group by loc_id, svc_id;

    </select>

    <select id="getUpcomingPromotionListForClient" resultMap="addClientPromotionList">
        select
        promotion.promotion_id,
        promotion.promotion_name
        from location
        inner join timezone on location.timezone_code = timezone.timezone_code
        inner join promotion on promotion.is_published = 'Y'
        and promotion.is_active = 'Y'
        and (DATE(CONVERT_TZ(UTC_TIMESTAMP, 'UTC', timezone.timezone)) between promotion.start_time and promotion.end_time or promotion.start_time &gt; DATE(CONVERT_TZ(UTC_TIMESTAMP, 'UTC', timezone.timezone)))
        where promotion.biz_id = #bizId# group by promotion.promotion_id;

    </select>

    <select id="getAvailedProductsByClientId" resultType="java.lang.String">
        select p.package_name from appointment a
        left join package p on p.package_id = a.package_id
        where a.client_id = #clientId#
        and a.svc_id = if(#svcId# = '0', a.svc_id, #svcId#)
        and a.status_code = if(#statusCode# = '0', a.status_code, #statusCode#)
        and a.package_id = if(#pkgId# = '0', a.package_id, #pkgId#)
        and a.loc_id = if(#locId# = '0', a.loc_id, #locId#)
        group by a.package_id;
    </select>

    <select id="getAvailedLocationsByClientId" resultType="java.lang.String">
        select l.loc_name from appointment a
        left join location l on l.loc_id = a.loc_id
        where a.client_id = #clientId#
        and a.svc_id = if(#svcId# = '0', a.svc_id, #svcId#)
        and a.status_code = if(#statusCode# = '0', a.status_code, #statusCode#)
        and a.package_id = if(#pkgId# = '0', a.package_id, #pkgId#)
        and a.loc_id = if(#locId# = '0', a.loc_id, #locId#)
        group by a.loc_id;

    </select>

    <update id="updateClientAddress">
        update appointment set
        appt_address_line1 = #clientAddressLine1#,
        appt_address_line2 = #clientAddressLine2#,
        appt_city = #clientCity#,
        appt_state_code = #clientStateCode#,
        appt_country_code = #clientCountryCode#,
        appt_zip_code = #clientZipCode#
        where appt_id = #apptId#;
    </update>

    <select id="getLastCompletedAppointmentDate" resultType="java.lang.String">
        select
        CONVERT_TZ(max(ap.start_time),'UTC', t.timezone)
        from appointment ap
        join location loc on loc.loc_id = ap.loc_id
        join timezone t on loc.timezone_code = t.timezone_code
        where ap.client_id = #clientId# and ap.status_code = 'com';
    </select>

    <select id="getClientDetailsForDownload" resultMap="clientResultToDownload">
        select client.client_id,
        b.biz_id,
        client.email,
        client.first_name,
        client.last_name,
        client.gender,
        date_format(client.date_of_birth,'%d-%b-%Y') as date_of_birth,
        CONCAT(IF (client.address_line1 = '', '', CONCAT(REPLACE(client.address_line1,',',' '), ' ')),IF (client.address_line2 = '', '', REPLACE(client.address_line2,',',' '))) as address_line1,
        client.address_line2,
        client.city,
        state.state_name as state_code,
        client.zip_code,
        country.country_name as country_code,
        cell_phone,
        home_phone,
        work_phone,
        work_phone_ext,
        client.is_active,
        client.created_dt,
        client.created_by,
        client.modified_dt,
        client.modified_by,
        client.udf1,
        client.udf2,
        client.udf3,
        client.udf4,
        client.udf5,
        client.notify_by_SMS,
        client.blood_group,
        client.emergency_contact_no,
        client.referral_type,
        client.f_first_name,
        client.f_last_name,
        client.f_email,
        client.f_cell_phone,
        client.client_insurance_name,
        client.client_referred_source,
        (select CONVERT_TZ(max(ap.start_time),'UTC', t.timezone) from appointment ap where ap.status_code = 'com' and ap.client_id = client.client_id) as start_time
        from client
        join business b on b.biz_id=client.biz_id
        left join appointment a on a.client_id = client.client_id
        left join location l on l.loc_id = a.loc_id
        left join timezone t on l.timezone_code = t.timezone_code
        left join state on state.state_code = client.state_code
        left join country on country.country_code = client.country_code
        where client.client_id in ($clientList$) group by client.client_id;
    </select>

    <select id="isClientPresentInPromotion" resultType="java.lang.Integer">
        select count(*) from promotion_email where promotion_id = #promotionId# and biz_id = #bizId# and email_id = #clientEmail#;
    </select>

    <select id="getPromotionByPromotionCodeForPromotionValidation" resultMap="promotionResultForValidation">
        select
        p.promotion_id,
        p.promotion_name,
        p.description,
        p.loc_id,
        p.svc_id,
        p.start_time,
        p.end_time,
        p.is_active,
        p.packages,
        p.promotion_type_id,
        p.promotion_code,
        p.discount_type,
        p.discount_value,
        p.allowed_usage,
        p.current_usage,
        p.user_limit_usage,
        p.remainder_date,
        p.mail_date,
        p.is_published
        from promotion p where p.promotion_code = #promotionCode#;
    </select>

    <select id="getPromotionParticipents" resultMap="clientInfo">
        select
        c.client_id,
        c.first_name,
        c.last_name,
        c.email,
        c.cell_phone
        from client c join promotion_email  pe on pe.email_id = c.email and c.biz_id = pe.biz_id
        where pe.promotion_id = #promotionId#;
    </select>

    <select id="getEffectiveDateFromPackagePayoutDetails" resultType="java.lang.String">
        select effective_from from package_payout_details where package_id = #pkgId# and effective_upto = '0000:00:00';
    </select>

    <select id="getClientAddress" resultMap="clientAddressResult">
        select ifnull(address_line1,"") as address_line1, ifnull(address_line2,"") as address_line2, ifnull(city,"") as city, ifnull(state_code,"") as state_code, ifnull(country_code,"") as country_code, ifnull(zip_code,"") as zip_code from client where client_id = #clientId#;
    </select>

    <select id="getTimezonesFromCountry" resultMap="timezonesResult">
        select
        country.country_code,
        timezone.timezone_code,
        timezone.description
        from country_timezones
        join country on country_timezones.country_code = country.country_code
        join timezone on country_timezones.timezone_code = timezone.timezone_code
        where country.country_code = #countryCode#;
    </select>


</mapper>